<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Flash\application.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Flash\application.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Tue Jun 30 16:43:57 2020
<BR><P>
<H3>Maximum Stack Usage =       1688 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
pass2_fs_dither &rArr; fill_inverse_cmap &rArr; find_nearby_colors
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[2b8]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[515]">vApplicationStackOverflowHook</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[515]">vApplicationStackOverflowHook</a><BR>
 <LI><a href="#[1d]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1d]">NMI_Handler</a><BR>
 <LI><a href="#[1e]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1e]">HardFault_Handler</a><BR>
 <LI><a href="#[1f]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f]">MemManage_Handler</a><BR>
 <LI><a href="#[20]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20]">BusFault_Handler</a><BR>
 <LI><a href="#[21]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[21]">UsageFault_Handler</a><BR>
 <LI><a href="#[23]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[23]">DebugMon_Handler</a><BR>
 <LI><a href="#[38]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[38]">ADC_IRQHandler</a><BR>
 <LI><a href="#[3f3]">touchgfx::TextProvider::getNextCharInternal()</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3f3]">touchgfx::TextProvider::getNextCharInternal()</a><BR>
 <LI><a href="#[449]">touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[449]">touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)</a><BR>
 <LI><a href="#[505]">vApplicationMallocFailedHook</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[505]">vApplicationMallocFailedHook</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[38]">ADC_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[20]">BusFault_Handler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[3a]">CAN1_RX0_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[3b]">CAN1_RX1_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[3c]">CAN1_SCE_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[39]">CAN1_TX_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[66]">CAN2_RX0_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[67]">CAN2_RX1_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[68]">CAN2_SCE_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[65]">CAN2_TX_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[83]">CEC_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[74]">DCMI_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[31]">DMA1_Stream0_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[32]">DMA1_Stream1_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[33]">DMA1_Stream2_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[34]">DMA1_Stream3_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[35]">DMA1_Stream4_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[36]">DMA1_Stream5_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[37]">DMA1_Stream6_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[55]">DMA1_Stream7_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[7f]">DMA2D_IRQHandler</a> from stm32f7hal.o(i.DMA2D_IRQHandler) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[5e]">DMA2_Stream0_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[5f]">DMA2_Stream1_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[60]">DMA2_Stream2_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[61]">DMA2_Stream3_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[62]">DMA2_Stream4_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[6a]">DMA2_Stream5_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[6b]">DMA2_Stream6_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[6c]">DMA2_Stream7_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[23]">DebugMon_Handler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[63]">ETH_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[64]">ETH_WKUP_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[2c]">EXTI0_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[4e]">EXTI15_10_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[2d]">EXTI1_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[2e]">EXTI2_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[2f]">EXTI3_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[30]">EXTI4_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[3d]">EXTI9_5_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[2a]">FLASH_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[56]">FMC_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[76]">FPU_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[1e]">HardFault_Handler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[46]">I2C1_ER_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[45]">I2C1_EV_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[48]">I2C2_ER_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[47]">I2C2_EV_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[6f]">I2C3_ER_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[6e]">I2C3_EV_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[85]">I2C4_ER_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[84]">I2C4_EV_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[82]">LPTIM1_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[7e]">LTDC_ER_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[7d]">LTDC_IRQHandler</a> from stm32f7hal.o(i.LTDC_IRQHandler) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[1f]">MemManage_Handler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[1d]">NMI_Handler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[69]">OTG_FS_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[50]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[71]">OTG_HS_EP1_IN_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[70]">OTG_HS_EP1_OUT_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[73]">OTG_HS_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[72]">OTG_HS_WKUP_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[27]">PVD_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[24]">PendSV_Handler</a> from port.o(.emb_text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[81]">QUADSPI_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[2b]">RCC_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[75]">RNG_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[4f]">RTC_Alarm_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[29]">RTC_WKUP_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[1c]">Reset_Handler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[7c]">SAI1_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[80]">SAI2_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[57]">SDMMC1_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[86]">SPDIF_RX_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[49]">SPI1_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[4a]">SPI2_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[59]">SPI3_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[79]">SPI4_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[7a]">SPI5_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[7b]">SPI6_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[22]">SVC_Handler</a> from port.o(.emb_text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[25]">SysTick_Handler</a> from boardconfiguration.o(i.SysTick_Handler) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[87]">SystemInit</a> from system_stm32f7xx.o(i.SystemInit) referenced from startup_stm32f746xx.o(.text)
 <LI><a href="#[28]">TAMP_STAMP_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[3e]">TIM1_BRK_TIM9_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[41]">TIM1_CC_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[40]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[3f]">TIM1_UP_TIM10_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[42]">TIM2_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[43]">TIM3_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[44]">TIM4_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[58]">TIM5_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[5c]">TIM6_DAC_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[5d]">TIM7_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[51]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[54]">TIM8_CC_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[53]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[52]">TIM8_UP_TIM13_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[5a]">UART4_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[5b]">UART5_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[77]">UART7_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[78]">UART8_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[4b]">USART1_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[4c]">USART2_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[4d]">USART3_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[6d]">USART6_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[21]">UsageFault_Handler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[26]">WWDG_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[116]">IdleTaskHook(void*)</a> from oswrappers.o(i._Z12IdleTaskHookPv) referenced from oswrappers.o(i.vApplicationIdleHook)
 <LI><a href="#[f6]">GUITask(void*)</a> from main.o(i._Z7GUITaskPv) referenced from main.o(i.main)
 <LI><a href="#[12f]">STM32F7DMA::initialize()</a> from stm32f7dma.o(i._ZN10STM32F7DMA10initializeEv) referenced from stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
 <LI><a href="#[12c]">STM32F7DMA::getBlitCaps()</a> from stm32f7dma.o(i._ZN10STM32F7DMA11getBlitCapsEv) referenced from stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
 <LI><a href="#[136]">STM32F7DMA::setupDataCopy(const touchgfx::BlitOp&)</a> from stm32f7dma.o(i._ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE) referenced from stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
 <LI><a href="#[137]">STM32F7DMA::setupDataFill(const touchgfx::BlitOp&)</a> from stm32f7dma.o(i._ZN10STM32F7DMA13setupDataFillERKN8touchgfx6BlitOpE) referenced from stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
 <LI><a href="#[13b]">STM32F7DMA::setupFillWithAlpha(const touchgfx::BlitOp&)</a> from stm32f7dma.o(i._ZN10STM32F7DMA18setupFillWithAlphaERKN8touchgfx6BlitOpE) referenced from stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
 <LI><a href="#[131]">STM32F7DMA::signalDMAInterrupt()</a> from stm32f7dma.o(i._ZN10STM32F7DMA18signalDMAInterruptEv) referenced from stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
 <LI><a href="#[b0]">STM32F7DMA::~STM32F7DMA()</a> from stm32f7dma.o(i._ZN10STM32F7DMAD1Ev) referenced from stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
 <LI><a href="#[b0]">STM32F7DMA::~STM32F7DMA()</a> from stm32f7dma.o(i._ZN10STM32F7DMAD1Ev) referenced from boardconfiguration.o(i.__sti___22_BoardConfiguration_cpp_dceb80ee)
 <LI><a href="#[14e]">STM32F7HAL::enableInterrupts()</a> from stm32f7hal.o(i._ZN10STM32F7HAL16enableInterruptsEv) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[13e]">STM32F7HAL::flushFrameBuffer(const touchgfx::Rect&)</a> from stm32f7hal.o(i._ZN10STM32F7HAL16flushFrameBufferERKN8touchgfx4RectE) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[14f]">STM32F7HAL::disableInterrupts()</a> from stm32f7hal.o(i._ZN10STM32F7HAL17disableInterruptsEv) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[155]">STM32F7HAL::getTFTCurrentLine()</a> from stm32f7hal.o(i._ZN10STM32F7HAL17getTFTCurrentLineEv) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[15a]">STM32F7HAL::setTFTFrameBuffer(unsigned short*)</a> from stm32f7hal.o(i._ZN10STM32F7HAL17setTFTFrameBufferEPt) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[14d]">STM32F7HAL::configureInterrupts()</a> from stm32f7hal.o(i._ZN10STM32F7HAL19configureInterruptsEv) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[150]">STM32F7HAL::enableLCDControllerInterrupt()</a> from stm32f7hal.o(i._ZN10STM32F7HAL28enableLCDControllerInterruptEv) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[11a]">STM32F7HAL::~STM32F7HAL()</a> from stm32f7hal.o(i._ZN10STM32F7HALD1Ev) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[11a]">STM32F7HAL::~STM32F7HAL()</a> from stm32f7hal.o(i._ZN10STM32F7HALD1Ev) referenced from boardconfiguration.o(t._ZN8touchgfx21touchgfx_generic_initI10STM32F7HALEERNS_3HALERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEssPtjj)
 <LI><a href="#[11b]">FrontendHeap::~FrontendHeap()</a> from boardconfiguration.o(i._ZN12FrontendHeapD1Ev) referenced from boardconfiguration.o(.constdata__ZTV12FrontendHeap)
 <LI><a href="#[11b]">FrontendHeap::~FrontendHeap()</a> from boardconfiguration.o(i._ZN12FrontendHeapD1Ev) referenced from boardconfiguration.o(t._ZN8touchgfx21touchgfx_generic_initI10STM32F7HALEERNS_3HALERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEssPtjj)
 <LI><a href="#[160]">MainViewBase::setupScreen()</a> from mainviewbase.o(i._ZN12MainViewBase11setupScreenEv) referenced from mainviewbase.o(.constdata__ZTV12MainViewBase)
 <LI><a href="#[16a]">MainViewBase::buttonUpClicked()</a> from mainviewbase.o(i._ZN12MainViewBase15buttonUpClickedEv) referenced from mainviewbase.o(.constdata__ZTV12MainViewBase)
 <LI><a href="#[16d]">MainViewBase::buttonRunClicked()</a> from mainviewbase.o(i._ZN12MainViewBase16buttonRunClickedEv) referenced from mainviewbase.o(.constdata__ZTV12MainViewBase)
 <LI><a href="#[169]">MainViewBase::leftButtonClicked()</a> from mainviewbase.o(i._ZN12MainViewBase17leftButtonClickedEv) referenced from mainviewbase.o(.constdata__ZTV12MainViewBase)
 <LI><a href="#[16c]">MainViewBase::buttonPauseClicked()</a> from mainviewbase.o(i._ZN12MainViewBase18buttonPauseClickedEv) referenced from mainviewbase.o(.constdata__ZTV12MainViewBase)
 <LI><a href="#[16b]">MainViewBase::buttonStartClicked()</a> from mainviewbase.o(i._ZN12MainViewBase18buttonStartClickedEv) referenced from mainviewbase.o(.constdata__ZTV12MainViewBase)
 <LI><a href="#[168]">MainViewBase::rightButtonClicked()</a> from mainviewbase.o(i._ZN12MainViewBase18rightButtonClickedEv) referenced from mainviewbase.o(.constdata__ZTV12MainViewBase)
 <LI><a href="#[129]">MainViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)</a> from mainviewbase.o(i._ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE) referenced from mainviewbase.o(.constdata)
 <LI><a href="#[15e]">MainViewBase::~MainViewBase()</a> from mainview.o(i._ZN12MainViewBaseD1Ev) referenced from mainviewbase.o(.constdata__ZTV12MainViewBase)
 <LI><a href="#[16f]">AboutViewBase::setupScreen()</a> from aboutviewbase.o(i._ZN13AboutViewBase11setupScreenEv) referenced from aboutviewbase.o(.constdata__ZTV13AboutViewBase)
 <LI><a href="#[124]">AboutViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)</a> from aboutviewbase.o(i._ZN13AboutViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE) referenced from aboutviewbase.o(.constdata)
 <LI><a href="#[16e]">AboutViewBase::~AboutViewBase()</a> from aboutviewbase.o(i._ZN13AboutViewBaseD1Ev) referenced from aboutviewbase.o(.constdata__ZTV13AboutViewBase)
 <LI><a href="#[171]">MainPresenter::deactivate()</a> from mainpresenter.o(i._ZN13MainPresenter10deactivateEv) referenced from mainpresenter.o(.constdata__ZTV13MainPresenter)
 <LI><a href="#[170]">MainPresenter::activate()</a> from mainpresenter.o(i._ZN13MainPresenter8activateEv) referenced from mainpresenter.o(.constdata__ZTV13MainPresenter)
 <LI><a href="#[172]">MainPresenter::~MainPresenter()</a> from mainpresenter.o(i._ZN13MainPresenterD1Ev) referenced from mainpresenter.o(.constdata__ZTV13MainPresenter)
 <LI><a href="#[174]">ModelListener::gotoMainScreenMode()</a> from aboutpresenter.o(i._ZN13ModelListener18gotoMainScreenModeEv) referenced from mainpresenter.o(.constdata__ZTV13MainPresenter)
 <LI><a href="#[174]">ModelListener::gotoMainScreenMode()</a> from aboutpresenter.o(i._ZN13ModelListener18gotoMainScreenModeEv) referenced from aboutpresenter.o(.constdata__ZTV14AboutPresenter)
 <LI><a href="#[174]">ModelListener::gotoMainScreenMode()</a> from aboutpresenter.o(i._ZN13ModelListener18gotoMainScreenModeEv) referenced from videopresenter.o(.constdata__ZTV14VideoPresenter)
 <LI><a href="#[174]">ModelListener::gotoMainScreenMode()</a> from aboutpresenter.o(i._ZN13ModelListener18gotoMainScreenModeEv) referenced from screensaverpresenter.o(.constdata__ZTV20ScreenSaverPresenter)
 <LI><a href="#[173]">ModelListener::gotoScreenSaverMode()</a> from aboutpresenter.o(i._ZN13ModelListener19gotoScreenSaverModeEv) referenced from mainpresenter.o(.constdata__ZTV13MainPresenter)
 <LI><a href="#[173]">ModelListener::gotoScreenSaverMode()</a> from aboutpresenter.o(i._ZN13ModelListener19gotoScreenSaverModeEv) referenced from aboutpresenter.o(.constdata__ZTV14AboutPresenter)
 <LI><a href="#[173]">ModelListener::gotoScreenSaverMode()</a> from aboutpresenter.o(i._ZN13ModelListener19gotoScreenSaverModeEv) referenced from videopresenter.o(.constdata__ZTV14VideoPresenter)
 <LI><a href="#[185]">ScrollingMenu::handleDragEvent(const touchgfx::DragEvent&)</a> from scrollingmenu.o(i._ZN13ScrollingMenu15handleDragEventERKN8touchgfx9DragEventE) referenced from scrollingmenu.o(.constdata__ZTV13ScrollingMenu)
 <LI><a href="#[186]">ScrollingMenu::handleTickEvent()</a> from scrollingmenu.o(i._ZN13ScrollingMenu15handleTickEventEv) referenced from scrollingmenu.o(.constdata__ZTV13ScrollingMenu)
 <LI><a href="#[183]">ScrollingMenu::handleClickEvent(const touchgfx::ClickEvent&)</a> from scrollingmenu.o(i._ZN13ScrollingMenu16handleClickEventERKN8touchgfx10ClickEventE) referenced from scrollingmenu.o(.constdata__ZTV13ScrollingMenu)
 <LI><a href="#[184]">ScrollingMenu::handleGestureEvent(const touchgfx::GestureEvent&)</a> from scrollingmenu.o(i._ZN13ScrollingMenu18handleGestureEventERKN8touchgfx12GestureEventE) referenced from scrollingmenu.o(.constdata__ZTV13ScrollingMenu)
 <LI><a href="#[175]">ScrollingMenu::~ScrollingMenu()</a> from mainview.o(i._ZN13ScrollingMenuD1Ev) referenced from scrollingmenu.o(.constdata__ZTV13ScrollingMenu)
 <LI><a href="#[18f]">VideoViewBase::setupScreen()</a> from videoviewbase.o(i._ZN13VideoViewBase11setupScreenEv) referenced from videoviewbase.o(.constdata__ZTV13VideoViewBase)
 <LI><a href="#[12b]">VideoViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)</a> from videoviewbase.o(i._ZN13VideoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE) referenced from videoviewbase.o(.constdata)
 <LI><a href="#[18e]">VideoViewBase::~VideoViewBase()</a> from videoviewbase.o(i._ZN13VideoViewBaseD1Ev) referenced from videoviewbase.o(.constdata__ZTV13VideoViewBase)
 <LI><a href="#[191]">AboutPresenter::deactivate()</a> from aboutpresenter.o(i._ZN14AboutPresenter10deactivateEv) referenced from aboutpresenter.o(.constdata__ZTV14AboutPresenter)
 <LI><a href="#[190]">AboutPresenter::activate()</a> from aboutpresenter.o(i._ZN14AboutPresenter8activateEv) referenced from aboutpresenter.o(.constdata__ZTV14AboutPresenter)
 <LI><a href="#[192]">AboutPresenter::~AboutPresenter()</a> from aboutpresenter.o(i._ZN14AboutPresenterD1Ev) referenced from aboutpresenter.o(.constdata__ZTV14AboutPresenter)
 <LI><a href="#[118]">ImageContainer::ImageContainer()</a> from mainview.o(i._ZN14ImageContainerC1Ev) referenced from mainview.o(t._ZN20SparseContainerItemsI14ImageContainerLi5EEC1Ev)
 <LI><a href="#[119]">ImageContainer::~ImageContainer()</a> from mainview.o(i._ZN14ImageContainerD1Ev) referenced from mainview.o(.constdata__ZTV14ImageContainer)
 <LI><a href="#[119]">ImageContainer::~ImageContainer()</a> from mainview.o(i._ZN14ImageContainerD1Ev) referenced from mainview.o(t._ZN20SparseContainerItemsI14ImageContainerLi5EED1Ev)
 <LI><a href="#[19d]">ParticleEffect::handleDragEvent(const touchgfx::DragEvent&)</a> from particleeffect.o(i._ZN14ParticleEffect15handleDragEventERKN8touchgfx9DragEventE) referenced from particleeffect.o(.constdata__ZTV14ParticleEffect)
 <LI><a href="#[19e]">ParticleEffect::handleTickEvent()</a> from particleeffect.o(i._ZN14ParticleEffect15handleTickEventEv) referenced from particleeffect.o(.constdata__ZTV14ParticleEffect)
 <LI><a href="#[19c]">ParticleEffect::handleClickEvent(const touchgfx::ClickEvent&)</a> from particleeffect.o(i._ZN14ParticleEffect16handleClickEventERKN8touchgfx10ClickEventE) referenced from particleeffect.o(.constdata__ZTV14ParticleEffect)
 <LI><a href="#[198]">ParticleEffect::~ParticleEffect()</a> from particleeffect.o(i._ZN14ParticleEffectD1Ev) referenced from particleeffect.o(.constdata__ZTV14ParticleEffect)
 <LI><a href="#[1a4]">TouchForwarder::handleDragEvent(const touchgfx::DragEvent&)</a> from touchforwarder.o(i._ZN14TouchForwarder15handleDragEventERKN8touchgfx9DragEventE) referenced from touchforwarder.o(.constdata__ZTV14TouchForwarder)
 <LI><a href="#[1a2]">TouchForwarder::handleClickEvent(const touchgfx::ClickEvent&)</a> from touchforwarder.o(i._ZN14TouchForwarder16handleClickEventERKN8touchgfx10ClickEventE) referenced from touchforwarder.o(.constdata__ZTV14TouchForwarder)
 <LI><a href="#[1a3]">TouchForwarder::handleGestureEvent(const touchgfx::GestureEvent&)</a> from touchforwarder.o(i._ZN14TouchForwarder18handleGestureEventERKN8touchgfx12GestureEventE) referenced from touchforwarder.o(.constdata__ZTV14TouchForwarder)
 <LI><a href="#[1a6]">VideoPresenter::deactivate()</a> from videopresenter.o(i._ZN14VideoPresenter10deactivateEv) referenced from videopresenter.o(.constdata__ZTV14VideoPresenter)
 <LI><a href="#[1a5]">VideoPresenter::activate()</a> from videopresenter.o(i._ZN14VideoPresenter8activateEv) referenced from videopresenter.o(.constdata__ZTV14VideoPresenter)
 <LI><a href="#[1a7]">VideoPresenter::~VideoPresenter()</a> from videopresenter.o(i._ZN14VideoPresenterD1Ev) referenced from videopresenter.o(.constdata__ZTV14VideoPresenter)
 <LI><a href="#[1a9]">ScreenSaverView::setupScreen()</a> from screensaverview.o(i._ZN15ScreenSaverView11setupScreenEv) referenced from screensaverview.o(.constdata__ZTV15ScreenSaverView)
 <LI><a href="#[1ab]">ScreenSaverView::tearDownScreen()</a> from screensaverview.o(i._ZN15ScreenSaverView14tearDownScreenEv) referenced from screensaverview.o(.constdata__ZTV15ScreenSaverView)
 <LI><a href="#[1ad]">ScreenSaverView::endScreenSaverAnimation()</a> from screensaverview.o(i._ZN15ScreenSaverView23endScreenSaverAnimationEv) referenced from screensaverview.o(.constdata__ZTV15ScreenSaverView)
 <LI><a href="#[1a8]">ScreenSaverView::~ScreenSaverView()</a> from screensaverview.o(i._ZN15ScreenSaverViewD1Ev) referenced from screensaverview.o(.constdata__ZTV15ScreenSaverView)
 <LI><a href="#[1af]">FrontendApplication::handleDragEvent(const touchgfx::DragEvent&)</a> from frontendapplication.o(i._ZN19FrontendApplication15handleDragEventERKN8touchgfx9DragEventE) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[1b2]">FrontendApplication::handleTickEvent()</a> from frontendapplication.o(i._ZN19FrontendApplication15handleTickEventEv) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[1ae]">FrontendApplication::handleClickEvent(const touchgfx::ClickEvent&)</a> from frontendapplication.o(i._ZN19FrontendApplication16handleClickEventERKN8touchgfx10ClickEventE) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[1b8]">ScreenSaverViewBase::setupScreen()</a> from screensaverviewbase.o(i._ZN19ScreenSaverViewBase11setupScreenEv) referenced from screensaverviewbase.o(.constdata__ZTV19ScreenSaverViewBase)
 <LI><a href="#[1aa]">ScreenSaverViewBase::afterTransition()</a> from screensaverviewbase.o(i._ZN19ScreenSaverViewBase15afterTransitionEv) referenced from screensaverview.o(.constdata__ZTV15ScreenSaverView)
 <LI><a href="#[1aa]">ScreenSaverViewBase::afterTransition()</a> from screensaverviewbase.o(i._ZN19ScreenSaverViewBase15afterTransitionEv) referenced from screensaverviewbase.o(.constdata__ZTV19ScreenSaverViewBase)
 <LI><a href="#[1ac]">ScreenSaverViewBase::handleTickEvent()</a> from screensaverviewbase.o(i._ZN19ScreenSaverViewBase15handleTickEventEv) referenced from screensaverview.o(.constdata__ZTV15ScreenSaverView)
 <LI><a href="#[1ac]">ScreenSaverViewBase::handleTickEvent()</a> from screensaverviewbase.o(i._ZN19ScreenSaverViewBase15handleTickEventEv) referenced from screensaverviewbase.o(.constdata__ZTV19ScreenSaverViewBase)
 <LI><a href="#[12a]">ScreenSaverViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)</a> from screensaverviewbase.o(i._ZN19ScreenSaverViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE) referenced from screensaverviewbase.o(.constdata)
 <LI><a href="#[1b9]">ScreenSaverViewBase::endScreenSaverAnimation()</a> from screensaverviewbase.o(i._ZN19ScreenSaverViewBase23endScreenSaverAnimationEv) referenced from screensaverviewbase.o(.constdata__ZTV19ScreenSaverViewBase)
 <LI><a href="#[1b7]">ScreenSaverViewBase::~ScreenSaverViewBase()</a> from screensaverviewbase.o(i._ZN19ScreenSaverViewBaseD1Ev) referenced from screensaverviewbase.o(.constdata__ZTV19ScreenSaverViewBase)
 <LI><a href="#[1bb]">ScreenSaverPresenter::deactivate()</a> from screensaverpresenter.o(i._ZN20ScreenSaverPresenter10deactivateEv) referenced from screensaverpresenter.o(.constdata__ZTV20ScreenSaverPresenter)
 <LI><a href="#[1ba]">ScreenSaverPresenter::activate()</a> from screensaverpresenter.o(i._ZN20ScreenSaverPresenter8activateEv) referenced from screensaverpresenter.o(.constdata__ZTV20ScreenSaverPresenter)
 <LI><a href="#[1bc]">ScreenSaverPresenter::~ScreenSaverPresenter()</a> from screensaverpresenter.o(i._ZN20ScreenSaverPresenterD1Ev) referenced from screensaverpresenter.o(.constdata__ZTV20ScreenSaverPresenter)
 <LI><a href="#[11d]">SparseContainerItems&lang;ImageContainer, (int)5&rang;::getElement(int, touchgfx::Container**)</a> from mainview.o(t._ZN20SparseContainerItemsI14ImageContainerLi5EE10getElementEiPPN8touchgfx9ContainerE) referenced from mainview.o(.constdata)
 <LI><a href="#[1be]">SparseContainerItems&lang;ImageContainer, (int)5&rang;::~SparseContainerItems()</a> from mainview.o(t._ZN20SparseContainerItemsI14ImageContainerLi5EED1Ev) referenced from mainview.o(.constdata__ZTV20SparseContainerItemsI14ImageContainerLi5EE)
 <LI><a href="#[af]">ApplicationFontProvider::~ApplicationFontProvider()</a> from boardconfiguration.o(i._ZN23ApplicationFontProviderD1Ev) referenced from applicationfontprovider.o(.constdata__ZTV23ApplicationFontProvider)
 <LI><a href="#[af]">ApplicationFontProvider::~ApplicationFontProvider()</a> from boardconfiguration.o(i._ZN23ApplicationFontProviderD1Ev) referenced from boardconfiguration.o(i.__sti___22_BoardConfiguration_cpp_dceb80ee)
 <LI><a href="#[125]">FrontendApplicationBase::gotoMainScreenNoTransitionImpl()</a> from frontendapplicationbase.o(i._ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv) referenced from frontendapplicationbase.o(.constdata)
 <LI><a href="#[126]">FrontendApplicationBase::gotoAboutScreenNoTransitionImpl()</a> from frontendapplicationbase.o(i._ZN23FrontendApplicationBase31gotoAboutScreenNoTransitionImplEv) referenced from frontendapplicationbase.o(.constdata)
 <LI><a href="#[127]">FrontendApplicationBase::gotoVideoScreenNoTransitionImpl()</a> from frontendapplicationbase.o(i._ZN23FrontendApplicationBase31gotoVideoScreenNoTransitionImplEv) referenced from frontendapplicationbase.o(.constdata)
 <LI><a href="#[128]">FrontendApplicationBase::gotoScreenSaverScreenNoTransitionImpl()</a> from frontendapplicationbase.o(i._ZN23FrontendApplicationBase37gotoScreenSaverScreenNoTransitionImplEv) referenced from frontendapplicationbase.o(.constdata)
 <LI><a href="#[1c2]">FrontendApplicationBase::~FrontendApplicationBase()</a> from boardconfiguration.o(i._ZN23FrontendApplicationBaseD1Ev) referenced from boardconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[1c4]">MainView::setupScreen()</a> from mainview.o(i._ZN8MainView11setupScreenEv) referenced from mainview.o(.constdata__ZTV8MainView)
 <LI><a href="#[1c5]">MainView::tearDownScreen()</a> from mainview.o(i._ZN8MainView14tearDownScreenEv) referenced from mainview.o(.constdata__ZTV8MainView)
 <LI><a href="#[1ca]">MainView::buttonUpClicked()</a> from mainview.o(i._ZN8MainView15buttonUpClickedEv) referenced from mainview.o(.constdata__ZTV8MainView)
 <LI><a href="#[1c6]">MainView::handleDragEvent(const touchgfx::DragEvent&)</a> from mainview.o(i._ZN8MainView15handleDragEventERKN8touchgfx9DragEventE) referenced from mainview.o(.constdata__ZTV8MainView)
 <LI><a href="#[1c7]">MainView::handleTickEvent()</a> from mainview.o(i._ZN8MainView15handleTickEventEv) referenced from mainview.o(.constdata__ZTV8MainView)
 <LI><a href="#[1cd]">MainView::buttonRunClicked()</a> from mainview.o(i._ZN8MainView16buttonRunClickedEv) referenced from mainview.o(.constdata__ZTV8MainView)
 <LI><a href="#[122]">MainView::textDashFadeDone(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</a> from mainview.o(i._ZN8MainView16textDashFadeDoneERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE) referenced from mainview.o(.constdata)
 <LI><a href="#[1c9]">MainView::leftButtonClicked()</a> from mainview.o(i._ZN8MainView17leftButtonClickedEv) referenced from mainview.o(.constdata__ZTV8MainView)
 <LI><a href="#[1cc]">MainView::buttonPauseClicked()</a> from mainview.o(i._ZN8MainView18buttonPauseClickedEv) referenced from mainview.o(.constdata__ZTV8MainView)
 <LI><a href="#[1cb]">MainView::buttonStartClicked()</a> from mainview.o(i._ZN8MainView18buttonStartClickedEv) referenced from mainview.o(.constdata__ZTV8MainView)
 <LI><a href="#[1c8]">MainView::rightButtonClicked()</a> from mainview.o(i._ZN8MainView18rightButtonClickedEv) referenced from mainview.o(.constdata__ZTV8MainView)
 <LI><a href="#[11f]">MainView::initializeBackMenuItem(int, int)</a> from mainview.o(i._ZN8MainView22initializeBackMenuItemEii) referenced from mainview.o(.constdata)
 <LI><a href="#[120]">MainView::centerAnimatedImageDone(const touchgfx::AnimatedImage&)</a> from mainview.o(i._ZN8MainView23centerAnimatedImageDoneERKN8touchgfx13AnimatedImageE) referenced from mainview.o(.constdata)
 <LI><a href="#[121]">MainView::centerMenuAnimationEnded(int)</a> from mainview.o(i._ZN8MainView24centerMenuAnimationEndedEi) referenced from mainview.o(.constdata)
 <LI><a href="#[11e]">MainView::initializeCenterMenuItem(int, int)</a> from mainview.o(i._ZN8MainView24initializeCenterMenuItemEii) referenced from mainview.o(.constdata)
 <LI><a href="#[1c3]">MainView::~MainView()</a> from mainview.o(i._ZN8MainViewD1Ev) referenced from mainview.o(.constdata__ZTV8MainView)
 <LI><a href="#[8f]">Particle::Particle()</a> from particleeffect.o(i._ZN8ParticleC1Ev) referenced from particleeffect.o(i._ZN14ParticleEffectC1Ev)
 <LI><a href="#[90]">Particle::~Particle()</a> from particleeffect.o(i._ZN8ParticleD1Ev) referenced from particleeffect.o(.constdata__ZTV8Particle)
 <LI><a href="#[90]">Particle::~Particle()</a> from particleeffect.o(i._ZN8ParticleD1Ev) referenced from particleeffect.o(i._ZN14ParticleEffectD1Ev)
 <LI><a href="#[204]">touchgfx::Transition::setScreenContainer(touchgfx::Container&)</a> from frontendapplicationbase.o(i._ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[203]">touchgfx::Transition::init()</a> from frontendapplicationbase.o(i._ZN8touchgfx10Transition4initEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[202]">touchgfx::Transition::tearDown()</a> from frontendapplicationbase.o(i._ZN8touchgfx10Transition8tearDownEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[1b1]">touchgfx::Application::handleKeyEvent(unsigned char)</a> from application.o(i._ZN8touchgfx11Application14handleKeyEventEh) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[1b1]">touchgfx::Application::handleKeyEvent(unsigned char)</a> from application.o(i._ZN8touchgfx11Application14handleKeyEventEh) referenced from boardconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[1b1]">touchgfx::Application::handleKeyEvent(unsigned char)</a> from application.o(i._ZN8touchgfx11Application14handleKeyEventEh) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[1b1]">touchgfx::Application::handleKeyEvent(unsigned char)</a> from application.o(i._ZN8touchgfx11Application14handleKeyEventEh) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[1c0]">touchgfx::Application::handleDragEvent(const touchgfx::DragEvent&)</a> from application.o(i._ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE) referenced from boardconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[1c0]">touchgfx::Application::handleDragEvent(const touchgfx::DragEvent&)</a> from application.o(i._ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[1c0]">touchgfx::Application::handleDragEvent(const touchgfx::DragEvent&)</a> from application.o(i._ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[1c1]">touchgfx::Application::handleTickEvent()</a> from application.o(i._ZN8touchgfx11Application15handleTickEventEv) referenced from boardconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[1c1]">touchgfx::Application::handleTickEvent()</a> from application.o(i._ZN8touchgfx11Application15handleTickEventEv) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[1c1]">touchgfx::Application::handleTickEvent()</a> from application.o(i._ZN8touchgfx11Application15handleTickEventEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[1bf]">touchgfx::Application::handleClickEvent(const touchgfx::ClickEvent&)</a> from application.o(i._ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE) referenced from boardconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[1bf]">touchgfx::Application::handleClickEvent(const touchgfx::ClickEvent&)</a> from application.o(i._ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[1bf]">touchgfx::Application::handleClickEvent(const touchgfx::ClickEvent&)</a> from application.o(i._ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[1b0]">touchgfx::Application::handleGestureEvent(const touchgfx::GestureEvent&)</a> from application.o(i._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[1b0]">touchgfx::Application::handleGestureEvent(const touchgfx::GestureEvent&)</a> from application.o(i._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE) referenced from boardconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[1b0]">touchgfx::Application::handleGestureEvent(const touchgfx::GestureEvent&)</a> from application.o(i._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[1b0]">touchgfx::Application::handleGestureEvent(const touchgfx::GestureEvent&)</a> from application.o(i._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[1b6]">touchgfx::Application::cacheDrawOperations(bool)</a> from application.o(i._ZN8touchgfx11Application19cacheDrawOperationsEb) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[1b6]">touchgfx::Application::cacheDrawOperations(bool)</a> from application.o(i._ZN8touchgfx11Application19cacheDrawOperationsEb) referenced from boardconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[1b6]">touchgfx::Application::cacheDrawOperations(bool)</a> from application.o(i._ZN8touchgfx11Application19cacheDrawOperationsEb) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[1b6]">touchgfx::Application::cacheDrawOperations(bool)</a> from application.o(i._ZN8touchgfx11Application19cacheDrawOperationsEb) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[1d9]">touchgfx::Application::handlePendingScreenTransition()</a> from application.o(i._ZN8touchgfx11Application29handlePendingScreenTransitionEv) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[1b5]">touchgfx::Application::draw(touchgfx::Rect&)</a> from application.o(i._ZN8touchgfx11Application4drawERNS_4RectE) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[1b5]">touchgfx::Application::draw(touchgfx::Rect&)</a> from application.o(i._ZN8touchgfx11Application4drawERNS_4RectE) referenced from boardconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[1b5]">touchgfx::Application::draw(touchgfx::Rect&)</a> from application.o(i._ZN8touchgfx11Application4drawERNS_4RectE) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[1b5]">touchgfx::Application::draw(touchgfx::Rect&)</a> from application.o(i._ZN8touchgfx11Application4drawERNS_4RectE) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[1b4]">touchgfx::Application::draw()</a> from application.o(i._ZN8touchgfx11Application4drawEv) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[1b4]">touchgfx::Application::draw()</a> from application.o(i._ZN8touchgfx11Application4drawEv) referenced from boardconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[1b4]">touchgfx::Application::draw()</a> from application.o(i._ZN8touchgfx11Application4drawEv) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[1b4]">touchgfx::Application::draw()</a> from application.o(i._ZN8touchgfx11Application4drawEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[1e0]">touchgfx::CanvasWidget::setPainter(touchgfx::AbstractPainter&)</a> from canvaswidget.o(i._ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[1e0]">touchgfx::CanvasWidget::setPainter(touchgfx::AbstractPainter&)</a> from canvaswidget.o(i._ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE) referenced from mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6CircleEEE)
 <LI><a href="#[1e0]">touchgfx::CanvasWidget::setPainter(touchgfx::AbstractPainter&)</a> from canvaswidget.o(i._ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE) referenced from circle.o(.constdata__ZTVN8touchgfx6CircleE)
 <LI><a href="#[1dc]">touchgfx::CanvasWidget::~CanvasWidget__sub_object()</a> from canvaswidget.o(i._ZN8touchgfx12CanvasWidgetD2Ev) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[1e6]">touchgfx::FadeAnimator&lang;touchgfx::AnimatedImage&rang;::handleTickEvent()</a> from mainview.o(t._ZN8touchgfx12FadeAnimatorINS_13AnimatedImageEE15handleTickEventEv) referenced from mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_13AnimatedImageEEE)
 <LI><a href="#[1ec]">touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithOneWildcard&rang;::handleTickEvent()</a> from mainviewbase.o(t._ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE15handleTickEventEv) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEEE)
 <LI><a href="#[1f0]">touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::handleTickEvent()</a> from mainviewbase.o(t._ZN8touchgfx12FadeAnimatorINS_5ImageEE15handleTickEventEv) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[1f4]">touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::handleTickEvent()</a> from mainviewbase.o(t._ZN8touchgfx12FadeAnimatorINS_6ButtonEE15handleTickEventEv) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
 <LI><a href="#[1f6]">touchgfx::FadeAnimator&lang;touchgfx::Circle&rang;::handleTickEvent()</a> from mainview.o(t._ZN8touchgfx12FadeAnimatorINS_6CircleEE15handleTickEventEv) referenced from mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6CircleEEE)
 <LI><a href="#[1fa]">touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::handleTickEvent()</a> from mainviewbase.o(t._ZN8touchgfx12FadeAnimatorINS_8TextAreaEE15handleTickEventEv) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[1fe]">touchgfx::MoveAnimator&lang;touchgfx::Image&rang;::handleTickEvent()</a> from mainview.o(t._ZN8touchgfx12MoveAnimatorINS_5ImageEE15handleTickEventEv) referenced from mainview.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
 <LI><a href="#[1ff]">touchgfx::MoveAnimator&lang;touchgfx::Button&rang;::handleTickEvent()</a> from mainviewbase.o(t._ZN8touchgfx12MoveAnimatorINS_6ButtonEE15handleTickEventEv) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_6ButtonEEE)
 <LI><a href="#[201]">touchgfx::NoTransition::handleTickEvent()</a> from frontendapplicationbase.o(i._ZN8touchgfx12NoTransition15handleTickEventEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[200]">touchgfx::NoTransition::~NoTransition()</a> from frontendapplicationbase.o(i._ZN8touchgfx12NoTransitionD1Ev) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[1e9]">touchgfx::AnimatedImage::stopAnimation()</a> from animatedimage.o(i._ZN8touchgfx13AnimatedImage13stopAnimationEv) referenced from mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_13AnimatedImageEEE)
 <LI><a href="#[1e9]">touchgfx::AnimatedImage::stopAnimation()</a> from animatedimage.o(i._ZN8touchgfx13AnimatedImage13stopAnimationEv) referenced from animatedimage.o(.constdata__ZTVN8touchgfx13AnimatedImageE)
 <LI><a href="#[1e8]">touchgfx::AnimatedImage::startAnimation(const bool&, const bool&, const bool&)</a> from animatedimage.o(i._ZN8touchgfx13AnimatedImage14startAnimationERKbS2_S2_) referenced from mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_13AnimatedImageEEE)
 <LI><a href="#[1e8]">touchgfx::AnimatedImage::startAnimation(const bool&, const bool&, const bool&)</a> from animatedimage.o(i._ZN8touchgfx13AnimatedImage14startAnimationERKbS2_S2_) referenced from animatedimage.o(.constdata__ZTVN8touchgfx13AnimatedImageE)
 <LI><a href="#[205]">touchgfx::AnimatedImage::handleTickEvent()</a> from animatedimage.o(i._ZN8touchgfx13AnimatedImage15handleTickEventEv) referenced from animatedimage.o(.constdata__ZTVN8touchgfx13AnimatedImageE)
 <LI><a href="#[1e7]">touchgfx::AnimatedImage::setBitmap(const touchgfx::Bitmap&)</a> from mainview.o(i._ZN8touchgfx13AnimatedImage9setBitmapERKNS_6BitmapE) referenced from mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_13AnimatedImageEEE)
 <LI><a href="#[1e7]">touchgfx::AnimatedImage::setBitmap(const touchgfx::Bitmap&)</a> from mainview.o(i._ZN8touchgfx13AnimatedImage9setBitmapERKNS_6BitmapE) referenced from animatedimage.o(.constdata__ZTVN8touchgfx13AnimatedImageE)
 <LI><a href="#[12d]">touchgfx::DMA_Interface::addToQueue(const touchgfx::BlitOp&)</a> from dma.o(i._ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE) referenced from stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
 <LI><a href="#[132]">touchgfx::DMA_Interface::getDMAType()</a> from stm32f7dma.o(i._ZN8touchgfx13DMA_Interface10getDMATypeEv) referenced from stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
 <LI><a href="#[138]">touchgfx::DMA_Interface::enableAlpha(unsigned char)</a> from dma.o(i._ZN8touchgfx13DMA_Interface11enableAlphaEh) referenced from stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
 <LI><a href="#[139]">touchgfx::DMA_Interface::disableAlpha()</a> from dma.o(i._ZN8touchgfx13DMA_Interface12disableAlphaEv) referenced from stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
 <LI><a href="#[135]">touchgfx::DMA_Interface::seedExecution()</a> from dma.o(i._ZN8touchgfx13DMA_Interface13seedExecutionEv) referenced from stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
 <LI><a href="#[134]">touchgfx::DMA_Interface::executeCompleted()</a> from dma.o(i._ZN8touchgfx13DMA_Interface16executeCompletedEv) referenced from stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
 <LI><a href="#[13a]">touchgfx::DMA_Interface::waitForFrameBufferSemaphore()</a> from dma.o(i._ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv) referenced from stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
 <LI><a href="#[12e]">touchgfx::DMA_Interface::flush()</a> from stm32f7dma.o(i._ZN8touchgfx13DMA_Interface5flushEv) referenced from stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
 <LI><a href="#[130]">touchgfx::DMA_Interface::start()</a> from dma.o(i._ZN8touchgfx13DMA_Interface5startEv) referenced from stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
 <LI><a href="#[133]">touchgfx::DMA_Interface::execute()</a> from dma.o(i._ZN8touchgfx13DMA_Interface7executeEv) referenced from stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
 <LI><a href="#[8c]">touchgfx::GeneratedFont::~GeneratedFont()</a> from generatedfont.o(i._ZN8touchgfx13GeneratedFontD1Ev) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[8c]">touchgfx::GeneratedFont::~GeneratedFont()</a> from generatedfont.o(i._ZN8touchgfx13GeneratedFontD1Ev) referenced from table_verdana_10_4bpp.o(i._Z23getFont_verdana_10_4bppv)
 <LI><a href="#[8c]">touchgfx::GeneratedFont::~GeneratedFont()</a> from generatedfont.o(i._ZN8touchgfx13GeneratedFontD1Ev) referenced from table_verdana_20_4bpp.o(i._Z23getFont_verdana_20_4bppv)
 <LI><a href="#[8c]">touchgfx::GeneratedFont::~GeneratedFont()</a> from generatedfont.o(i._ZN8touchgfx13GeneratedFontD1Ev) referenced from table_verdana_40_4bpp.o(i._Z23getFont_verdana_40_4bppv)
 <LI><a href="#[8c]">touchgfx::GeneratedFont::~GeneratedFont()</a> from generatedfont.o(i._ZN8touchgfx13GeneratedFontD1Ev) referenced from table_sairacondensed_medium_14_4bpp.o(i._Z37getFont_SairaCondensed_Medium_14_4bppv)
 <LI><a href="#[8c]">touchgfx::GeneratedFont::~GeneratedFont()</a> from generatedfont.o(i._ZN8touchgfx13GeneratedFontD1Ev) referenced from table_sairacondensed_medium_16_4bpp.o(i._Z37getFont_SairaCondensed_Medium_16_4bppv)
 <LI><a href="#[8c]">touchgfx::GeneratedFont::~GeneratedFont()</a> from generatedfont.o(i._ZN8touchgfx13GeneratedFontD1Ev) referenced from table_sairacondensed_medium_22_4bpp.o(i._Z37getFont_SairaCondensed_Medium_22_4bppv)
 <LI><a href="#[214]">touchgfx::PainterRGB565::renderNext(unsigned char&, unsigned char&, unsigned char&, unsigned char&)</a> from painterrgb565.o(i._ZN8touchgfx13PainterRGB56510renderNextERhS1_S1_S1_) referenced from painterrgb565.o(.constdata__ZTVN8touchgfx13PainterRGB565E)
 <LI><a href="#[212]">touchgfx::PainterRGB565::render(unsigned char*, int, int, int, unsigned, const unsigned char*)</a> from painterrgb565.o(i._ZN8touchgfx13PainterRGB5656renderEPhiiijPKh) referenced from painterrgb565.o(.constdata__ZTVN8touchgfx13PainterRGB565E)
 <LI><a href="#[1f3]">touchgfx::AbstractButton::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractbutton.o(i._ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
 <LI><a href="#[1f3]">touchgfx::AbstractButton::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractbutton.o(i._ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_6ButtonEEE)
 <LI><a href="#[1f3]">touchgfx::AbstractButton::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractbutton.o(i._ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[1b3]">touchgfx::MVPApplication::handlePendingScreenTransition()</a> from boardconfiguration.o(i._ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[1b3]">touchgfx::MVPApplication::handlePendingScreenTransition()</a> from boardconfiguration.o(i._ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv) referenced from boardconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[1b3]">touchgfx::MVPApplication::handlePendingScreenTransition()</a> from boardconfiguration.o(i._ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[216]">touchgfx::AbstractPainter::~AbstractPainter__sub_object()</a> from abstractpainter.o(i._ZN8touchgfx15AbstractPainterD2Ev) referenced from abstractpainter.o(.constdata__ZTVN8touchgfx15AbstractPainterE)
 <LI><a href="#[8e]">touchgfx::EasingEquations::backEaseOut(unsigned short, short, short, unsigned short)</a> from easingequations.o(i._ZN8touchgfx15EasingEquations11backEaseOutEtsst) referenced from scrollingmenu.o(i._ZN13ScrollingMenuC1Ev)
 <LI><a href="#[91]">touchgfx::EasingEquations::cubicEaseIn(unsigned short, short, short, unsigned short)</a> from easingequations.o(i._ZN8touchgfx15EasingEquations11cubicEaseInEtsst) referenced from screensaverviewbase.o(i._ZN19ScreenSaverViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE)
 <LI><a href="#[91]">touchgfx::EasingEquations::cubicEaseIn(unsigned short, short, short, unsigned short)</a> from easingequations.o(i._ZN8touchgfx15EasingEquations11cubicEaseInEtsst) referenced from mainview.o(i._ZN8MainView12gotoStartingEv)
 <LI><a href="#[92]">touchgfx::EasingEquations::linearEaseNone(unsigned short, short, short, unsigned short)</a> from easingequations.o(i._ZN8touchgfx15EasingEquations14linearEaseNoneEtsst) referenced from mainview.o(i._ZN8MainView11gotoWaitingEv)
 <LI><a href="#[92]">touchgfx::EasingEquations::linearEaseNone(unsigned short, short, short, unsigned short)</a> from easingequations.o(i._ZN8touchgfx15EasingEquations14linearEaseNoneEtsst) referenced from mainview.o(i._ZN8MainView12gotoStartingEv)
 <LI><a href="#[92]">touchgfx::EasingEquations::linearEaseNone(unsigned short, short, short, unsigned short)</a> from easingequations.o(i._ZN8touchgfx15EasingEquations14linearEaseNoneEtsst) referenced from mainview.o(i._ZN8MainView15gotoWashingDoneEv)
 <LI><a href="#[92]">touchgfx::EasingEquations::linearEaseNone(unsigned short, short, short, unsigned short)</a> from easingequations.o(i._ZN8touchgfx15EasingEquations14linearEaseNoneEtsst) referenced from mainview.o(i._ZN8MainView16gotoWaitingStartEv)
 <LI><a href="#[92]">touchgfx::EasingEquations::linearEaseNone(unsigned short, short, short, unsigned short)</a> from easingequations.o(i._ZN8touchgfx15EasingEquations14linearEaseNoneEtsst) referenced from mainview.o(i._ZN8MainView18gotoWashingPrewashEv)
 <LI><a href="#[92]">touchgfx::EasingEquations::linearEaseNone(unsigned short, short, short, unsigned short)</a> from easingequations.o(i._ZN8touchgfx15EasingEquations14linearEaseNoneEtsst) referenced from mainview.o(i._ZN8MainView18updateProgramTextsEv)
 <LI><a href="#[92]">touchgfx::EasingEquations::linearEaseNone(unsigned short, short, short, unsigned short)</a> from easingequations.o(i._ZN8touchgfx15EasingEquations14linearEaseNoneEtsst) referenced from mainview.o(i._ZN8MainView19fadeOutProgramTextsEv)
 <LI><a href="#[92]">touchgfx::EasingEquations::linearEaseNone(unsigned short, short, short, unsigned short)</a> from easingequations.o(i._ZN8touchgfx15EasingEquations14linearEaseNoneEtsst) referenced from mainview.o(i._ZN8MainView22fadeOutProgramTextsNowEv)
 <LI><a href="#[92]">touchgfx::EasingEquations::linearEaseNone(unsigned short, short, short, unsigned short)</a> from easingequations.o(i._ZN8touchgfx15EasingEquations14linearEaseNoneEtsst) referenced from mainview.o(i._ZN8MainView23centerAnimatedImageDoneERKN8touchgfx13AnimatedImageE)
 <LI><a href="#[92]">touchgfx::EasingEquations::linearEaseNone(unsigned short, short, short, unsigned short)</a> from easingequations.o(i._ZN8touchgfx15EasingEquations14linearEaseNoneEtsst) referenced from videoview.o(i._ZN9VideoView16handleClickEventERKN8touchgfx10ClickEventE)
 <LI><a href="#[217]">touchgfx::AbstractPartition::~AbstractPartition__sub_object()</a> from abstractpartition.o(i._ZN8touchgfx17AbstractPartitionD2Ev) referenced from abstractpartition.o(.constdata__ZTVN8touchgfx17AbstractPartitionE)
 <LI><a href="#[21a]">touchgfx::LockFreeDMA_Queue::pushCopyOf(const touchgfx::BlitOp&)</a> from dma.o(i._ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE) referenced from dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[21b]">touchgfx::LockFreeDMA_Queue::pop()</a> from dma.o(i._ZN8touchgfx17LockFreeDMA_Queue3popEv) referenced from dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[21c]">touchgfx::LockFreeDMA_Queue::first()</a> from dma.o(i._ZN8touchgfx17LockFreeDMA_Queue5firstEv) referenced from dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[219]">touchgfx::LockFreeDMA_Queue::isFull()</a> from dma.o(i._ZN8touchgfx17LockFreeDMA_Queue6isFullEv) referenced from dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[218]">touchgfx::LockFreeDMA_Queue::isEmpty()</a> from dma.o(i._ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv) referenced from dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[17a]">touchgfx::ClickableContainer::getLastChild(short, short, touchgfx::Drawable**)</a> from clickablecontainer.o(i._ZN8touchgfx18ClickableContainer12getLastChildEssPPNS_8DrawableE) referenced from scrollingmenu.o(.constdata__ZTV13ScrollingMenu)
 <LI><a href="#[17a]">touchgfx::ClickableContainer::getLastChild(short, short, touchgfx::Drawable**)</a> from clickablecontainer.o(i._ZN8touchgfx18ClickableContainer12getLastChildEssPPNS_8DrawableE) referenced from clickablecontainer.o(.constdata__ZTVN8touchgfx18ClickableContainerE)
 <LI><a href="#[21f]">touchgfx::ClickableContainer::handleDragEvent(const touchgfx::DragEvent&)</a> from clickablecontainer.o(i._ZN8touchgfx18ClickableContainer15handleDragEventERKNS_9DragEventE) referenced from clickablecontainer.o(.constdata__ZTVN8touchgfx18ClickableContainerE)
 <LI><a href="#[21d]">touchgfx::ClickableContainer::handleClickEvent(const touchgfx::ClickEvent&)</a> from clickablecontainer.o(i._ZN8touchgfx18ClickableContainer16handleClickEventERKNS_10ClickEventE) referenced from clickablecontainer.o(.constdata__ZTVN8touchgfx18ClickableContainerE)
 <LI><a href="#[21e]">touchgfx::ClickableContainer::handleGestureEvent(const touchgfx::GestureEvent&)</a> from clickablecontainer.o(i._ZN8touchgfx18ClickableContainer18handleGestureEventERKNS_12GestureEventE) referenced from clickablecontainer.o(.constdata__ZTVN8touchgfx18ClickableContainerE)
 <LI><a href="#[224]">touchgfx::MCUInstrumentation::getCCConsumed()</a> from stm32f7instrumentation.o(i._ZN8touchgfx18MCUInstrumentation13getCCConsumedEv) referenced from stm32f7instrumentation.o(.constdata__ZTVN8touchgfx22STM32F7InstrumentationE)
 <LI><a href="#[225]">touchgfx::MCUInstrumentation::setCCConsumed(unsigned)</a> from stm32f7instrumentation.o(i._ZN8touchgfx18MCUInstrumentation13setCCConsumedEj) referenced from stm32f7instrumentation.o(.constdata__ZTVN8touchgfx22STM32F7InstrumentationE)
 <LI><a href="#[213]">touchgfx::AbstractPainterRGB565::renderInit()</a> from painterrgb565.o(i._ZN8touchgfx21AbstractPainterRGB56510renderInitEv) referenced from painterrgb565.o(.constdata__ZTVN8touchgfx13PainterRGB565E)
 <LI><a href="#[213]">touchgfx::AbstractPainterRGB565::renderInit()</a> from painterrgb565.o(i._ZN8touchgfx21AbstractPainterRGB56510renderInitEv) referenced from abstractpainterrgb565.o(.constdata__ZTVN8touchgfx21AbstractPainterRGB565E)
 <LI><a href="#[215]">touchgfx::AbstractPainterRGB565::renderPixel(unsigned short*, unsigned char, unsigned char, unsigned char)</a> from abstractpainterrgb565.o(i._ZN8touchgfx21AbstractPainterRGB56511renderPixelEPthhh) referenced from painterrgb565.o(.constdata__ZTVN8touchgfx13PainterRGB565E)
 <LI><a href="#[215]">touchgfx::AbstractPainterRGB565::renderPixel(unsigned short*, unsigned char, unsigned char, unsigned char)</a> from abstractpainterrgb565.o(i._ZN8touchgfx21AbstractPainterRGB56511renderPixelEPthhh) referenced from abstractpainterrgb565.o(.constdata__ZTVN8touchgfx21AbstractPainterRGB565E)
 <LI><a href="#[220]">touchgfx::AbstractPainterRGB565::render(unsigned char*, int, int, int, unsigned, const unsigned char*)</a> from abstractpainterrgb565.o(i._ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh) referenced from abstractpainterrgb565.o(.constdata__ZTVN8touchgfx21AbstractPainterRGB565E)
 <LI><a href="#[222]">touchgfx::STM32F7Instrumentation::getCPUCycles()</a> from stm32f7instrumentation.o(i._ZN8touchgfx22STM32F7Instrumentation12getCPUCyclesEv) referenced from stm32f7instrumentation.o(.constdata__ZTVN8touchgfx22STM32F7InstrumentationE)
 <LI><a href="#[223]">touchgfx::STM32F7Instrumentation::setMCUActive(bool)</a> from stm32f7instrumentation.o(i._ZN8touchgfx22STM32F7Instrumentation12setMCUActiveEb) referenced from stm32f7instrumentation.o(.constdata__ZTVN8touchgfx22STM32F7InstrumentationE)
 <LI><a href="#[221]">touchgfx::STM32F7Instrumentation::init()</a> from stm32f7instrumentation.o(i._ZN8touchgfx22STM32F7Instrumentation4initEv) referenced from stm32f7instrumentation.o(.constdata__ZTVN8touchgfx22STM32F7InstrumentationE)
 <LI><a href="#[b2]">touchgfx::STM32F7Instrumentation::~STM32F7Instrumentation()</a> from boardconfiguration.o(i._ZN8touchgfx22STM32F7InstrumentationD1Ev) referenced from stm32f7instrumentation.o(.constdata__ZTVN8touchgfx22STM32F7InstrumentationE)
 <LI><a href="#[b2]">touchgfx::STM32F7Instrumentation::~STM32F7Instrumentation()</a> from boardconfiguration.o(i._ZN8touchgfx22STM32F7InstrumentationD1Ev) referenced from boardconfiguration.o(i.__sti___22_BoardConfiguration_cpp_dceb80ee)
 <LI><a href="#[1ed]">touchgfx::TextAreaWithOneWildcard::getTextHeight()</a> from mainviewbase.o(i._ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEEE)
 <LI><a href="#[227]">touchgfx::STM32F746GTouchController::sampleTouch(int&, int&)</a> from stm32f746gtouchcontroller.o(i._ZN8touchgfx25STM32F746GTouchController11sampleTouchERiS1_) referenced from stm32f746gtouchcontroller.o(.constdata__ZTVN8touchgfx25STM32F746GTouchControllerE)
 <LI><a href="#[226]">touchgfx::STM32F746GTouchController::init()</a> from stm32f746gtouchcontroller.o(i._ZN8touchgfx25STM32F746GTouchController4initEv) referenced from stm32f746gtouchcontroller.o(.constdata__ZTVN8touchgfx25STM32F746GTouchControllerE)
 <LI><a href="#[b1]">touchgfx::STM32F746GTouchController::~STM32F746GTouchController()</a> from boardconfiguration.o(i._ZN8touchgfx25STM32F746GTouchControllerD1Ev) referenced from stm32f746gtouchcontroller.o(.constdata__ZTVN8touchgfx25STM32F746GTouchControllerE)
 <LI><a href="#[b1]">touchgfx::STM32F746GTouchController::~STM32F746GTouchController()</a> from boardconfiguration.o(i._ZN8touchgfx25STM32F746GTouchControllerD1Ev) referenced from boardconfiguration.o(i.__sti___22_BoardConfiguration_cpp_dceb80ee)
 <LI><a href="#[158]">touchgfx::HAL::beginFrame()</a> from hal.o(i._ZN8touchgfx3HAL10beginFrameEv) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[158]">touchgfx::HAL::beginFrame()</a> from hal.o(i._ZN8touchgfx3HAL10beginFrameEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[156]">touchgfx::HAL::getDMAType()</a> from stm32f7hal.o(i._ZN8touchgfx3HAL10getDMATypeEv) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[156]">touchgfx::HAL::getDMAType()</a> from stm32f7hal.o(i._ZN8touchgfx3HAL10getDMATypeEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[145]">touchgfx::HAL::getBlitCaps()</a> from stm32f7hal.o(i._ZN8touchgfx3HAL11getBlitCapsEv) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[145]">touchgfx::HAL::getBlitCaps()</a> from stm32f7hal.o(i._ZN8touchgfx3HAL11getBlitCapsEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[148]">touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations)</a> from hal.o(i._ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[148]">touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations)</a> from hal.o(i._ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[14c]">touchgfx::HAL::backPorchExited()</a> from stm32f7hal.o(i._ZN8touchgfx3HAL15backPorchExitedEv) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[14c]">touchgfx::HAL::backPorchExited()</a> from stm32f7hal.o(i._ZN8touchgfx3HAL15backPorchExitedEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[141]">touchgfx::HAL::lockFrameBuffer()</a> from hal.o(i._ZN8touchgfx3HAL15lockFrameBufferEv) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[141]">touchgfx::HAL::lockFrameBuffer()</a> from hal.o(i._ZN8touchgfx3HAL15lockFrameBufferEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[147]">touchgfx::HAL::blitCopyARGB8888(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char)</a> from hal.o(i._ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[147]">touchgfx::HAL::blitCopyARGB8888(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char)</a> from hal.o(i._ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[22a]">touchgfx::HAL::flushFrameBuffer(const touchgfx::Rect&)</a> from hal.o(i._ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[13f]">touchgfx::HAL::allowDMATransfers()</a> from hal.o(i._ZN8touchgfx3HAL17allowDMATransfersEv) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[13f]">touchgfx::HAL::allowDMATransfers()</a> from hal.o(i._ZN8touchgfx3HAL17allowDMATransfersEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[22b]">touchgfx::HAL::getTFTCurrentLine()</a> from hal.o(i._ZN8touchgfx3HAL17getTFTCurrentLineEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[142]">touchgfx::HAL::unlockFrameBuffer()</a> from hal.o(i._ZN8touchgfx3HAL17unlockFrameBufferEv) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[142]">touchgfx::HAL::unlockFrameBuffer()</a> from hal.o(i._ZN8touchgfx3HAL17unlockFrameBufferEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[14b]">touchgfx::HAL::registerEventListener(touchgfx::UIEventListener&)</a> from hal.o(i._ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[14b]">touchgfx::HAL::registerEventListener(touchgfx::UIEventListener&)</a> from hal.o(i._ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[13c]">touchgfx::HAL::setDisplayOrientation(touchgfx::DisplayOrientation)</a> from stm32f7hal.o(i._ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[13c]">touchgfx::HAL::setDisplayOrientation(touchgfx::DisplayOrientation)</a> from stm32f7hal.o(i._ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[151]">touchgfx::HAL::setFrameBufferStartAddress(void*, unsigned short, bool, bool)</a> from hal.o(i._ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[151]">touchgfx::HAL::setFrameBufferStartAddress(void*, unsigned short, bool, bool)</a> from hal.o(i._ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[153]">touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short)</a> from hal.o(i._ZN8touchgfx3HAL27configurePartialFrameBufferEtttt) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[153]">touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short)</a> from hal.o(i._ZN8touchgfx3HAL27configurePartialFrameBufferEtttt) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[152]">touchgfx::HAL::setFrameBufferStartAddresses(void*, void*, void*)</a> from hal.o(i._ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[152]">touchgfx::HAL::setFrameBufferStartAddresses(void*, void*, void*)</a> from hal.o(i._ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[15d]">touchgfx::HAL::performDisplayOrientationChange()</a> from hal.o(i._ZN8touchgfx3HAL31performDisplayOrientationChangeEv) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[15d]">touchgfx::HAL::performDisplayOrientationChange()</a> from hal.o(i._ZN8touchgfx3HAL31performDisplayOrientationChangeEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[157]">touchgfx::HAL::tick()</a> from hal.o(i._ZN8touchgfx3HAL4tickEv) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[157]">touchgfx::HAL::tick()</a> from hal.o(i._ZN8touchgfx3HAL4tickEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[15b]">touchgfx::HAL::touch(int, int)</a> from hal.o(i._ZN8touchgfx3HAL5touchEii) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[15b]">touchgfx::HAL::touch(int, int)</a> from hal.o(i._ZN8touchgfx3HAL5touchEii) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[15c]">touchgfx::HAL::noTouch()</a> from hal.o(i._ZN8touchgfx3HAL7noTouchEv) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[15c]">touchgfx::HAL::noTouch()</a> from hal.o(i._ZN8touchgfx3HAL7noTouchEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[146]">touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitCopyEPKtttttthb) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[146]">touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitCopyEPKtttttthb) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[14a]">touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char)</a> from hal.o(i._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[14a]">touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char)</a> from hal.o(i._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[149]">touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat)</a> from hal.o(i._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[149]">touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat)</a> from hal.o(i._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[159]">touchgfx::HAL::endFrame()</a> from hal.o(i._ZN8touchgfx3HAL8endFrameEv) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[159]">touchgfx::HAL::endFrame()</a> from hal.o(i._ZN8touchgfx3HAL8endFrameEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[140]">touchgfx::HAL::flushDMA()</a> from hal.o(i._ZN8touchgfx3HAL8flushDMAEv) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[140]">touchgfx::HAL::flushDMA()</a> from hal.o(i._ZN8touchgfx3HAL8flushDMAEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[144]">touchgfx::HAL::blockCopy(void*, const void*, unsigned)</a> from hal.o(i._ZN8touchgfx3HAL9blockCopyEPvPKvj) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[144]">touchgfx::HAL::blockCopy(void*, const void*, unsigned)</a> from hal.o(i._ZN8touchgfx3HAL9blockCopyEPvPKvj) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[154]">touchgfx::HAL::taskDelay(unsigned short)</a> from stm32f7hal.o(i._ZN8touchgfx3HAL9taskDelayEt) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[154]">touchgfx::HAL::taskDelay(unsigned short)</a> from stm32f7hal.o(i._ZN8touchgfx3HAL9taskDelayEt) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[13d]">touchgfx::HAL::taskEntry()</a> from hal.o(i._ZN8touchgfx3HAL9taskEntryEv) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[13d]">touchgfx::HAL::taskEntry()</a> from hal.o(i._ZN8touchgfx3HAL9taskEntryEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[1b]">touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)</a> from lcd.o(i._ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list) referenced 2 times from texts.o(.data)
 <LI><a href="#[11c]">touchgfx::Rect::Rect()</a> from particleeffect.o(i._ZN8touchgfx4RectC1Ev) referenced from application.o(t._ZN8touchgfx6VectorINS_4RectELt8EEC1Ev)
 <LI><a href="#[1d0]">touchgfx::Image::setBitmap(const touchgfx::Bitmap&)</a> from image.o(i._ZN8touchgfx5Image9setBitmapERKNS_6BitmapE) referenced from particleeffect.o(.constdata__ZTV8Particle)
 <LI><a href="#[1d0]">touchgfx::Image::setBitmap(const touchgfx::Bitmap&)</a> from image.o(i._ZN8touchgfx5Image9setBitmapERKNS_6BitmapE) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[1d0]">touchgfx::Image::setBitmap(const touchgfx::Bitmap&)</a> from image.o(i._ZN8touchgfx5Image9setBitmapERKNS_6BitmapE) referenced from mainview.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
 <LI><a href="#[1d0]">touchgfx::Image::setBitmap(const touchgfx::Bitmap&)</a> from image.o(i._ZN8touchgfx5Image9setBitmapERKNS_6BitmapE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[8d]">touchgfx::BlitOp::BlitOp()</a> from stm32f7dma.o(i._ZN8touchgfx6BlitOpC1Ev) referenced from stm32f7dma.o(i._ZN10STM32F7DMAC1Ev)
 <LI><a href="#[1f5]">touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)</a> from button.o(i._ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
 <LI><a href="#[1f5]">touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)</a> from button.o(i._ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_6ButtonEEE)
 <LI><a href="#[1f5]">touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)</a> from button.o(i._ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[22e]">touchgfx::Canvas::~Canvas()</a> from canvas.o(i._ZN8touchgfx6CanvasD1Ev) referenced from canvas.o(.constdata__ZTVN8touchgfx6CanvasE)
 <LI><a href="#[230]">touchgfx::Screen::setupScreen()</a> from screen.o(i._ZN8touchgfx6Screen11setupScreenEv) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[167]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from aboutview.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from mainviewbase.o(.constdata__ZTV12MainViewBase)
 <LI><a href="#[167]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from aboutview.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from aboutviewbase.o(.constdata__ZTV13AboutViewBase)
 <LI><a href="#[167]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from aboutview.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from videoviewbase.o(.constdata__ZTV13VideoViewBase)
 <LI><a href="#[167]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from aboutview.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from screensaverview.o(.constdata__ZTV15ScreenSaverView)
 <LI><a href="#[167]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from aboutview.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from screensaverviewbase.o(.constdata__ZTV19ScreenSaverViewBase)
 <LI><a href="#[167]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from aboutview.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from mainview.o(.constdata__ZTV8MainView)
 <LI><a href="#[167]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from aboutview.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from aboutview.o(.constdata__ZTV9AboutView)
 <LI><a href="#[167]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from aboutview.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from videoview.o(.constdata__ZTV9VideoView)
 <LI><a href="#[167]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from aboutview.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[162]">touchgfx::Screen::tearDownScreen()</a> from aboutviewbase.o(i._ZN8touchgfx6Screen14tearDownScreenEv) referenced from mainviewbase.o(.constdata__ZTV12MainViewBase)
 <LI><a href="#[162]">touchgfx::Screen::tearDownScreen()</a> from aboutviewbase.o(i._ZN8touchgfx6Screen14tearDownScreenEv) referenced from aboutviewbase.o(.constdata__ZTV13AboutViewBase)
 <LI><a href="#[162]">touchgfx::Screen::tearDownScreen()</a> from aboutviewbase.o(i._ZN8touchgfx6Screen14tearDownScreenEv) referenced from videoviewbase.o(.constdata__ZTV13VideoViewBase)
 <LI><a href="#[162]">touchgfx::Screen::tearDownScreen()</a> from aboutviewbase.o(i._ZN8touchgfx6Screen14tearDownScreenEv) referenced from screensaverviewbase.o(.constdata__ZTV19ScreenSaverViewBase)
 <LI><a href="#[162]">touchgfx::Screen::tearDownScreen()</a> from aboutviewbase.o(i._ZN8touchgfx6Screen14tearDownScreenEv) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[161]">touchgfx::Screen::afterTransition()</a> from aboutview.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from mainviewbase.o(.constdata__ZTV12MainViewBase)
 <LI><a href="#[161]">touchgfx::Screen::afterTransition()</a> from aboutview.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from aboutviewbase.o(.constdata__ZTV13AboutViewBase)
 <LI><a href="#[161]">touchgfx::Screen::afterTransition()</a> from aboutview.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from videoviewbase.o(.constdata__ZTV13VideoViewBase)
 <LI><a href="#[161]">touchgfx::Screen::afterTransition()</a> from aboutview.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from mainview.o(.constdata__ZTV8MainView)
 <LI><a href="#[161]">touchgfx::Screen::afterTransition()</a> from aboutview.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from aboutview.o(.constdata__ZTV9AboutView)
 <LI><a href="#[161]">touchgfx::Screen::afterTransition()</a> from aboutview.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from videoview.o(.constdata__ZTV9VideoView)
 <LI><a href="#[161]">touchgfx::Screen::afterTransition()</a> from aboutview.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[164]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from mainviewbase.o(.constdata__ZTV12MainViewBase)
 <LI><a href="#[164]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from aboutviewbase.o(.constdata__ZTV13AboutViewBase)
 <LI><a href="#[164]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from videoviewbase.o(.constdata__ZTV13VideoViewBase)
 <LI><a href="#[164]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from screensaverview.o(.constdata__ZTV15ScreenSaverView)
 <LI><a href="#[164]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from screensaverviewbase.o(.constdata__ZTV19ScreenSaverViewBase)
 <LI><a href="#[164]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from aboutview.o(.constdata__ZTV9AboutView)
 <LI><a href="#[164]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from videoview.o(.constdata__ZTV9VideoView)
 <LI><a href="#[164]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[166]">touchgfx::Screen::handleTickEvent()</a> from aboutview.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from mainviewbase.o(.constdata__ZTV12MainViewBase)
 <LI><a href="#[166]">touchgfx::Screen::handleTickEvent()</a> from aboutview.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from aboutviewbase.o(.constdata__ZTV13AboutViewBase)
 <LI><a href="#[166]">touchgfx::Screen::handleTickEvent()</a> from aboutview.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from videoviewbase.o(.constdata__ZTV13VideoViewBase)
 <LI><a href="#[166]">touchgfx::Screen::handleTickEvent()</a> from aboutview.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from aboutview.o(.constdata__ZTV9AboutView)
 <LI><a href="#[166]">touchgfx::Screen::handleTickEvent()</a> from aboutview.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[163]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from mainviewbase.o(.constdata__ZTV12MainViewBase)
 <LI><a href="#[163]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from aboutviewbase.o(.constdata__ZTV13AboutViewBase)
 <LI><a href="#[163]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from videoviewbase.o(.constdata__ZTV13VideoViewBase)
 <LI><a href="#[163]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from screensaverview.o(.constdata__ZTV15ScreenSaverView)
 <LI><a href="#[163]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from screensaverviewbase.o(.constdata__ZTV19ScreenSaverViewBase)
 <LI><a href="#[163]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from mainview.o(.constdata__ZTV8MainView)
 <LI><a href="#[163]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from aboutview.o(.constdata__ZTV9AboutView)
 <LI><a href="#[163]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[165]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from mainviewbase.o(.constdata__ZTV12MainViewBase)
 <LI><a href="#[165]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from aboutviewbase.o(.constdata__ZTV13AboutViewBase)
 <LI><a href="#[165]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from videoviewbase.o(.constdata__ZTV13VideoViewBase)
 <LI><a href="#[165]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from screensaverview.o(.constdata__ZTV15ScreenSaverView)
 <LI><a href="#[165]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from screensaverviewbase.o(.constdata__ZTV19ScreenSaverViewBase)
 <LI><a href="#[165]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from mainview.o(.constdata__ZTV8MainView)
 <LI><a href="#[165]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from aboutview.o(.constdata__ZTV9AboutView)
 <LI><a href="#[165]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from videoview.o(.constdata__ZTV9VideoView)
 <LI><a href="#[165]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[15f]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from mainviewbase.o(.constdata__ZTV12MainViewBase)
 <LI><a href="#[15f]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from aboutviewbase.o(.constdata__ZTV13AboutViewBase)
 <LI><a href="#[15f]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from videoviewbase.o(.constdata__ZTV13VideoViewBase)
 <LI><a href="#[15f]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from screensaverview.o(.constdata__ZTV15ScreenSaverView)
 <LI><a href="#[15f]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from screensaverviewbase.o(.constdata__ZTV19ScreenSaverViewBase)
 <LI><a href="#[15f]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from mainview.o(.constdata__ZTV8MainView)
 <LI><a href="#[15f]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from aboutview.o(.constdata__ZTV9AboutView)
 <LI><a href="#[15f]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from videoview.o(.constdata__ZTV9VideoView)
 <LI><a href="#[15f]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[22f]">touchgfx::Screen::~Screen()</a> from screen.o(i._ZN8touchgfx6ScreenD1Ev) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[19b]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from mainview.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from particleeffect.o(.constdata__ZTV14ParticleEffect)
 <LI><a href="#[19b]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from mainview.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from touchforwarder.o(.constdata__ZTV14TouchForwarder)
 <LI><a href="#[19b]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from mainview.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from particleeffect.o(.constdata__ZTV8Particle)
 <LI><a href="#[19b]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from mainview.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from mjpegwidget.o(.constdata__ZTVN8touchgfx11MJPEGWidgetE)
 <LI><a href="#[19b]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from mainview.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[19b]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from mainview.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_13AnimatedImageEEE)
 <LI><a href="#[19b]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from mainview.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEEE)
 <LI><a href="#[19b]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from mainview.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[19b]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from mainview.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
 <LI><a href="#[19b]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from mainview.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6CircleEEE)
 <LI><a href="#[19b]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from mainview.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[19b]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from mainview.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from mainview.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
 <LI><a href="#[19b]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from mainview.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_6ButtonEEE)
 <LI><a href="#[19b]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from mainview.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from animatedimage.o(.constdata__ZTVN8touchgfx13AnimatedImageE)
 <LI><a href="#[19b]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from mainview.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from pixeldatawidget.o(.constdata__ZTVN8touchgfx15PixelDataWidgetE)
 <LI><a href="#[19b]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from mainview.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[19b]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from mainview.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[19b]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from mainview.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[19b]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from mainview.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from circle.o(.constdata__ZTVN8touchgfx6CircleE)
 <LI><a href="#[19b]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from mainview.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from mainview.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[19b]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from mainview.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[231]">touchgfx::Outline::~Outline()</a> from outline.o(i._ZN8touchgfx7OutlineD1Ev) referenced from outline.o(.constdata__ZTVN8touchgfx7OutlineE)
 <LI><a href="#[232]">touchgfx::Callback&lang;MainViewBase, const touchgfx::AbstractButton&, void, void&rang;::execute(const touchgfx::AbstractButton&)</a> from mainviewbase.o(t._ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7executeES4_) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvEE)
 <LI><a href="#[234]">touchgfx::Callback&lang;AboutViewBase, const touchgfx::AbstractButton&, void, void&rang;::execute(const touchgfx::AbstractButton&)</a> from aboutviewbase.o(t._ZN8touchgfx8CallbackI13AboutViewBaseRKNS_14AbstractButtonEvvE7executeES4_) referenced from aboutviewbase.o(.constdata__ZTVN8touchgfx8CallbackI13AboutViewBaseRKNS_14AbstractButtonEvvEE)
 <LI><a href="#[236]">touchgfx::Callback&lang;VideoViewBase, const touchgfx::AbstractButton&, void, void&rang;::execute(const touchgfx::AbstractButton&)</a> from videoviewbase.o(t._ZN8touchgfx8CallbackI13VideoViewBaseRKNS_14AbstractButtonEvvE7executeES4_) referenced from videoviewbase.o(.constdata__ZTVN8touchgfx8CallbackI13VideoViewBaseRKNS_14AbstractButtonEvvEE)
 <LI><a href="#[238]">touchgfx::Callback&lang;ScreenSaverViewBase, const touchgfx::AbstractButton&, void, void&rang;::execute(const touchgfx::AbstractButton&)</a> from screensaverviewbase.o(t._ZN8touchgfx8CallbackI19ScreenSaverViewBaseRKNS_14AbstractButtonEvvE7executeES4_) referenced from screensaverviewbase.o(.constdata__ZTVN8touchgfx8CallbackI19ScreenSaverViewBaseRKNS_14AbstractButtonEvvEE)
 <LI><a href="#[23a]">touchgfx::Callback&lang;SparseContainerItems&lang;ImageContainer, (int)5&rang;, int, touchgfx::Container**, void&rang;::execute(int, touchgfx::Container**)</a> from mainview.o(t._ZN8touchgfx8CallbackI20SparseContainerItemsI14ImageContainerLi5EEiPPNS_9ContainerEvE7executeEiS6_) referenced from mainview.o(.constdata__ZTVN8touchgfx8CallbackI20SparseContainerItemsI14ImageContainerLi5EEiPPNS_9ContainerEvEE)
 <LI><a href="#[23b]">touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::execute()</a> from frontendapplicationbase.o(t._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
 <LI><a href="#[23d]">touchgfx::Callback&lang;MainView, const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&, void, void&rang;::execute(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</a> from mainview.o(t._ZN8touchgfx8CallbackI8MainViewRKNS_12FadeAnimatorINS_8TextAreaEEEvvE7executeES6_) referenced from mainview.o(.constdata__ZTVN8touchgfx8CallbackI8MainViewRKNS_12FadeAnimatorINS_8TextAreaEEEvvEE)
 <LI><a href="#[23f]">touchgfx::Callback&lang;MainView, const touchgfx::AnimatedImage&, void, void&rang;::execute(const touchgfx::AnimatedImage&)</a> from mainview.o(t._ZN8touchgfx8CallbackI8MainViewRKNS_13AnimatedImageEvvE7executeES4_) referenced from mainview.o(.constdata__ZTVN8touchgfx8CallbackI8MainViewRKNS_13AnimatedImageEvvEE)
 <LI><a href="#[241]">touchgfx::Callback&lang;MainView, int, int, void&rang;::execute(int, int)</a> from mainview.o(t._ZN8touchgfx8CallbackI8MainViewiivE7executeEii) referenced from mainview.o(.constdata__ZTVN8touchgfx8CallbackI8MainViewiivEE)
 <LI><a href="#[243]">touchgfx::Callback&lang;MainView, int, void, void&rang;::execute(int)</a> from mainview.o(t._ZN8touchgfx8CallbackI8MainViewivvE7executeEi) referenced from mainview.o(.constdata__ZTVN8touchgfx8CallbackI8MainViewivvEE)
 <LI><a href="#[245]">touchgfx::Callback&lang;VideoView, const touchgfx::FadeAnimator&lang;touchgfx::Image&rang;&, void, void&rang;::execute(const touchgfx::FadeAnimator&lang;touchgfx::Image&rang;&)</a> from videoview.o(t._ZN8touchgfx8CallbackI9VideoViewRKNS_12FadeAnimatorINS_5ImageEEEvvE7executeES6_) referenced from videoview.o(.constdata__ZTVN8touchgfx8CallbackI9VideoViewRKNS_12FadeAnimatorINS_5ImageEEEvvEE)
 <LI><a href="#[17d]">touchgfx::Drawable::setPosition(short, short, short, short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable11setPositionEssss) referenced from scrollingmenu.o(.constdata__ZTV13ScrollingMenu)
 <LI><a href="#[17d]">touchgfx::Drawable::setPosition(short, short, short, short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable11setPositionEssss) referenced from mainview.o(.constdata__ZTV14ImageContainer)
 <LI><a href="#[17d]">touchgfx::Drawable::setPosition(short, short, short, short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable11setPositionEssss) referenced from particleeffect.o(.constdata__ZTV14ParticleEffect)
 <LI><a href="#[17d]">touchgfx::Drawable::setPosition(short, short, short, short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable11setPositionEssss) referenced from touchforwarder.o(.constdata__ZTV14TouchForwarder)
 <LI><a href="#[17d]">touchgfx::Drawable::setPosition(short, short, short, short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable11setPositionEssss) referenced from sparsecontainerlist.o(.constdata__ZTV19SparseContainerList)
 <LI><a href="#[17d]">touchgfx::Drawable::setPosition(short, short, short, short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable11setPositionEssss) referenced from particleeffect.o(.constdata__ZTV8Particle)
 <LI><a href="#[17d]">touchgfx::Drawable::setPosition(short, short, short, short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable11setPositionEssss) referenced from mjpegwidget.o(.constdata__ZTVN8touchgfx11MJPEGWidgetE)
 <LI><a href="#[17d]">touchgfx::Drawable::setPosition(short, short, short, short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable11setPositionEssss) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[17d]">touchgfx::Drawable::setPosition(short, short, short, short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable11setPositionEssss) referenced from mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_13AnimatedImageEEE)
 <LI><a href="#[17d]">touchgfx::Drawable::setPosition(short, short, short, short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable11setPositionEssss) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEEE)
 <LI><a href="#[17d]">touchgfx::Drawable::setPosition(short, short, short, short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable11setPositionEssss) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[17d]">touchgfx::Drawable::setPosition(short, short, short, short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable11setPositionEssss) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
 <LI><a href="#[17d]">touchgfx::Drawable::setPosition(short, short, short, short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable11setPositionEssss) referenced from mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6CircleEEE)
 <LI><a href="#[17d]">touchgfx::Drawable::setPosition(short, short, short, short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable11setPositionEssss) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[17d]">touchgfx::Drawable::setPosition(short, short, short, short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable11setPositionEssss) referenced from mainview.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
 <LI><a href="#[17d]">touchgfx::Drawable::setPosition(short, short, short, short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable11setPositionEssss) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_6ButtonEEE)
 <LI><a href="#[17d]">touchgfx::Drawable::setPosition(short, short, short, short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable11setPositionEssss) referenced from animatedimage.o(.constdata__ZTVN8touchgfx13AnimatedImageE)
 <LI><a href="#[17d]">touchgfx::Drawable::setPosition(short, short, short, short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable11setPositionEssss) referenced from pixeldatawidget.o(.constdata__ZTVN8touchgfx15PixelDataWidgetE)
 <LI><a href="#[17d]">touchgfx::Drawable::setPosition(short, short, short, short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable11setPositionEssss) referenced from clickablecontainer.o(.constdata__ZTVN8touchgfx18ClickableContainerE)
 <LI><a href="#[17d]">touchgfx::Drawable::setPosition(short, short, short, short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable11setPositionEssss) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[17d]">touchgfx::Drawable::setPosition(short, short, short, short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable11setPositionEssss) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[17d]">touchgfx::Drawable::setPosition(short, short, short, short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable11setPositionEssss) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[17d]">touchgfx::Drawable::setPosition(short, short, short, short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable11setPositionEssss) referenced from circle.o(.constdata__ZTVN8touchgfx6CircleE)
 <LI><a href="#[17d]">touchgfx::Drawable::setPosition(short, short, short, short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable11setPositionEssss) referenced from mainview.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[17d]">touchgfx::Drawable::setPosition(short, short, short, short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable11setPositionEssss) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[17d]">touchgfx::Drawable::setPosition(short, short, short, short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable11setPositionEssss) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[17d]">touchgfx::Drawable::setPosition(short, short, short, short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable11setPositionEssss) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[187]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from scrollingmenu.o(.constdata__ZTV13ScrollingMenu)
 <LI><a href="#[187]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from mainview.o(.constdata__ZTV14ImageContainer)
 <LI><a href="#[187]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from particleeffect.o(.constdata__ZTV14ParticleEffect)
 <LI><a href="#[187]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from touchforwarder.o(.constdata__ZTV14TouchForwarder)
 <LI><a href="#[187]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from sparsecontainerlist.o(.constdata__ZTV19SparseContainerList)
 <LI><a href="#[187]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from particleeffect.o(.constdata__ZTV8Particle)
 <LI><a href="#[187]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from mjpegwidget.o(.constdata__ZTVN8touchgfx11MJPEGWidgetE)
 <LI><a href="#[187]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[187]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_13AnimatedImageEEE)
 <LI><a href="#[187]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEEE)
 <LI><a href="#[187]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[187]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
 <LI><a href="#[187]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6CircleEEE)
 <LI><a href="#[187]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[187]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from mainview.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
 <LI><a href="#[187]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_6ButtonEEE)
 <LI><a href="#[187]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from animatedimage.o(.constdata__ZTVN8touchgfx13AnimatedImageE)
 <LI><a href="#[187]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from pixeldatawidget.o(.constdata__ZTVN8touchgfx15PixelDataWidgetE)
 <LI><a href="#[187]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from clickablecontainer.o(.constdata__ZTVN8touchgfx18ClickableContainerE)
 <LI><a href="#[187]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[187]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[187]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[187]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from circle.o(.constdata__ZTVN8touchgfx6CircleE)
 <LI><a href="#[187]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from mainview.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[187]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[187]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[187]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[19f]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from mainview.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from particleeffect.o(.constdata__ZTV14ParticleEffect)
 <LI><a href="#[19f]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from mainview.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from touchforwarder.o(.constdata__ZTV14TouchForwarder)
 <LI><a href="#[19f]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from mainview.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from particleeffect.o(.constdata__ZTV8Particle)
 <LI><a href="#[19f]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from mainview.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from mjpegwidget.o(.constdata__ZTVN8touchgfx11MJPEGWidgetE)
 <LI><a href="#[19f]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from mainview.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[19f]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from mainview.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_13AnimatedImageEEE)
 <LI><a href="#[19f]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from mainview.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEEE)
 <LI><a href="#[19f]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from mainview.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[19f]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from mainview.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
 <LI><a href="#[19f]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from mainview.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6CircleEEE)
 <LI><a href="#[19f]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from mainview.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[19f]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from mainview.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from mainview.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
 <LI><a href="#[19f]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from mainview.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_6ButtonEEE)
 <LI><a href="#[19f]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from mainview.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from animatedimage.o(.constdata__ZTVN8touchgfx13AnimatedImageE)
 <LI><a href="#[19f]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from mainview.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from pixeldatawidget.o(.constdata__ZTVN8touchgfx15PixelDataWidgetE)
 <LI><a href="#[19f]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from mainview.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[19f]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from mainview.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[19f]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from mainview.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[19f]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from mainview.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from circle.o(.constdata__ZTVN8touchgfx6CircleE)
 <LI><a href="#[19f]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from mainview.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from mainview.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[19f]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from mainview.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[19f]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from mainview.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[196]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from mainview.o(.constdata__ZTV14ImageContainer)
 <LI><a href="#[196]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from sparsecontainerlist.o(.constdata__ZTV19SparseContainerList)
 <LI><a href="#[196]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from particleeffect.o(.constdata__ZTV8Particle)
 <LI><a href="#[196]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from mjpegwidget.o(.constdata__ZTVN8touchgfx11MJPEGWidgetE)
 <LI><a href="#[196]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[196]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_13AnimatedImageEEE)
 <LI><a href="#[196]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEEE)
 <LI><a href="#[196]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[196]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
 <LI><a href="#[196]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6CircleEEE)
 <LI><a href="#[196]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[196]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from mainview.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
 <LI><a href="#[196]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_6ButtonEEE)
 <LI><a href="#[196]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from animatedimage.o(.constdata__ZTVN8touchgfx13AnimatedImageE)
 <LI><a href="#[196]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from pixeldatawidget.o(.constdata__ZTVN8touchgfx15PixelDataWidgetE)
 <LI><a href="#[196]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[196]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[196]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[196]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from circle.o(.constdata__ZTVN8touchgfx6CircleE)
 <LI><a href="#[196]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from mainview.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[196]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[196]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[196]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[197]">touchgfx::Drawable::handleTickEvent()</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from mainview.o(.constdata__ZTV14ImageContainer)
 <LI><a href="#[197]">touchgfx::Drawable::handleTickEvent()</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from touchforwarder.o(.constdata__ZTV14TouchForwarder)
 <LI><a href="#[197]">touchgfx::Drawable::handleTickEvent()</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from sparsecontainerlist.o(.constdata__ZTV19SparseContainerList)
 <LI><a href="#[197]">touchgfx::Drawable::handleTickEvent()</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from particleeffect.o(.constdata__ZTV8Particle)
 <LI><a href="#[197]">touchgfx::Drawable::handleTickEvent()</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from mjpegwidget.o(.constdata__ZTVN8touchgfx11MJPEGWidgetE)
 <LI><a href="#[197]">touchgfx::Drawable::handleTickEvent()</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[197]">touchgfx::Drawable::handleTickEvent()</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from pixeldatawidget.o(.constdata__ZTVN8touchgfx15PixelDataWidgetE)
 <LI><a href="#[197]">touchgfx::Drawable::handleTickEvent()</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from clickablecontainer.o(.constdata__ZTVN8touchgfx18ClickableContainerE)
 <LI><a href="#[197]">touchgfx::Drawable::handleTickEvent()</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[197]">touchgfx::Drawable::handleTickEvent()</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[197]">touchgfx::Drawable::handleTickEvent()</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[197]">touchgfx::Drawable::handleTickEvent()</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from circle.o(.constdata__ZTVN8touchgfx6CircleE)
 <LI><a href="#[197]">touchgfx::Drawable::handleTickEvent()</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from mainview.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[197]">touchgfx::Drawable::handleTickEvent()</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[197]">touchgfx::Drawable::handleTickEvent()</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[197]">touchgfx::Drawable::handleTickEvent()</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[194]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from mainview.o(.constdata__ZTV14ImageContainer)
 <LI><a href="#[194]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from sparsecontainerlist.o(.constdata__ZTV19SparseContainerList)
 <LI><a href="#[194]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from particleeffect.o(.constdata__ZTV8Particle)
 <LI><a href="#[194]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from mjpegwidget.o(.constdata__ZTVN8touchgfx11MJPEGWidgetE)
 <LI><a href="#[194]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[194]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_13AnimatedImageEEE)
 <LI><a href="#[194]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEEE)
 <LI><a href="#[194]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[194]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6CircleEEE)
 <LI><a href="#[194]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[194]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from mainview.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
 <LI><a href="#[194]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from animatedimage.o(.constdata__ZTVN8touchgfx13AnimatedImageE)
 <LI><a href="#[194]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from pixeldatawidget.o(.constdata__ZTVN8touchgfx15PixelDataWidgetE)
 <LI><a href="#[194]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[194]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[194]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from circle.o(.constdata__ZTVN8touchgfx6CircleE)
 <LI><a href="#[194]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from mainview.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[194]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[194]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[194]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[195]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from mainview.o(.constdata__ZTV14ImageContainer)
 <LI><a href="#[195]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from particleeffect.o(.constdata__ZTV14ParticleEffect)
 <LI><a href="#[195]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from sparsecontainerlist.o(.constdata__ZTV19SparseContainerList)
 <LI><a href="#[195]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from particleeffect.o(.constdata__ZTV8Particle)
 <LI><a href="#[195]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from mjpegwidget.o(.constdata__ZTVN8touchgfx11MJPEGWidgetE)
 <LI><a href="#[195]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[195]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_13AnimatedImageEEE)
 <LI><a href="#[195]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEEE)
 <LI><a href="#[195]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[195]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
 <LI><a href="#[195]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6CircleEEE)
 <LI><a href="#[195]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[195]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from mainview.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
 <LI><a href="#[195]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_6ButtonEEE)
 <LI><a href="#[195]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from animatedimage.o(.constdata__ZTVN8touchgfx13AnimatedImageE)
 <LI><a href="#[195]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from pixeldatawidget.o(.constdata__ZTVN8touchgfx15PixelDataWidgetE)
 <LI><a href="#[195]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[195]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[195]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[195]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from circle.o(.constdata__ZTVN8touchgfx6CircleE)
 <LI><a href="#[195]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from mainview.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[195]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[195]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[195]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from mainview.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[17e]">touchgfx::Drawable::setX(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setXEs) referenced from scrollingmenu.o(.constdata__ZTV13ScrollingMenu)
 <LI><a href="#[17e]">touchgfx::Drawable::setX(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setXEs) referenced from mainview.o(.constdata__ZTV14ImageContainer)
 <LI><a href="#[17e]">touchgfx::Drawable::setX(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setXEs) referenced from particleeffect.o(.constdata__ZTV14ParticleEffect)
 <LI><a href="#[17e]">touchgfx::Drawable::setX(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setXEs) referenced from touchforwarder.o(.constdata__ZTV14TouchForwarder)
 <LI><a href="#[17e]">touchgfx::Drawable::setX(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setXEs) referenced from sparsecontainerlist.o(.constdata__ZTV19SparseContainerList)
 <LI><a href="#[17e]">touchgfx::Drawable::setX(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setXEs) referenced from particleeffect.o(.constdata__ZTV8Particle)
 <LI><a href="#[17e]">touchgfx::Drawable::setX(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setXEs) referenced from mjpegwidget.o(.constdata__ZTVN8touchgfx11MJPEGWidgetE)
 <LI><a href="#[17e]">touchgfx::Drawable::setX(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setXEs) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[17e]">touchgfx::Drawable::setX(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setXEs) referenced from mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_13AnimatedImageEEE)
 <LI><a href="#[17e]">touchgfx::Drawable::setX(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setXEs) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEEE)
 <LI><a href="#[17e]">touchgfx::Drawable::setX(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setXEs) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[17e]">touchgfx::Drawable::setX(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setXEs) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
 <LI><a href="#[17e]">touchgfx::Drawable::setX(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setXEs) referenced from mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6CircleEEE)
 <LI><a href="#[17e]">touchgfx::Drawable::setX(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setXEs) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[17e]">touchgfx::Drawable::setX(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setXEs) referenced from mainview.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
 <LI><a href="#[17e]">touchgfx::Drawable::setX(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setXEs) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_6ButtonEEE)
 <LI><a href="#[17e]">touchgfx::Drawable::setX(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setXEs) referenced from animatedimage.o(.constdata__ZTVN8touchgfx13AnimatedImageE)
 <LI><a href="#[17e]">touchgfx::Drawable::setX(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setXEs) referenced from pixeldatawidget.o(.constdata__ZTVN8touchgfx15PixelDataWidgetE)
 <LI><a href="#[17e]">touchgfx::Drawable::setX(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setXEs) referenced from clickablecontainer.o(.constdata__ZTVN8touchgfx18ClickableContainerE)
 <LI><a href="#[17e]">touchgfx::Drawable::setX(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setXEs) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[17e]">touchgfx::Drawable::setX(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setXEs) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[17e]">touchgfx::Drawable::setX(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setXEs) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[17e]">touchgfx::Drawable::setX(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setXEs) referenced from circle.o(.constdata__ZTVN8touchgfx6CircleE)
 <LI><a href="#[17e]">touchgfx::Drawable::setX(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setXEs) referenced from mainview.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[17e]">touchgfx::Drawable::setX(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setXEs) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[17e]">touchgfx::Drawable::setX(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setXEs) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[17e]">touchgfx::Drawable::setX(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setXEs) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[17f]">touchgfx::Drawable::setY(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setYEs) referenced from scrollingmenu.o(.constdata__ZTV13ScrollingMenu)
 <LI><a href="#[17f]">touchgfx::Drawable::setY(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setYEs) referenced from mainview.o(.constdata__ZTV14ImageContainer)
 <LI><a href="#[17f]">touchgfx::Drawable::setY(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setYEs) referenced from particleeffect.o(.constdata__ZTV14ParticleEffect)
 <LI><a href="#[17f]">touchgfx::Drawable::setY(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setYEs) referenced from touchforwarder.o(.constdata__ZTV14TouchForwarder)
 <LI><a href="#[17f]">touchgfx::Drawable::setY(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setYEs) referenced from sparsecontainerlist.o(.constdata__ZTV19SparseContainerList)
 <LI><a href="#[17f]">touchgfx::Drawable::setY(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setYEs) referenced from particleeffect.o(.constdata__ZTV8Particle)
 <LI><a href="#[17f]">touchgfx::Drawable::setY(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setYEs) referenced from mjpegwidget.o(.constdata__ZTVN8touchgfx11MJPEGWidgetE)
 <LI><a href="#[17f]">touchgfx::Drawable::setY(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setYEs) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[17f]">touchgfx::Drawable::setY(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setYEs) referenced from mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_13AnimatedImageEEE)
 <LI><a href="#[17f]">touchgfx::Drawable::setY(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setYEs) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEEE)
 <LI><a href="#[17f]">touchgfx::Drawable::setY(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setYEs) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[17f]">touchgfx::Drawable::setY(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setYEs) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
 <LI><a href="#[17f]">touchgfx::Drawable::setY(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setYEs) referenced from mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6CircleEEE)
 <LI><a href="#[17f]">touchgfx::Drawable::setY(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setYEs) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[17f]">touchgfx::Drawable::setY(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setYEs) referenced from mainview.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
 <LI><a href="#[17f]">touchgfx::Drawable::setY(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setYEs) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_6ButtonEEE)
 <LI><a href="#[17f]">touchgfx::Drawable::setY(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setYEs) referenced from animatedimage.o(.constdata__ZTVN8touchgfx13AnimatedImageE)
 <LI><a href="#[17f]">touchgfx::Drawable::setY(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setYEs) referenced from pixeldatawidget.o(.constdata__ZTVN8touchgfx15PixelDataWidgetE)
 <LI><a href="#[17f]">touchgfx::Drawable::setY(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setYEs) referenced from clickablecontainer.o(.constdata__ZTVN8touchgfx18ClickableContainerE)
 <LI><a href="#[17f]">touchgfx::Drawable::setY(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setYEs) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[17f]">touchgfx::Drawable::setY(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setYEs) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[17f]">touchgfx::Drawable::setY(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setYEs) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[17f]">touchgfx::Drawable::setY(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setYEs) referenced from circle.o(.constdata__ZTVN8touchgfx6CircleE)
 <LI><a href="#[17f]">touchgfx::Drawable::setY(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setYEs) referenced from mainview.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[17f]">touchgfx::Drawable::setY(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setYEs) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[17f]">touchgfx::Drawable::setY(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setYEs) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[17f]">touchgfx::Drawable::setY(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable4setYEs) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[180]">touchgfx::Drawable::setXY(short, short)</a> from aboutview.o(i._ZN8touchgfx8Drawable5setXYEss) referenced from scrollingmenu.o(.constdata__ZTV13ScrollingMenu)
 <LI><a href="#[180]">touchgfx::Drawable::setXY(short, short)</a> from aboutview.o(i._ZN8touchgfx8Drawable5setXYEss) referenced from mainview.o(.constdata__ZTV14ImageContainer)
 <LI><a href="#[180]">touchgfx::Drawable::setXY(short, short)</a> from aboutview.o(i._ZN8touchgfx8Drawable5setXYEss) referenced from particleeffect.o(.constdata__ZTV14ParticleEffect)
 <LI><a href="#[180]">touchgfx::Drawable::setXY(short, short)</a> from aboutview.o(i._ZN8touchgfx8Drawable5setXYEss) referenced from touchforwarder.o(.constdata__ZTV14TouchForwarder)
 <LI><a href="#[180]">touchgfx::Drawable::setXY(short, short)</a> from aboutview.o(i._ZN8touchgfx8Drawable5setXYEss) referenced from sparsecontainerlist.o(.constdata__ZTV19SparseContainerList)
 <LI><a href="#[180]">touchgfx::Drawable::setXY(short, short)</a> from aboutview.o(i._ZN8touchgfx8Drawable5setXYEss) referenced from particleeffect.o(.constdata__ZTV8Particle)
 <LI><a href="#[180]">touchgfx::Drawable::setXY(short, short)</a> from aboutview.o(i._ZN8touchgfx8Drawable5setXYEss) referenced from mjpegwidget.o(.constdata__ZTVN8touchgfx11MJPEGWidgetE)
 <LI><a href="#[180]">touchgfx::Drawable::setXY(short, short)</a> from aboutview.o(i._ZN8touchgfx8Drawable5setXYEss) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[180]">touchgfx::Drawable::setXY(short, short)</a> from aboutview.o(i._ZN8touchgfx8Drawable5setXYEss) referenced from mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_13AnimatedImageEEE)
 <LI><a href="#[180]">touchgfx::Drawable::setXY(short, short)</a> from aboutview.o(i._ZN8touchgfx8Drawable5setXYEss) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEEE)
 <LI><a href="#[180]">touchgfx::Drawable::setXY(short, short)</a> from aboutview.o(i._ZN8touchgfx8Drawable5setXYEss) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[180]">touchgfx::Drawable::setXY(short, short)</a> from aboutview.o(i._ZN8touchgfx8Drawable5setXYEss) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
 <LI><a href="#[180]">touchgfx::Drawable::setXY(short, short)</a> from aboutview.o(i._ZN8touchgfx8Drawable5setXYEss) referenced from mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6CircleEEE)
 <LI><a href="#[180]">touchgfx::Drawable::setXY(short, short)</a> from aboutview.o(i._ZN8touchgfx8Drawable5setXYEss) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[180]">touchgfx::Drawable::setXY(short, short)</a> from aboutview.o(i._ZN8touchgfx8Drawable5setXYEss) referenced from mainview.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
 <LI><a href="#[180]">touchgfx::Drawable::setXY(short, short)</a> from aboutview.o(i._ZN8touchgfx8Drawable5setXYEss) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_6ButtonEEE)
 <LI><a href="#[180]">touchgfx::Drawable::setXY(short, short)</a> from aboutview.o(i._ZN8touchgfx8Drawable5setXYEss) referenced from animatedimage.o(.constdata__ZTVN8touchgfx13AnimatedImageE)
 <LI><a href="#[180]">touchgfx::Drawable::setXY(short, short)</a> from aboutview.o(i._ZN8touchgfx8Drawable5setXYEss) referenced from pixeldatawidget.o(.constdata__ZTVN8touchgfx15PixelDataWidgetE)
 <LI><a href="#[180]">touchgfx::Drawable::setXY(short, short)</a> from aboutview.o(i._ZN8touchgfx8Drawable5setXYEss) referenced from clickablecontainer.o(.constdata__ZTVN8touchgfx18ClickableContainerE)
 <LI><a href="#[180]">touchgfx::Drawable::setXY(short, short)</a> from aboutview.o(i._ZN8touchgfx8Drawable5setXYEss) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[180]">touchgfx::Drawable::setXY(short, short)</a> from aboutview.o(i._ZN8touchgfx8Drawable5setXYEss) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[180]">touchgfx::Drawable::setXY(short, short)</a> from aboutview.o(i._ZN8touchgfx8Drawable5setXYEss) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[180]">touchgfx::Drawable::setXY(short, short)</a> from aboutview.o(i._ZN8touchgfx8Drawable5setXYEss) referenced from circle.o(.constdata__ZTVN8touchgfx6CircleE)
 <LI><a href="#[180]">touchgfx::Drawable::setXY(short, short)</a> from aboutview.o(i._ZN8touchgfx8Drawable5setXYEss) referenced from mainview.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[180]">touchgfx::Drawable::setXY(short, short)</a> from aboutview.o(i._ZN8touchgfx8Drawable5setXYEss) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[180]">touchgfx::Drawable::setXY(short, short)</a> from aboutview.o(i._ZN8touchgfx8Drawable5setXYEss) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[180]">touchgfx::Drawable::setXY(short, short)</a> from aboutview.o(i._ZN8touchgfx8Drawable5setXYEss) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[188]">touchgfx::Drawable::moveTo(short, short)</a> from abstractbutton.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from scrollingmenu.o(.constdata__ZTV13ScrollingMenu)
 <LI><a href="#[188]">touchgfx::Drawable::moveTo(short, short)</a> from abstractbutton.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from mainview.o(.constdata__ZTV14ImageContainer)
 <LI><a href="#[188]">touchgfx::Drawable::moveTo(short, short)</a> from abstractbutton.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from particleeffect.o(.constdata__ZTV14ParticleEffect)
 <LI><a href="#[188]">touchgfx::Drawable::moveTo(short, short)</a> from abstractbutton.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from touchforwarder.o(.constdata__ZTV14TouchForwarder)
 <LI><a href="#[188]">touchgfx::Drawable::moveTo(short, short)</a> from abstractbutton.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from sparsecontainerlist.o(.constdata__ZTV19SparseContainerList)
 <LI><a href="#[188]">touchgfx::Drawable::moveTo(short, short)</a> from abstractbutton.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from particleeffect.o(.constdata__ZTV8Particle)
 <LI><a href="#[188]">touchgfx::Drawable::moveTo(short, short)</a> from abstractbutton.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from mjpegwidget.o(.constdata__ZTVN8touchgfx11MJPEGWidgetE)
 <LI><a href="#[188]">touchgfx::Drawable::moveTo(short, short)</a> from abstractbutton.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[188]">touchgfx::Drawable::moveTo(short, short)</a> from abstractbutton.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_13AnimatedImageEEE)
 <LI><a href="#[188]">touchgfx::Drawable::moveTo(short, short)</a> from abstractbutton.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEEE)
 <LI><a href="#[188]">touchgfx::Drawable::moveTo(short, short)</a> from abstractbutton.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[188]">touchgfx::Drawable::moveTo(short, short)</a> from abstractbutton.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
 <LI><a href="#[188]">touchgfx::Drawable::moveTo(short, short)</a> from abstractbutton.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6CircleEEE)
 <LI><a href="#[188]">touchgfx::Drawable::moveTo(short, short)</a> from abstractbutton.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[188]">touchgfx::Drawable::moveTo(short, short)</a> from abstractbutton.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from mainview.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
 <LI><a href="#[188]">touchgfx::Drawable::moveTo(short, short)</a> from abstractbutton.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_6ButtonEEE)
 <LI><a href="#[188]">touchgfx::Drawable::moveTo(short, short)</a> from abstractbutton.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from animatedimage.o(.constdata__ZTVN8touchgfx13AnimatedImageE)
 <LI><a href="#[188]">touchgfx::Drawable::moveTo(short, short)</a> from abstractbutton.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from pixeldatawidget.o(.constdata__ZTVN8touchgfx15PixelDataWidgetE)
 <LI><a href="#[188]">touchgfx::Drawable::moveTo(short, short)</a> from abstractbutton.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from clickablecontainer.o(.constdata__ZTVN8touchgfx18ClickableContainerE)
 <LI><a href="#[188]">touchgfx::Drawable::moveTo(short, short)</a> from abstractbutton.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[188]">touchgfx::Drawable::moveTo(short, short)</a> from abstractbutton.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[188]">touchgfx::Drawable::moveTo(short, short)</a> from abstractbutton.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[188]">touchgfx::Drawable::moveTo(short, short)</a> from abstractbutton.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from circle.o(.constdata__ZTVN8touchgfx6CircleE)
 <LI><a href="#[188]">touchgfx::Drawable::moveTo(short, short)</a> from abstractbutton.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from mainview.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[188]">touchgfx::Drawable::moveTo(short, short)</a> from abstractbutton.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[188]">touchgfx::Drawable::moveTo(short, short)</a> from abstractbutton.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[188]">touchgfx::Drawable::moveTo(short, short)</a> from abstractbutton.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[181]">touchgfx::Drawable::setWidth(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from scrollingmenu.o(.constdata__ZTV13ScrollingMenu)
 <LI><a href="#[181]">touchgfx::Drawable::setWidth(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from mainview.o(.constdata__ZTV14ImageContainer)
 <LI><a href="#[181]">touchgfx::Drawable::setWidth(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from particleeffect.o(.constdata__ZTV14ParticleEffect)
 <LI><a href="#[181]">touchgfx::Drawable::setWidth(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from touchforwarder.o(.constdata__ZTV14TouchForwarder)
 <LI><a href="#[181]">touchgfx::Drawable::setWidth(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from sparsecontainerlist.o(.constdata__ZTV19SparseContainerList)
 <LI><a href="#[181]">touchgfx::Drawable::setWidth(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from particleeffect.o(.constdata__ZTV8Particle)
 <LI><a href="#[181]">touchgfx::Drawable::setWidth(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from mjpegwidget.o(.constdata__ZTVN8touchgfx11MJPEGWidgetE)
 <LI><a href="#[181]">touchgfx::Drawable::setWidth(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[181]">touchgfx::Drawable::setWidth(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_13AnimatedImageEEE)
 <LI><a href="#[181]">touchgfx::Drawable::setWidth(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEEE)
 <LI><a href="#[181]">touchgfx::Drawable::setWidth(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[181]">touchgfx::Drawable::setWidth(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
 <LI><a href="#[181]">touchgfx::Drawable::setWidth(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6CircleEEE)
 <LI><a href="#[181]">touchgfx::Drawable::setWidth(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[181]">touchgfx::Drawable::setWidth(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from mainview.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
 <LI><a href="#[181]">touchgfx::Drawable::setWidth(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_6ButtonEEE)
 <LI><a href="#[181]">touchgfx::Drawable::setWidth(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from animatedimage.o(.constdata__ZTVN8touchgfx13AnimatedImageE)
 <LI><a href="#[181]">touchgfx::Drawable::setWidth(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from pixeldatawidget.o(.constdata__ZTVN8touchgfx15PixelDataWidgetE)
 <LI><a href="#[181]">touchgfx::Drawable::setWidth(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from clickablecontainer.o(.constdata__ZTVN8touchgfx18ClickableContainerE)
 <LI><a href="#[181]">touchgfx::Drawable::setWidth(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[181]">touchgfx::Drawable::setWidth(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[181]">touchgfx::Drawable::setWidth(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[181]">touchgfx::Drawable::setWidth(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from circle.o(.constdata__ZTVN8touchgfx6CircleE)
 <LI><a href="#[181]">touchgfx::Drawable::setWidth(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from mainview.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[181]">touchgfx::Drawable::setWidth(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[181]">touchgfx::Drawable::setWidth(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[181]">touchgfx::Drawable::setWidth(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[182]">touchgfx::Drawable::setHeight(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from scrollingmenu.o(.constdata__ZTV13ScrollingMenu)
 <LI><a href="#[182]">touchgfx::Drawable::setHeight(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from mainview.o(.constdata__ZTV14ImageContainer)
 <LI><a href="#[182]">touchgfx::Drawable::setHeight(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from particleeffect.o(.constdata__ZTV14ParticleEffect)
 <LI><a href="#[182]">touchgfx::Drawable::setHeight(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from touchforwarder.o(.constdata__ZTV14TouchForwarder)
 <LI><a href="#[182]">touchgfx::Drawable::setHeight(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from sparsecontainerlist.o(.constdata__ZTV19SparseContainerList)
 <LI><a href="#[182]">touchgfx::Drawable::setHeight(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from particleeffect.o(.constdata__ZTV8Particle)
 <LI><a href="#[182]">touchgfx::Drawable::setHeight(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from mjpegwidget.o(.constdata__ZTVN8touchgfx11MJPEGWidgetE)
 <LI><a href="#[182]">touchgfx::Drawable::setHeight(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[182]">touchgfx::Drawable::setHeight(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_13AnimatedImageEEE)
 <LI><a href="#[182]">touchgfx::Drawable::setHeight(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEEE)
 <LI><a href="#[182]">touchgfx::Drawable::setHeight(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[182]">touchgfx::Drawable::setHeight(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
 <LI><a href="#[182]">touchgfx::Drawable::setHeight(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6CircleEEE)
 <LI><a href="#[182]">touchgfx::Drawable::setHeight(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[182]">touchgfx::Drawable::setHeight(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from mainview.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
 <LI><a href="#[182]">touchgfx::Drawable::setHeight(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_6ButtonEEE)
 <LI><a href="#[182]">touchgfx::Drawable::setHeight(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from animatedimage.o(.constdata__ZTVN8touchgfx13AnimatedImageE)
 <LI><a href="#[182]">touchgfx::Drawable::setHeight(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from pixeldatawidget.o(.constdata__ZTVN8touchgfx15PixelDataWidgetE)
 <LI><a href="#[182]">touchgfx::Drawable::setHeight(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from clickablecontainer.o(.constdata__ZTVN8touchgfx18ClickableContainerE)
 <LI><a href="#[182]">touchgfx::Drawable::setHeight(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[182]">touchgfx::Drawable::setHeight(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[182]">touchgfx::Drawable::setHeight(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[182]">touchgfx::Drawable::setHeight(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from circle.o(.constdata__ZTVN8touchgfx6CircleE)
 <LI><a href="#[182]">touchgfx::Drawable::setHeight(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from mainview.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[182]">touchgfx::Drawable::setHeight(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[182]">touchgfx::Drawable::setHeight(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[182]">touchgfx::Drawable::setHeight(short)</a> from clickablecontainer.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[247]">touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[93]">touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::~TextureMapper_A4_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAE)
 <LI><a href="#[93]">touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::~TextureMapper_A4_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv)
 <LI><a href="#[94]">touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::~TextureMapper_A4_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAE)
 <LI><a href="#[94]">touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::~TextureMapper_A4_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv)
 <LI><a href="#[95]">touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::~TextureMapper_A4_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAE)
 <LI><a href="#[95]">touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::~TextureMapper_A4_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv)
 <LI><a href="#[96]">touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::~TextureMapper_A4_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAE)
 <LI><a href="#[96]">touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::~TextureMapper_A4_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv)
 <LI><a href="#[9f]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_RGB565_Opaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[9f]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_RGB565_Opaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv)
 <LI><a href="#[a0]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[a0]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv)
 <LI><a href="#[99]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[99]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv)
 <LI><a href="#[9b]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[9b]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv)
 <LI><a href="#[a7]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[a7]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv)
 <LI><a href="#[97]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[97]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv)
 <LI><a href="#[9a]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[9a]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv)
 <LI><a href="#[9c]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[9c]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv)
 <LI><a href="#[a8]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[a8]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv)
 <LI><a href="#[ab]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[ab]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv)
 <LI><a href="#[98]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[98]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv)
 <LI><a href="#[9d]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[9d]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv)
 <LI><a href="#[ac]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[ac]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv)
 <LI><a href="#[a3]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[a3]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv)
 <LI><a href="#[a5]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[a5]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv)
 <LI><a href="#[ad]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[ad]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv)
 <LI><a href="#[9e]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[9e]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv)
 <LI><a href="#[a1]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[a1]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv)
 <LI><a href="#[a4]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[a4]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv)
 <LI><a href="#[a6]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[a6]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv)
 <LI><a href="#[ae]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[ae]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv)
 <LI><a href="#[a2]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[a2]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv)
 <LI><a href="#[a9]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[a9]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv)
 <LI><a href="#[aa]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[aa]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv)
 <LI><a href="#[249]">touchgfx::LCD16bpp::blitCopy(const unsigned char*, touchgfx::Bitmap::BitmapFormat, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[248]">touchgfx::LCD16bpp::blitCopy(const unsigned short*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[24a]">touchgfx::LCD16bpp::fillRect(const touchgfx::Rect&, touchgfx::colortype, unsigned char)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[24f]">touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[b3]">touchgfx::LCD16bpp::~LCD16bpp()</a> from boardconfiguration.o(i._ZN8touchgfx8LCD16bppD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[b3]">touchgfx::LCD16bpp::~LCD16bpp()</a> from boardconfiguration.o(i._ZN8touchgfx8LCD16bppD1Ev) referenced from boardconfiguration.o(i.__sti___22_BoardConfiguration_cpp_dceb80ee)
 <LI><a href="#[1fb]">touchgfx::TextArea::getTextHeight()</a> from textarea.o(i._ZN8touchgfx8TextArea13getTextHeightEv) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[1fb]">touchgfx::TextArea::getTextHeight()</a> from textarea.o(i._ZN8touchgfx8TextArea13getTextHeightEv) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[193]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from mainview.o(.constdata__ZTV14ImageContainer)
 <LI><a href="#[193]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from sparsecontainerlist.o(.constdata__ZTV19SparseContainerList)
 <LI><a href="#[193]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[189]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from scrollingmenu.o(.constdata__ZTV13ScrollingMenu)
 <LI><a href="#[189]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from mainview.o(.constdata__ZTV14ImageContainer)
 <LI><a href="#[189]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from sparsecontainerlist.o(.constdata__ZTV19SparseContainerList)
 <LI><a href="#[189]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from clickablecontainer.o(.constdata__ZTVN8touchgfx18ClickableContainerE)
 <LI><a href="#[189]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[18a]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from scrollingmenu.o(.constdata__ZTV13ScrollingMenu)
 <LI><a href="#[18a]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from mainview.o(.constdata__ZTV14ImageContainer)
 <LI><a href="#[18a]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from sparsecontainerlist.o(.constdata__ZTV19SparseContainerList)
 <LI><a href="#[18a]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from clickablecontainer.o(.constdata__ZTVN8touchgfx18ClickableContainerE)
 <LI><a href="#[18a]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[18d]">touchgfx::Container::insert(touchgfx::Drawable*, touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container6insertEPNS_8DrawableERS1_) referenced from scrollingmenu.o(.constdata__ZTV13ScrollingMenu)
 <LI><a href="#[18d]">touchgfx::Container::insert(touchgfx::Drawable*, touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container6insertEPNS_8DrawableERS1_) referenced from mainview.o(.constdata__ZTV14ImageContainer)
 <LI><a href="#[18d]">touchgfx::Container::insert(touchgfx::Drawable*, touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container6insertEPNS_8DrawableERS1_) referenced from sparsecontainerlist.o(.constdata__ZTV19SparseContainerList)
 <LI><a href="#[18d]">touchgfx::Container::insert(touchgfx::Drawable*, touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container6insertEPNS_8DrawableERS1_) referenced from clickablecontainer.o(.constdata__ZTVN8touchgfx18ClickableContainerE)
 <LI><a href="#[18d]">touchgfx::Container::insert(touchgfx::Drawable*, touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container6insertEPNS_8DrawableERS1_) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[18b]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from scrollingmenu.o(.constdata__ZTV13ScrollingMenu)
 <LI><a href="#[18b]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from mainview.o(.constdata__ZTV14ImageContainer)
 <LI><a href="#[18b]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from sparsecontainerlist.o(.constdata__ZTV19SparseContainerList)
 <LI><a href="#[18b]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from clickablecontainer.o(.constdata__ZTVN8touchgfx18ClickableContainerE)
 <LI><a href="#[18b]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[18c]">touchgfx::Container::removeAll()</a> from container.o(i._ZN8touchgfx9Container9removeAllEv) referenced from scrollingmenu.o(.constdata__ZTV13ScrollingMenu)
 <LI><a href="#[18c]">touchgfx::Container::removeAll()</a> from container.o(i._ZN8touchgfx9Container9removeAllEv) referenced from mainview.o(.constdata__ZTV14ImageContainer)
 <LI><a href="#[18c]">touchgfx::Container::removeAll()</a> from container.o(i._ZN8touchgfx9Container9removeAllEv) referenced from sparsecontainerlist.o(.constdata__ZTV19SparseContainerList)
 <LI><a href="#[18c]">touchgfx::Container::removeAll()</a> from container.o(i._ZN8touchgfx9Container9removeAllEv) referenced from clickablecontainer.o(.constdata__ZTVN8touchgfx18ClickableContainerE)
 <LI><a href="#[18c]">touchgfx::Container::removeAll()</a> from container.o(i._ZN8touchgfx9Container9removeAllEv) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[250]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;ScreenSaverView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</a> from boardconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenSaverViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv) referenced from boardconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI15ScreenSaverViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[251]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;ScreenSaverView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</a> from boardconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenSaverViewNS2_INS1_3NilES4_EEEELt1EE7elementEt) referenced from boardconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI15ScreenSaverViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[252]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;ScreenSaverPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</a> from boardconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenSaverPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv) referenced from boardconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI20ScreenSaverPresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[253]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;ScreenSaverPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</a> from boardconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenSaverPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt) referenced from boardconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI20ScreenSaverPresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[254]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</a> from boardconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv) referenced from boardconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[255]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</a> from boardconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt) referenced from boardconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[1d2]">AboutView::setupScreen()</a> from aboutview.o(i._ZN9AboutView11setupScreenEv) referenced from aboutview.o(.constdata__ZTV9AboutView)
 <LI><a href="#[1d3]">AboutView::tearDownScreen()</a> from aboutview.o(i._ZN9AboutView14tearDownScreenEv) referenced from aboutview.o(.constdata__ZTV9AboutView)
 <LI><a href="#[1d1]">AboutView::~AboutView()</a> from aboutview.o(i._ZN9AboutViewD1Ev) referenced from aboutview.o(.constdata__ZTV9AboutView)
 <LI><a href="#[1d5]">VideoView::setupScreen()</a> from videoview.o(i._ZN9VideoView11setupScreenEv) referenced from videoview.o(.constdata__ZTV9VideoView)
 <LI><a href="#[123]">VideoView::buttonFadeDone(const touchgfx::FadeAnimator&lang;touchgfx::Image&rang;&)</a> from videoview.o(i._ZN9VideoView14buttonFadeDoneERKN8touchgfx12FadeAnimatorINS0_5ImageEEE) referenced from videoview.o(.constdata)
 <LI><a href="#[1d6]">VideoView::tearDownScreen()</a> from videoview.o(i._ZN9VideoView14tearDownScreenEv) referenced from videoview.o(.constdata__ZTV9VideoView)
 <LI><a href="#[1d8]">VideoView::handleTickEvent()</a> from videoview.o(i._ZN9VideoView15handleTickEventEv) referenced from videoview.o(.constdata__ZTV9VideoView)
 <LI><a href="#[1d7]">VideoView::handleClickEvent(const touchgfx::ClickEvent&)</a> from videoview.o(i._ZN9VideoView16handleClickEventERKN8touchgfx10ClickEventE) referenced from videoview.o(.constdata__ZTV9VideoView)
 <LI><a href="#[1d4]">VideoView::~VideoView()</a> from videoview.o(i._ZN9VideoViewD1Ev) referenced from videoview.o(.constdata__ZTV9VideoView)
 <LI><a href="#[143]">STM32F7HAL::getTFTFrameBuffer() const</a> from stm32f7hal.o(i._ZNK10STM32F7HAL17getTFTFrameBufferEv) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[19a]">ParticleEffect::getSolidRect() const</a> from particleeffect.o(i._ZNK14ParticleEffect12getSolidRectEv) referenced from particleeffect.o(.constdata__ZTV14ParticleEffect)
 <LI><a href="#[199]">ParticleEffect::draw(const touchgfx::Rect&) const</a> from particleeffect.o(i._ZNK14ParticleEffect4drawERKN8touchgfx4RectE) referenced from particleeffect.o(.constdata__ZTV14ParticleEffect)
 <LI><a href="#[1cf]">Particle::getSolidRect() const</a> from particleeffect.o(i._ZNK8Particle12getSolidRectEv) referenced from particleeffect.o(.constdata__ZTV8Particle)
 <LI><a href="#[1e1]">touchgfx::CanvasWidget::getPainter() const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget10getPainterEv) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[1e1]">touchgfx::CanvasWidget::getPainter() const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget10getPainterEv) referenced from mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6CircleEEE)
 <LI><a href="#[1e1]">touchgfx::CanvasWidget::getPainter() const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget10getPainterEv) referenced from circle.o(.constdata__ZTVN8touchgfx6CircleE)
 <LI><a href="#[1df]">touchgfx::CanvasWidget::invalidate() const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget10invalidateEv) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[1df]">touchgfx::CanvasWidget::invalidate() const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget10invalidateEv) referenced from mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6CircleEEE)
 <LI><a href="#[1df]">touchgfx::CanvasWidget::invalidate() const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget10invalidateEv) referenced from circle.o(.constdata__ZTVN8touchgfx6CircleE)
 <LI><a href="#[1de]">touchgfx::CanvasWidget::getSolidRect() const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget12getSolidRectEv) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[1de]">touchgfx::CanvasWidget::getSolidRect() const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget12getSolidRectEv) referenced from mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6CircleEEE)
 <LI><a href="#[1de]">touchgfx::CanvasWidget::getSolidRect() const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget12getSolidRectEv) referenced from circle.o(.constdata__ZTVN8touchgfx6CircleE)
 <LI><a href="#[1e3]">touchgfx::CanvasWidget::getMinimalRect() const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget14getMinimalRectEv) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[1dd]">touchgfx::CanvasWidget::draw(const touchgfx::Rect&) const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[1dd]">touchgfx::CanvasWidget::draw(const touchgfx::Rect&) const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE) referenced from mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6CircleEEE)
 <LI><a href="#[1dd]">touchgfx::CanvasWidget::draw(const touchgfx::Rect&) const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE) referenced from circle.o(.constdata__ZTVN8touchgfx6CircleE)
 <LI><a href="#[1e2]">touchgfx::CanvasWidget::getAlpha() const</a> from mainview.o(i._ZNK8touchgfx12CanvasWidget8getAlphaEv) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[1e2]">touchgfx::CanvasWidget::getAlpha() const</a> from mainview.o(i._ZNK8touchgfx12CanvasWidget8getAlphaEv) referenced from mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6CircleEEE)
 <LI><a href="#[1e2]">touchgfx::CanvasWidget::getAlpha() const</a> from mainview.o(i._ZNK8touchgfx12CanvasWidget8getAlphaEv) referenced from circle.o(.constdata__ZTVN8touchgfx6CircleE)
 <LI><a href="#[1fd]">touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::isFadeAnimationRunning() const</a> from mainviewbase.o(t._ZNK8touchgfx12FadeAnimatorINS_8TextAreaEE22isFadeAnimationRunningEv) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[20f]">touchgfx::GeneratedFont::getKerning(unsigned short, const touchgfx::GlyphNode*) const</a> from generatedfont.o(i._ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[210]">touchgfx::GeneratedFont::getGSUBTable() const</a> from generatedfont.o(i._ZNK8touchgfx13GeneratedFont12getGSUBTableEv) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[211]">touchgfx::GeneratedFont::getPixelData(const touchgfx::GlyphNode*) const</a> from generatedfont.o(i._ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[1db]">touchgfx::PixelDataWidget::getSolidRect() const</a> from pixeldatawidget.o(i._ZNK8touchgfx15PixelDataWidget12getSolidRectEv) referenced from mjpegwidget.o(.constdata__ZTVN8touchgfx11MJPEGWidgetE)
 <LI><a href="#[1db]">touchgfx::PixelDataWidget::getSolidRect() const</a> from pixeldatawidget.o(i._ZNK8touchgfx15PixelDataWidget12getSolidRectEv) referenced from pixeldatawidget.o(.constdata__ZTVN8touchgfx15PixelDataWidgetE)
 <LI><a href="#[1da]">touchgfx::PixelDataWidget::draw(const touchgfx::Rect&) const</a> from pixeldatawidget.o(i._ZNK8touchgfx15PixelDataWidget4drawERKNS_4RectE) referenced from mjpegwidget.o(.constdata__ZTVN8touchgfx11MJPEGWidgetE)
 <LI><a href="#[1da]">touchgfx::PixelDataWidget::draw(const touchgfx::Rect&) const</a> from pixeldatawidget.o(i._ZNK8touchgfx15PixelDataWidget4drawERKNS_4RectE) referenced from pixeldatawidget.o(.constdata__ZTVN8touchgfx15PixelDataWidgetE)
 <LI><a href="#[1ee]">touchgfx::TextAreaWithOneWildcard::getTextWidth() const</a> from textareawithwildcard.o(i._ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEEE)
 <LI><a href="#[1ea]">touchgfx::TextAreaWithOneWildcard::draw(const touchgfx::Rect&) const</a> from textareawithwildcard.o(i._ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEEE)
 <LI><a href="#[229]">touchgfx::Box::getSolidRect() const</a> from box.o(i._ZNK8touchgfx3Box12getSolidRectEv) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[228]">touchgfx::Box::draw(const touchgfx::Rect&) const</a> from box.o(i._ZNK8touchgfx3Box4drawERKNS_4RectE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[22c]">touchgfx::Font::getKerning(unsigned short, const touchgfx::GlyphNode*) const</a> from font.o(i._ZNK8touchgfx4Font10getKerningEtPKNS_9GlyphNodeE) referenced from font.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[22d]">touchgfx::Font::getGSUBTable() const</a> from constfont.o(i._ZNK8touchgfx4Font12getGSUBTableEv) referenced from font.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[22d]">touchgfx::Font::getGSUBTable() const</a> from constfont.o(i._ZNK8touchgfx4Font12getGSUBTableEv) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[20b]">touchgfx::Font::getFontHeight() const</a> from cachedfont.o(i._ZNK8touchgfx4Font13getFontHeightEv) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[20b]">touchgfx::Font::getFontHeight() const</a> from cachedfont.o(i._ZNK8touchgfx4Font13getFontHeightEv) referenced from font.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[20b]">touchgfx::Font::getFontHeight() const</a> from cachedfont.o(i._ZNK8touchgfx4Font13getFontHeightEv) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[20a]">touchgfx::Font::getStringWidth(unsigned char, const unsigned short*, ...) const</a> from font.o(i._ZNK8touchgfx4Font14getStringWidthEhPKtz) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[20a]">touchgfx::Font::getStringWidth(unsigned char, const unsigned short*, ...) const</a> from font.o(i._ZNK8touchgfx4Font14getStringWidthEhPKtz) referenced from font.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[20a]">touchgfx::Font::getStringWidth(unsigned char, const unsigned short*, ...) const</a> from font.o(i._ZNK8touchgfx4Font14getStringWidthEhPKtz) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[20d]">touchgfx::Font::getBitsPerPixel() const</a> from cachedfont.o(i._ZNK8touchgfx4Font15getBitsPerPixelEv) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[20d]">touchgfx::Font::getBitsPerPixel() const</a> from cachedfont.o(i._ZNK8touchgfx4Font15getBitsPerPixelEv) referenced from font.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[20d]">touchgfx::Font::getBitsPerPixel() const</a> from cachedfont.o(i._ZNK8touchgfx4Font15getBitsPerPixelEv) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[20e]">touchgfx::Font::getDataFormatA4() const</a> from cachedfont.o(i._ZNK8touchgfx4Font15getDataFormatA4Ev) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[20e]">touchgfx::Font::getDataFormatA4() const</a> from cachedfont.o(i._ZNK8touchgfx4Font15getDataFormatA4Ev) referenced from font.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[20e]">touchgfx::Font::getDataFormatA4() const</a> from cachedfont.o(i._ZNK8touchgfx4Font15getDataFormatA4Ev) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[209]">touchgfx::Font::getEllipsisChar() const</a> from cachedfont.o(i._ZNK8touchgfx4Font15getEllipsisCharEv) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[209]">touchgfx::Font::getEllipsisChar() const</a> from cachedfont.o(i._ZNK8touchgfx4Font15getEllipsisCharEv) referenced from font.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[209]">touchgfx::Font::getEllipsisChar() const</a> from cachedfont.o(i._ZNK8touchgfx4Font15getEllipsisCharEv) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[208]">touchgfx::Font::getFallbackChar() const</a> from cachedfont.o(i._ZNK8touchgfx4Font15getFallbackCharEv) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[208]">touchgfx::Font::getFallbackChar() const</a> from cachedfont.o(i._ZNK8touchgfx4Font15getFallbackCharEv) referenced from font.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[208]">touchgfx::Font::getFallbackChar() const</a> from cachedfont.o(i._ZNK8touchgfx4Font15getFallbackCharEv) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[1a]">touchgfx::Font::getStringWidthLTR(unsigned char, const unsigned short*, std::__va_list) const</a> from font.o(i._ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list) referenced 2 times from texts.o(.data)
 <LI><a href="#[20c]">touchgfx::Font::getMinimumTextHeight() const</a> from cachedfont.o(i._ZNK8touchgfx4Font20getMinimumTextHeightEv) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[20c]">touchgfx::Font::getMinimumTextHeight() const</a> from cachedfont.o(i._ZNK8touchgfx4Font20getMinimumTextHeightEv) referenced from font.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[20c]">touchgfx::Font::getMinimumTextHeight() const</a> from cachedfont.o(i._ZNK8touchgfx4Font20getMinimumTextHeightEv) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[207]">touchgfx::Font::getGlyph(unsigned short) const</a> from cachedfont.o(i._ZNK8touchgfx4Font8getGlyphEt) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[207]">touchgfx::Font::getGlyph(unsigned short) const</a> from cachedfont.o(i._ZNK8touchgfx4Font8getGlyphEt) referenced from font.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[207]">touchgfx::Font::getGlyph(unsigned short) const</a> from cachedfont.o(i._ZNK8touchgfx4Font8getGlyphEt) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[1e5]">touchgfx::Image::getSolidRect() const</a> from image.o(i._ZNK8touchgfx5Image12getSolidRectEv) referenced from mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_13AnimatedImageEEE)
 <LI><a href="#[1e5]">touchgfx::Image::getSolidRect() const</a> from image.o(i._ZNK8touchgfx5Image12getSolidRectEv) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[1e5]">touchgfx::Image::getSolidRect() const</a> from image.o(i._ZNK8touchgfx5Image12getSolidRectEv) referenced from mainview.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
 <LI><a href="#[1e5]">touchgfx::Image::getSolidRect() const</a> from image.o(i._ZNK8touchgfx5Image12getSolidRectEv) referenced from animatedimage.o(.constdata__ZTVN8touchgfx13AnimatedImageE)
 <LI><a href="#[1e5]">touchgfx::Image::getSolidRect() const</a> from image.o(i._ZNK8touchgfx5Image12getSolidRectEv) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[1ce]">touchgfx::Image::draw(const touchgfx::Rect&) const</a> from image.o(i._ZNK8touchgfx5Image4drawERKNS_4RectE) referenced from particleeffect.o(.constdata__ZTV8Particle)
 <LI><a href="#[1ce]">touchgfx::Image::draw(const touchgfx::Rect&) const</a> from image.o(i._ZNK8touchgfx5Image4drawERKNS_4RectE) referenced from mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_13AnimatedImageEEE)
 <LI><a href="#[1ce]">touchgfx::Image::draw(const touchgfx::Rect&) const</a> from image.o(i._ZNK8touchgfx5Image4drawERKNS_4RectE) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[1ce]">touchgfx::Image::draw(const touchgfx::Rect&) const</a> from image.o(i._ZNK8touchgfx5Image4drawERKNS_4RectE) referenced from mainview.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
 <LI><a href="#[1ce]">touchgfx::Image::draw(const touchgfx::Rect&) const</a> from image.o(i._ZNK8touchgfx5Image4drawERKNS_4RectE) referenced from animatedimage.o(.constdata__ZTVN8touchgfx13AnimatedImageE)
 <LI><a href="#[1ce]">touchgfx::Image::draw(const touchgfx::Rect&) const</a> from image.o(i._ZNK8touchgfx5Image4drawERKNS_4RectE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[1f2]">touchgfx::Button::getSolidRect() const</a> from button.o(i._ZNK8touchgfx6Button12getSolidRectEv) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
 <LI><a href="#[1f2]">touchgfx::Button::getSolidRect() const</a> from button.o(i._ZNK8touchgfx6Button12getSolidRectEv) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_6ButtonEEE)
 <LI><a href="#[1f2]">touchgfx::Button::getSolidRect() const</a> from button.o(i._ZNK8touchgfx6Button12getSolidRectEv) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[1f1]">touchgfx::Button::draw(const touchgfx::Rect&) const</a> from button.o(i._ZNK8touchgfx6Button4drawERKNS_4RectE) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
 <LI><a href="#[1f1]">touchgfx::Button::draw(const touchgfx::Rect&) const</a> from button.o(i._ZNK8touchgfx6Button4drawERKNS_4RectE) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_6ButtonEEE)
 <LI><a href="#[1f1]">touchgfx::Button::draw(const touchgfx::Rect&) const</a> from button.o(i._ZNK8touchgfx6Button4drawERKNS_4RectE) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[1f7]">touchgfx::Circle::getMinimalRect() const</a> from circle.o(i._ZNK8touchgfx6Circle14getMinimalRectEv) referenced from mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6CircleEEE)
 <LI><a href="#[1f7]">touchgfx::Circle::getMinimalRect() const</a> from circle.o(i._ZNK8touchgfx6Circle14getMinimalRectEv) referenced from circle.o(.constdata__ZTVN8touchgfx6CircleE)
 <LI><a href="#[1f8]">touchgfx::Circle::drawCanvasWidget(const touchgfx::Rect&) const</a> from circle.o(i._ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE) referenced from mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6CircleEEE)
 <LI><a href="#[1f8]">touchgfx::Circle::drawCanvasWidget(const touchgfx::Rect&) const</a> from circle.o(i._ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE) referenced from circle.o(.constdata__ZTVN8touchgfx6CircleE)
 <LI><a href="#[233]">touchgfx::Callback&lang;MainViewBase, const touchgfx::AbstractButton&, void, void&rang;::isValid() const</a> from mainviewbase.o(t._ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvEE)
 <LI><a href="#[235]">touchgfx::Callback&lang;AboutViewBase, const touchgfx::AbstractButton&, void, void&rang;::isValid() const</a> from aboutviewbase.o(t._ZNK8touchgfx8CallbackI13AboutViewBaseRKNS_14AbstractButtonEvvE7isValidEv) referenced from aboutviewbase.o(.constdata__ZTVN8touchgfx8CallbackI13AboutViewBaseRKNS_14AbstractButtonEvvEE)
 <LI><a href="#[237]">touchgfx::Callback&lang;VideoViewBase, const touchgfx::AbstractButton&, void, void&rang;::isValid() const</a> from videoviewbase.o(t._ZNK8touchgfx8CallbackI13VideoViewBaseRKNS_14AbstractButtonEvvE7isValidEv) referenced from videoviewbase.o(.constdata__ZTVN8touchgfx8CallbackI13VideoViewBaseRKNS_14AbstractButtonEvvEE)
 <LI><a href="#[239]">touchgfx::Callback&lang;ScreenSaverViewBase, const touchgfx::AbstractButton&, void, void&rang;::isValid() const</a> from screensaverviewbase.o(t._ZNK8touchgfx8CallbackI19ScreenSaverViewBaseRKNS_14AbstractButtonEvvE7isValidEv) referenced from screensaverviewbase.o(.constdata__ZTVN8touchgfx8CallbackI19ScreenSaverViewBaseRKNS_14AbstractButtonEvvEE)
 <LI><a href="#[23c]">touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::isValid() const</a> from frontendapplicationbase.o(t._ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
 <LI><a href="#[23e]">touchgfx::Callback&lang;MainView, const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&, void, void&rang;::isValid() const</a> from mainview.o(t._ZNK8touchgfx8CallbackI8MainViewRKNS_12FadeAnimatorINS_8TextAreaEEEvvE7isValidEv) referenced from mainview.o(.constdata__ZTVN8touchgfx8CallbackI8MainViewRKNS_12FadeAnimatorINS_8TextAreaEEEvvEE)
 <LI><a href="#[240]">touchgfx::Callback&lang;MainView, const touchgfx::AnimatedImage&, void, void&rang;::isValid() const</a> from mainview.o(t._ZNK8touchgfx8CallbackI8MainViewRKNS_13AnimatedImageEvvE7isValidEv) referenced from mainview.o(.constdata__ZTVN8touchgfx8CallbackI8MainViewRKNS_13AnimatedImageEvvEE)
 <LI><a href="#[242]">touchgfx::Callback&lang;MainView, int, int, void&rang;::isValid() const</a> from mainview.o(t._ZNK8touchgfx8CallbackI8MainViewiivE7isValidEv) referenced from mainview.o(.constdata__ZTVN8touchgfx8CallbackI8MainViewiivEE)
 <LI><a href="#[244]">touchgfx::Callback&lang;MainView, int, void, void&rang;::isValid() const</a> from mainview.o(t._ZNK8touchgfx8CallbackI8MainViewivvE7isValidEv) referenced from mainview.o(.constdata__ZTVN8touchgfx8CallbackI8MainViewivvEE)
 <LI><a href="#[246]">touchgfx::Callback&lang;VideoView, const touchgfx::FadeAnimator&lang;touchgfx::Image&rang;&, void, void&rang;::isValid() const</a> from videoview.o(t._ZNK8touchgfx8CallbackI9VideoViewRKNS_12FadeAnimatorINS_5ImageEEEvvE7isValidEv) referenced from videoview.o(.constdata__ZTVN8touchgfx8CallbackI9VideoViewRKNS_12FadeAnimatorINS_5ImageEEEvvEE)
 <LI><a href="#[179]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from scrollingmenu.o(.constdata__ZTV13ScrollingMenu)
 <LI><a href="#[179]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from mainview.o(.constdata__ZTV14ImageContainer)
 <LI><a href="#[179]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from particleeffect.o(.constdata__ZTV14ParticleEffect)
 <LI><a href="#[179]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from touchforwarder.o(.constdata__ZTV14TouchForwarder)
 <LI><a href="#[179]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from sparsecontainerlist.o(.constdata__ZTV19SparseContainerList)
 <LI><a href="#[179]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from particleeffect.o(.constdata__ZTV8Particle)
 <LI><a href="#[179]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from mjpegwidget.o(.constdata__ZTVN8touchgfx11MJPEGWidgetE)
 <LI><a href="#[179]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_13AnimatedImageEEE)
 <LI><a href="#[179]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEEE)
 <LI><a href="#[179]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[179]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
 <LI><a href="#[179]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[179]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from mainview.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
 <LI><a href="#[179]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_6ButtonEEE)
 <LI><a href="#[179]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from animatedimage.o(.constdata__ZTVN8touchgfx13AnimatedImageE)
 <LI><a href="#[179]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from pixeldatawidget.o(.constdata__ZTVN8touchgfx15PixelDataWidgetE)
 <LI><a href="#[179]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from clickablecontainer.o(.constdata__ZTVN8touchgfx18ClickableContainerE)
 <LI><a href="#[179]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[179]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[179]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[179]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from mainview.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[179]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[179]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[179]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[17b]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from scrollingmenu.o(.constdata__ZTV13ScrollingMenu)
 <LI><a href="#[17b]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from mainview.o(.constdata__ZTV14ImageContainer)
 <LI><a href="#[17b]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from particleeffect.o(.constdata__ZTV14ParticleEffect)
 <LI><a href="#[17b]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from touchforwarder.o(.constdata__ZTV14TouchForwarder)
 <LI><a href="#[17b]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from sparsecontainerlist.o(.constdata__ZTV19SparseContainerList)
 <LI><a href="#[17b]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from particleeffect.o(.constdata__ZTV8Particle)
 <LI><a href="#[17b]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from mjpegwidget.o(.constdata__ZTVN8touchgfx11MJPEGWidgetE)
 <LI><a href="#[17b]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[17b]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_13AnimatedImageEEE)
 <LI><a href="#[17b]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEEE)
 <LI><a href="#[17b]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[17b]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
 <LI><a href="#[17b]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6CircleEEE)
 <LI><a href="#[17b]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[17b]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from mainview.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
 <LI><a href="#[17b]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_6ButtonEEE)
 <LI><a href="#[17b]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from animatedimage.o(.constdata__ZTVN8touchgfx13AnimatedImageE)
 <LI><a href="#[17b]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from pixeldatawidget.o(.constdata__ZTVN8touchgfx15PixelDataWidgetE)
 <LI><a href="#[17b]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from clickablecontainer.o(.constdata__ZTVN8touchgfx18ClickableContainerE)
 <LI><a href="#[17b]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[17b]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[17b]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[17b]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from circle.o(.constdata__ZTVN8touchgfx6CircleE)
 <LI><a href="#[17b]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from mainview.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[17b]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[17b]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[17b]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[178]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from scrollingmenu.o(.constdata__ZTV13ScrollingMenu)
 <LI><a href="#[178]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from mainview.o(.constdata__ZTV14ImageContainer)
 <LI><a href="#[178]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from particleeffect.o(.constdata__ZTV14ParticleEffect)
 <LI><a href="#[178]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from touchforwarder.o(.constdata__ZTV14TouchForwarder)
 <LI><a href="#[178]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from sparsecontainerlist.o(.constdata__ZTV19SparseContainerList)
 <LI><a href="#[178]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from particleeffect.o(.constdata__ZTV8Particle)
 <LI><a href="#[178]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from mjpegwidget.o(.constdata__ZTVN8touchgfx11MJPEGWidgetE)
 <LI><a href="#[178]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[178]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_13AnimatedImageEEE)
 <LI><a href="#[178]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEEE)
 <LI><a href="#[178]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[178]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
 <LI><a href="#[178]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6CircleEEE)
 <LI><a href="#[178]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[178]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from mainview.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
 <LI><a href="#[178]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_6ButtonEEE)
 <LI><a href="#[178]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from animatedimage.o(.constdata__ZTVN8touchgfx13AnimatedImageE)
 <LI><a href="#[178]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from pixeldatawidget.o(.constdata__ZTVN8touchgfx15PixelDataWidgetE)
 <LI><a href="#[178]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from clickablecontainer.o(.constdata__ZTVN8touchgfx18ClickableContainerE)
 <LI><a href="#[178]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[178]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[178]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[178]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from circle.o(.constdata__ZTVN8touchgfx6CircleE)
 <LI><a href="#[178]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from mainview.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[178]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[178]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[178]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[17c]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from scrollingmenu.o(.constdata__ZTV13ScrollingMenu)
 <LI><a href="#[17c]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from mainview.o(.constdata__ZTV14ImageContainer)
 <LI><a href="#[17c]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from particleeffect.o(.constdata__ZTV14ParticleEffect)
 <LI><a href="#[17c]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from touchforwarder.o(.constdata__ZTV14TouchForwarder)
 <LI><a href="#[17c]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from sparsecontainerlist.o(.constdata__ZTV19SparseContainerList)
 <LI><a href="#[17c]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from particleeffect.o(.constdata__ZTV8Particle)
 <LI><a href="#[17c]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from mjpegwidget.o(.constdata__ZTVN8touchgfx11MJPEGWidgetE)
 <LI><a href="#[17c]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[17c]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_13AnimatedImageEEE)
 <LI><a href="#[17c]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEEE)
 <LI><a href="#[17c]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[17c]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
 <LI><a href="#[17c]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6CircleEEE)
 <LI><a href="#[17c]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[17c]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from mainview.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
 <LI><a href="#[17c]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_6ButtonEEE)
 <LI><a href="#[17c]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from animatedimage.o(.constdata__ZTVN8touchgfx13AnimatedImageE)
 <LI><a href="#[17c]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from pixeldatawidget.o(.constdata__ZTVN8touchgfx15PixelDataWidgetE)
 <LI><a href="#[17c]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from clickablecontainer.o(.constdata__ZTVN8touchgfx18ClickableContainerE)
 <LI><a href="#[17c]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[17c]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[17c]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[17c]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from circle.o(.constdata__ZTVN8touchgfx6CircleE)
 <LI><a href="#[17c]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from mainview.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[17c]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[17c]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[17c]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[24c]">touchgfx::LCD16bpp::framebufferFormat() const</a> from lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp17framebufferFormatEv) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[24d]">touchgfx::LCD16bpp::framebufferStride() const</a> from lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp17framebufferStrideEv) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[24e]">touchgfx::LCD16bpp::getColorFrom24BitRGB(unsigned char, unsigned char, unsigned char) const</a> from lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp20getColorFrom24BitRGBEhhh) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[24b]">touchgfx::LCD16bpp::bitDepth() const</a> from lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp8bitDepthEv) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[1eb]">touchgfx::TextArea::getSolidRect() const</a> from mainviewbase.o(i._ZNK8touchgfx8TextArea12getSolidRectEv) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEEE)
 <LI><a href="#[1eb]">touchgfx::TextArea::getSolidRect() const</a> from mainviewbase.o(i._ZNK8touchgfx8TextArea12getSolidRectEv) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[1eb]">touchgfx::TextArea::getSolidRect() const</a> from mainviewbase.o(i._ZNK8touchgfx8TextArea12getSolidRectEv) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1fc]">touchgfx::TextArea::getTextWidth() const</a> from textarea.o(i._ZNK8touchgfx8TextArea12getTextWidthEv) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[1fc]">touchgfx::TextArea::getTextWidth() const</a> from textarea.o(i._ZNK8touchgfx8TextArea12getTextWidthEv) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1ef]">touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const</a> from textarea.o(i._ZNK8touchgfx8TextArea19calculateTextHeightEPKtz) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEEE)
 <LI><a href="#[1ef]">touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const</a> from textarea.o(i._ZNK8touchgfx8TextArea19calculateTextHeightEPKtz) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[1ef]">touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const</a> from textarea.o(i._ZNK8touchgfx8TextArea19calculateTextHeightEPKtz) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1f9]">touchgfx::TextArea::draw(const touchgfx::Rect&) const</a> from textarea.o(i._ZNK8touchgfx8TextArea4drawERKNS_4RectE) referenced from mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[1f9]">touchgfx::TextArea::draw(const touchgfx::Rect&) const</a> from textarea.o(i._ZNK8touchgfx8TextArea4drawERKNS_4RectE) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[206]">touchgfx::ConstFont::getGlyph(unsigned short, const unsigned char*&, unsigned char&) const</a> from constfont.o(i._ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[206]">touchgfx::ConstFont::getGlyph(unsigned short, const unsigned char*&, unsigned char&) const</a> from constfont.o(i._ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[177]">touchgfx::Container::getSolidRect() const</a> from container.o(i._ZNK8touchgfx9Container12getSolidRectEv) referenced from scrollingmenu.o(.constdata__ZTV13ScrollingMenu)
 <LI><a href="#[177]">touchgfx::Container::getSolidRect() const</a> from container.o(i._ZNK8touchgfx9Container12getSolidRectEv) referenced from mainview.o(.constdata__ZTV14ImageContainer)
 <LI><a href="#[177]">touchgfx::Container::getSolidRect() const</a> from container.o(i._ZNK8touchgfx9Container12getSolidRectEv) referenced from sparsecontainerlist.o(.constdata__ZTV19SparseContainerList)
 <LI><a href="#[177]">touchgfx::Container::getSolidRect() const</a> from container.o(i._ZNK8touchgfx9Container12getSolidRectEv) referenced from clickablecontainer.o(.constdata__ZTVN8touchgfx18ClickableContainerE)
 <LI><a href="#[177]">touchgfx::Container::getSolidRect() const</a> from container.o(i._ZNK8touchgfx9Container12getSolidRectEv) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[176]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from scrollingmenu.o(.constdata__ZTV13ScrollingMenu)
 <LI><a href="#[176]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from mainview.o(.constdata__ZTV14ImageContainer)
 <LI><a href="#[176]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from sparsecontainerlist.o(.constdata__ZTV19SparseContainerList)
 <LI><a href="#[176]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from clickablecontainer.o(.constdata__ZTVN8touchgfx18ClickableContainerE)
 <LI><a href="#[176]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1a1]">touchgfx::TouchArea::getSolidRect() const</a> from touchforwarder.o(i._ZNK8touchgfx9TouchArea12getSolidRectEv) referenced from touchforwarder.o(.constdata__ZTV14TouchForwarder)
 <LI><a href="#[1a0]">touchgfx::TouchArea::draw(const touchgfx::Rect&) const</a> from touchforwarder.o(i._ZNK8touchgfx9TouchArea4drawERKNS_4RectE) referenced from touchforwarder.o(.constdata__ZTV14TouchForwarder)
 <LI><a href="#[1bd]">thunk{-4} to ScreenSaverPresenter::gotoScreenSaverMode()</a> from screensaverpresenter.o(i._ZThn4_N20ScreenSaverPresenter19gotoScreenSaverModeEv) referenced from screensaverpresenter.o(.constdata__ZTV20ScreenSaverPresenter)
 <LI><a href="#[1e4]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[1e4]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced from abstractpainter.o(.constdata__ZTVN8touchgfx15AbstractPainterE)
 <LI><a href="#[1e4]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 4 times from abstractpartition.o(.constdata__ZTVN8touchgfx17AbstractPartitionE)
 <LI><a href="#[1e4]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced from abstractpainterrgb565.o(.constdata__ZTVN8touchgfx21AbstractPainterRGB565E)
 <LI><a href="#[1e4]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 6 times from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[1e4]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced from font.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[1e4]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 2 times from mainview.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[1e4]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 3 times from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[1e4]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 2 times from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[25a]">__main</a> from __main.o(!!!main) referenced from startup_stm32f746xx.o(.text)
 <LI><a href="#[258]">__sti___15_Application_cpp_63cd8d44</a> from application.o(i.__sti___15_Application_cpp_63cd8d44) referenced from application.o(.init_array)
 <LI><a href="#[257]">__sti___21_typedtextdatabase_cpp__fonts</a> from typedtextdatabase.o(i.__sti___21_typedtextdatabase_cpp__fonts) referenced from typedtextdatabase.o(.init_array)
 <LI><a href="#[256]">__sti___22_BoardConfiguration_cpp_dceb80ee</a> from boardconfiguration.o(i.__sti___22_BoardConfiguration_cpp_dceb80ee) referenced from boardconfiguration.o(.init_array)
 <LI><a href="#[259]">__sti___7_LCD_cpp_86507772</a> from lcd.o(i.__sti___7_LCD_cpp_86507772) referenced from lcd.o(.init_array)
 <LI><a href="#[8b]">_get_lc_ctype</a> from lc_ctype_c.o(locale$$code) referenced from rt_ctype_table.o(.text)
 <LI><a href="#[8a]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[89]">_sputc</a> from _sputc.o(.text) referenced from noretval__2sprintf.o(.text)
 <LI><a href="#[dd]">access_virt_barray</a> from jmemmgr.o(i.access_virt_barray) referenced from jmemmgr.o(i.jinit_memory_mgr)
 <LI><a href="#[dc]">access_virt_sarray</a> from jmemmgr.o(i.access_virt_sarray) referenced from jmemmgr.o(i.jinit_memory_mgr)
 <LI><a href="#[d8]">alloc_barray</a> from jmemmgr.o(i.alloc_barray) referenced from jmemmgr.o(i.jinit_memory_mgr)
 <LI><a href="#[d6]">alloc_large</a> from jmemmgr.o(i.alloc_large) referenced from jmemmgr.o(i.jinit_memory_mgr)
 <LI><a href="#[d7]">alloc_sarray</a> from jmemmgr.o(i.alloc_sarray) referenced from jmemmgr.o(i.jinit_memory_mgr)
 <LI><a href="#[d5]">alloc_small</a> from jmemmgr.o(i.alloc_small) referenced from jmemmgr.o(i.jinit_memory_mgr)
 <LI><a href="#[100]">color_quantize</a> from jquant1.o(i.color_quantize) referenced from jquant1.o(i.start_pass_1_quant)
 <LI><a href="#[101]">color_quantize3</a> from jquant1.o(i.color_quantize3) referenced from jquant1.o(i.start_pass_1_quant)
 <LI><a href="#[b4]">consume_markers</a> from jdinput.o(i.consume_markers) referenced from jdinput.o(i.finish_input_pass)
 <LI><a href="#[b4]">consume_markers</a> from jdinput.o(i.consume_markers) referenced from jdinput.o(i.jinit_input_controller)
 <LI><a href="#[b4]">consume_markers</a> from jdinput.o(i.consume_markers) referenced from jdinput.o(i.reset_input_controller)
 <LI><a href="#[fc]">decode_mcu</a> from jdarith.o(i.decode_mcu) referenced from jdarith.o(i.start_pass)
 <LI><a href="#[112]">decode_mcu</a> from jdhuff.o(i.decode_mcu) referenced from jdhuff.o(i.start_pass_huff_decoder)
 <LI><a href="#[f9]">decode_mcu_AC_first</a> from jdarith.o(i.decode_mcu_AC_first) referenced from jdarith.o(i.start_pass)
 <LI><a href="#[10e]">decode_mcu_AC_first</a> from jdhuff.o(i.decode_mcu_AC_first) referenced from jdhuff.o(i.start_pass_huff_decoder)
 <LI><a href="#[f8]">decode_mcu_AC_refine</a> from jdarith.o(i.decode_mcu_AC_refine) referenced from jdarith.o(i.start_pass)
 <LI><a href="#[10d]">decode_mcu_AC_refine</a> from jdhuff.o(i.decode_mcu_AC_refine) referenced from jdhuff.o(i.start_pass_huff_decoder)
 <LI><a href="#[fa]">decode_mcu_DC_first</a> from jdarith.o(i.decode_mcu_DC_first) referenced from jdarith.o(i.start_pass)
 <LI><a href="#[10f]">decode_mcu_DC_first</a> from jdhuff.o(i.decode_mcu_DC_first) referenced from jdhuff.o(i.start_pass_huff_decoder)
 <LI><a href="#[fb]">decode_mcu_DC_refine</a> from jdarith.o(i.decode_mcu_DC_refine) referenced from jdarith.o(i.start_pass)
 <LI><a href="#[110]">decode_mcu_DC_refine</a> from jdhuff.o(i.decode_mcu_DC_refine) referenced from jdhuff.o(i.start_pass_huff_decoder)
 <LI><a href="#[111]">decode_mcu_sub</a> from jdhuff.o(i.decode_mcu_sub) referenced from jdhuff.o(i.start_pass_huff_decoder)
 <LI><a href="#[c6]">decompress_onepass</a> from jdcoefct.o(i.decompress_onepass) referenced from jdcoefct.o(i.jinit_d_coef_controller)
 <LI><a href="#[c5]">dummy_consume_data</a> from jdcoefct.o(i.dummy_consume_data) referenced from jdcoefct.o(i.jinit_d_coef_controller)
 <LI><a href="#[f2]">emit_message</a> from jerror.o(i.emit_message) referenced from jerror.o(i.jpeg_std_error)
 <LI><a href="#[f1]">error_exit</a> from jerror.o(i.error_exit) referenced from jerror.o(i.jpeg_std_error)
 <LI><a href="#[ed]">fill_mem_input_buffer</a> from jdatasrc.o(i.fill_mem_input_buffer) referenced from jdatasrc.o(i.jpeg_mem_src)
 <LI><a href="#[cc]">finish_input_pass</a> from jdinput.o(i.finish_input_pass) referenced from jdinput.o(i.jinit_input_controller)
 <LI><a href="#[d4]">finish_output_pass</a> from jdmaster.o(i.finish_output_pass) referenced from jdmaster.o(i.jinit_master_decompress)
 <LI><a href="#[106]">finish_pass1</a> from jquant2.o(i.finish_pass1) referenced from jquant2.o(i.start_pass_2_quant)
 <LI><a href="#[108]">finish_pass2</a> from jquant2.o(i.finish_pass2) referenced from jquant2.o(i.start_pass_2_quant)
 <LI><a href="#[b6]">finish_pass_1_quant</a> from jquant1.o(i.finish_pass_1_quant) referenced from jquant1.o(i.jinit_1pass_quantizer)
 <LI><a href="#[f4]">format_message</a> from jerror.o(i.format_message) referenced from jerror.o(i.jpeg_std_error)
 <LI><a href="#[de]">free_pool</a> from jmemmgr.o(i.free_pool) referenced from jmemmgr.o(i.jinit_memory_mgr)
 <LI><a href="#[10]">ft5336_Init</a> from ft5336.o(i.ft5336_Init) referenced 2 times from ft5336.o(.data)
 <LI><a href="#[11]">ft5336_ReadID</a> from ft5336.o(i.ft5336_ReadID) referenced 2 times from ft5336.o(.data)
 <LI><a href="#[12]">ft5336_Reset</a> from ft5336.o(i.ft5336_Reset) referenced 2 times from ft5336.o(.data)
 <LI><a href="#[17]">ft5336_TS_ClearIT</a> from ft5336.o(i.ft5336_TS_ClearIT) referenced 2 times from ft5336.o(.data)
 <LI><a href="#[14]">ft5336_TS_DetectTouch</a> from ft5336.o(i.ft5336_TS_DetectTouch) referenced 2 times from ft5336.o(.data)
 <LI><a href="#[19]">ft5336_TS_DisableIT</a> from ft5336.o(i.ft5336_TS_DisableIT) referenced 2 times from ft5336.o(.data)
 <LI><a href="#[16]">ft5336_TS_EnableIT</a> from ft5336.o(i.ft5336_TS_EnableIT) referenced 2 times from ft5336.o(.data)
 <LI><a href="#[15]">ft5336_TS_GetXY</a> from ft5336.o(i.ft5336_TS_GetXY) referenced 2 times from ft5336.o(.data)
 <LI><a href="#[18]">ft5336_TS_ITStatus</a> from ft5336.o(i.ft5336_TS_ITStatus) referenced 2 times from ft5336.o(.data)
 <LI><a href="#[13]">ft5336_TS_Start</a> from ft5336.o(i.ft5336_TS_Start) referenced 2 times from ft5336.o(.data)
 <LI><a href="#[e7]">fullsize_upsample</a> from jdsample.o(i.fullsize_upsample) referenced from jdsample.o(i.jinit_upsampler)
 <LI><a href="#[d2]">get_interesting_appn</a> from jdmarker.o(i.get_interesting_appn) referenced from jdmarker.o(i.jinit_marker_reader)
 <LI><a href="#[c0]">gray_rgb_convert</a> from jdcolor.o(i.gray_rgb_convert) referenced from jdcolor.o(i.jinit_color_deconverter)
 <LI><a href="#[bd]">grayscale_convert</a> from jdcolor.o(i.grayscale_convert) referenced from jdcolor.o(i.jinit_color_deconverter)
 <LI><a href="#[e2]">h2v1_merged_upsample</a> from jdmerge.o(i.h2v1_merged_upsample) referenced from jdmerge.o(i.jinit_merged_upsampler)
 <LI><a href="#[e9]">h2v1_upsample</a> from jdsample.o(i.h2v1_upsample) referenced from jdsample.o(i.jinit_upsampler)
 <LI><a href="#[e4]">h2v2_merged_upsample</a> from jdmerge.o(i.h2v2_merged_upsample) referenced from jdmerge.o(i.jinit_merged_upsampler)
 <LI><a href="#[ea]">h2v2_upsample</a> from jdsample.o(i.h2v2_upsample) referenced from jdsample.o(i.jinit_upsampler)
 <LI><a href="#[ec]">init_mem_source</a> from jdatasrc.o(i.init_mem_source) referenced from jdatasrc.o(i.jpeg_mem_src)
 <LI><a href="#[eb]">int_upsample</a> from jdsample.o(i.int_upsample) referenced from jdsample.o(i.jinit_upsampler)
 <LI><a href="#[ff]">jpeg_idct_float</a> from jidctflt.o(i.jpeg_idct_float) referenced from jddctmgr.o(i.start_pass)
 <LI><a href="#[fe]">jpeg_idct_ifast</a> from jidctfst.o(i.jpeg_idct_ifast) referenced from jddctmgr.o(i.start_pass)
 <LI><a href="#[fd]">jpeg_idct_islow</a> from jidctint.o(i.jpeg_idct_islow) referenced from jddctmgr.o(i.start_pass)
 <LI><a href="#[ef]">jpeg_resync_to_restart</a> from jdmarker.o(i.jpeg_resync_to_restart) referenced from jdatasrc.o(i.jpeg_mem_src)
 <LI><a href="#[e1]">merged_1v_upsample</a> from jdmerge.o(i.merged_1v_upsample) referenced from jdmerge.o(i.jinit_merged_upsampler)
 <LI><a href="#[e3]">merged_2v_upsample</a> from jdmerge.o(i.merged_2v_upsample) referenced from jdmerge.o(i.jinit_merged_upsampler)
 <LI><a href="#[b7]">new_color_map_1_quant</a> from jquant1.o(i.new_color_map_1_quant) referenced from jquant1.o(i.jinit_1pass_quantizer)
 <LI><a href="#[b9]">new_color_map_2_quant</a> from jquant2.o(i.new_color_map_2_quant) referenced from jquant2.o(i.jinit_2pass_quantizer)
 <LI><a href="#[e8]">noop_upsample</a> from jdsample.o(i.noop_upsample) referenced from jdsample.o(i.jinit_upsampler)
 <LI><a href="#[bc]">null_convert</a> from jdcolor.o(i.null_convert) referenced from jdcolor.o(i.jinit_color_deconverter)
 <LI><a href="#[f3]">output_message</a> from jerror.o(i.output_message) referenced from jerror.o(i.jpeg_std_error)
 <LI><a href="#[109]">pass2_fs_dither</a> from jquant2.o(i.pass2_fs_dither) referenced from jquant2.o(i.start_pass_2_quant)
 <LI><a href="#[107]">pass2_no_dither</a> from jquant2.o(i.pass2_no_dither) referenced from jquant2.o(i.start_pass_2_quant)
 <LI><a href="#[10a]">post_process_1pass</a> from jdpostct.o(i.post_process_1pass) referenced from jdpostct.o(i.start_pass_dpost)
 <LI><a href="#[10c]">post_process_2pass</a> from jdpostct.o(i.post_process_2pass) referenced from jdpostct.o(i.start_pass_dpost)
 <LI><a href="#[10b]">post_process_prepass</a> from jdpostct.o(i.post_process_prepass) referenced from jdpostct.o(i.start_pass_dpost)
 <LI><a href="#[d3]">prepare_for_output_pass</a> from jdmaster.o(i.prepare_for_output_pass) referenced from jdmaster.o(i.jinit_master_decompress)
 <LI><a href="#[105]">prescan_quantize</a> from jquant2.o(i.prescan_quantize) referenced from jquant2.o(i.start_pass_2_quant)
 <LI><a href="#[113]">process_data_context_main</a> from jdmainct.o(i.process_data_context_main) referenced from jdmainct.o(i.start_pass_main)
 <LI><a href="#[115]">process_data_crank_post</a> from jdmainct.o(i.process_data_crank_post) referenced from jdmainct.o(i.start_pass_main)
 <LI><a href="#[114]">process_data_simple_main</a> from jdmainct.o(i.process_data_simple_main) referenced from jdmainct.o(i.start_pass_main)
 <LI><a href="#[117]">prvIdleTask</a> from tasks.o(i.prvIdleTask) referenced from tasks.o(i.vTaskStartScheduler)
 <LI><a href="#[f7]">prvTaskExitError</a> from port.o(i.prvTaskExitError) referenced from port.o(i.pxPortInitialiseStack)
 <LI><a href="#[103]">quantize3_ord_dither</a> from jquant1.o(i.quantize3_ord_dither) referenced from jquant1.o(i.start_pass_1_quant)
 <LI><a href="#[104]">quantize_fs_dither</a> from jquant1.o(i.quantize_fs_dither) referenced from jquant1.o(i.start_pass_1_quant)
 <LI><a href="#[102]">quantize_ord_dither</a> from jquant1.o(i.quantize_ord_dither) referenced from jquant1.o(i.start_pass_1_quant)
 <LI><a href="#[d0]">read_markers</a> from jdmarker.o(i.read_markers) referenced from jdmarker.o(i.jinit_marker_reader)
 <LI><a href="#[d1]">read_restart_marker</a> from jdmarker.o(i.read_restart_marker) referenced from jdmarker.o(i.jinit_marker_reader)
 <LI><a href="#[db]">realize_virt_arrays</a> from jmemmgr.o(i.realize_virt_arrays) referenced from jmemmgr.o(i.jinit_memory_mgr)
 <LI><a href="#[da]">request_virt_barray</a> from jmemmgr.o(i.request_virt_barray) referenced from jmemmgr.o(i.jinit_memory_mgr)
 <LI><a href="#[d9]">request_virt_sarray</a> from jmemmgr.o(i.request_virt_sarray) referenced from jmemmgr.o(i.jinit_memory_mgr)
 <LI><a href="#[f5]">reset_error_mgr</a> from jerror.o(i.reset_error_mgr) referenced from jerror.o(i.jpeg_std_error)
 <LI><a href="#[ca]">reset_input_controller</a> from jdinput.o(i.reset_input_controller) referenced from jdinput.o(i.jinit_input_controller)
 <LI><a href="#[cf]">reset_marker_reader</a> from jdmarker.o(i.reset_marker_reader) referenced from jdmarker.o(i.jinit_marker_reader)
 <LI><a href="#[c1]">rgb_convert</a> from jdcolor.o(i.rgb_convert) referenced from jdcolor.o(i.jinit_color_deconverter)
 <LI><a href="#[be]">rgb_gray_convert</a> from jdcolor.o(i.rgb_gray_convert) referenced from jdcolor.o(i.jinit_color_deconverter)
 <LI><a href="#[df]">self_destruct</a> from jmemmgr.o(i.self_destruct) referenced from jmemmgr.o(i.jinit_memory_mgr)
 <LI><a href="#[e6]">sep_upsample</a> from jdsample.o(i.sep_upsample) referenced from jdsample.o(i.jinit_upsampler)
 <LI><a href="#[ee]">skip_input_data</a> from jdatasrc.o(i.skip_input_data) referenced from jdatasrc.o(i.jpeg_mem_src)
 <LI><a href="#[ce]">skip_variable</a> from jdmarker.o(i.skip_variable) referenced from jdmarker.o(i.jinit_marker_reader)
 <LI><a href="#[c3]">start_input_pass</a> from jdcoefct.o(i.start_input_pass) referenced from jdcoefct.o(i.jinit_d_coef_controller)
 <LI><a href="#[cb]">start_input_pass</a> from jdinput.o(i.start_input_pass) referenced from jdinput.o(i.jinit_input_controller)
 <LI><a href="#[c4]">start_output_pass</a> from jdcoefct.o(i.start_output_pass) referenced from jdcoefct.o(i.jinit_d_coef_controller)
 <LI><a href="#[ba]">start_pass</a> from jdarith.o(i.start_pass) referenced from jdarith.o(i.jinit_arith_decoder)
 <LI><a href="#[cd]">start_pass</a> from jddctmgr.o(i.start_pass) referenced from jddctmgr.o(i.jinit_inverse_dct)
 <LI><a href="#[b5]">start_pass_1_quant</a> from jquant1.o(i.start_pass_1_quant) referenced from jquant1.o(i.jinit_1pass_quantizer)
 <LI><a href="#[b8]">start_pass_2_quant</a> from jquant2.o(i.start_pass_2_quant) referenced from jquant2.o(i.jinit_2pass_quantizer)
 <LI><a href="#[bb]">start_pass_dcolor</a> from jdcolor.o(i.start_pass_dcolor) referenced from jdcolor.o(i.jinit_color_deconverter)
 <LI><a href="#[c8]">start_pass_dpost</a> from jdpostct.o(i.start_pass_dpost) referenced from jdpostct.o(i.jinit_d_post_controller)
 <LI><a href="#[c9]">start_pass_huff_decoder</a> from jdhuff.o(i.start_pass_huff_decoder) referenced from jdhuff.o(i.jinit_huff_decoder)
 <LI><a href="#[c7]">start_pass_main</a> from jdmainct.o(i.start_pass_main) referenced from jdmainct.o(i.jinit_d_main_controller)
 <LI><a href="#[e0]">start_pass_merged_upsample</a> from jdmerge.o(i.start_pass_merged_upsample) referenced from jdmerge.o(i.jinit_merged_upsampler)
 <LI><a href="#[e5]">start_pass_upsample</a> from jdsample.o(i.start_pass_upsample) referenced from jdsample.o(i.jinit_upsampler)
 <LI><a href="#[f0]">term_source</a> from jdatasrc.o(i.term_source) referenced from jdatasrc.o(i.jpeg_mem_src)
 <LI><a href="#[bf]">ycc_rgb_convert</a> from jdcolor.o(i.ycc_rgb_convert) referenced from jdcolor.o(i.jinit_color_deconverter)
 <LI><a href="#[c2]">ycck_cmyk_convert</a> from jdcolor.o(i.ycck_cmyk_convert) referenced from jdcolor.o(i.jinit_color_deconverter)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[25a]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[25c]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[25e]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[543]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[544]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[545]"></a>__decompress</STRONG> (Thumb, 90 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[546]"></a>__decompress1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[547]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[25f]"></a>_printf_n</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_n.o(.ARM.Collect$$_printf_percent$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_charcount
</UL>

<P><STRONG><a name="[29a]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[261]"></a>_printf_p</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_p.o(.ARM.Collect$$_printf_percent$$00000002))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_p &rArr; _printf_hex_ptr &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_hex_ptr
</UL>

<P><STRONG><a name="[263]"></a>_printf_i</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_i.o(.ARM.Collect$$_printf_percent$$00000008))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_i &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[265]"></a>_printf_d</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_d.o(.ARM.Collect$$_printf_percent$$00000009))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_d &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[266]"></a>_printf_u</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_u &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[267]"></a>_printf_o</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_o.o(.ARM.Collect$$_printf_percent$$0000000B))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_o &rArr; _printf_int_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
</UL>

<P><STRONG><a name="[269]"></a>_printf_x</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = _printf_x &rArr; _printf_int_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[548]"></a>_printf_l</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_l.o(.ARM.Collect$$_printf_percent$$00000012))

<P><STRONG><a name="[26b]"></a>_printf_c</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_c.o(.ARM.Collect$$_printf_percent$$00000013))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_c &rArr; _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[26d]"></a>_printf_s</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_s.o(.ARM.Collect$$_printf_percent$$00000014))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_s &rArr; _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
</UL>

<P><STRONG><a name="[26f]"></a>_printf_lc</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_lc.o(.ARM.Collect$$_printf_percent$$00000015))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_lc &rArr; _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wchar
</UL>

<P><STRONG><a name="[549]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))

<P><STRONG><a name="[280]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[271]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[273]"></a>__rt_lib_init_heap_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000005))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_heap_2 &rArr; _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[54a]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[54b]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[275]"></a>__rt_lib_init_rand_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_rand_2 &rArr; _rand_init &rArr; srand
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rand_init
</UL>

<P><STRONG><a name="[54c]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[277]"></a>__rt_lib_init_lc_common</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))
<BR><BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>

<P><STRONG><a name="[54d]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[54e]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[279]"></a>__rt_lib_init_lc_ctype_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000012))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_ctype_2 &rArr; _get_lc_ctype
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
</UL>

<P><STRONG><a name="[54f]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[550]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[551]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[552]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[27a]"></a>__rt_lib_init_cpp_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000031))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_cpp_2 &rArr; __cpp_initialize__aeabi_
</UL>
<BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cpp_initialize__aeabi_
</UL>

<P><STRONG><a name="[553]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[554]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[555]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[556]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[557]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[558]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[559]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[55a]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[55b]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[55c]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[55d]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[285]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[27b]"></a>__rt_lib_shutdown_cpp_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000001))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = __rt_lib_shutdown_cpp_2 &rArr; __cxa_finalize &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
</UL>

<P><STRONG><a name="[55e]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[55f]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[560]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[561]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[562]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[563]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[564]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[25d]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[565]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[27d]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[27f]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[566]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[281]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 388 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; touchgfx::hw_init() &rArr; BSP_QSPI_Init &rArr; QSPI_DummyCyclesCfg &rArr; QSPI_WriteEnable &rArr; HAL_QSPI_Command &rArr; QSPI_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[567]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[2b9]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[284]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[568]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[286]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[22]"></a>SVC_Handler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[520]"></a>__asm___6_port_c_39a90d8d__prvStartFirstTask</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[51f]"></a>__asm___6_port_c_39a90d8d__prvEnableVFP</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[24]"></a>PendSV_Handler</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PendSV_Handler &rArr; vTaskSwitchContext &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[517]"></a>vPortGetIPSR</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
</UL>

<P><STRONG><a name="[3af]"></a>rand</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, rand.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Particle::init(int, int, int, bool, unsigned short)
</UL>

<P><STRONG><a name="[1c]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[569]"></a>_maybe_terminate_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, maybetermalloc1.o(.emb_text), UNUSED)

<P><STRONG><a name="[1d]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>CEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>DCMI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[85]"></a>I2C4_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[84]"></a>I2C4_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>LPTIM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>LTDC_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>OTG_HS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>OTG_HS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>OTG_HS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>QUADSPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>SAI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>SAI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>SDMMC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[86]"></a>SPDIF_RX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>SPI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[7a]"></a>SPI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>SPI6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>UART7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>UART8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[2b8]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_stm32f746xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[289]"></a>malloc</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, h1_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_get_small
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_get_large
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>

<P><STRONG><a name="[28c]"></a>free</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, h1_free.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = free
</UL>
<BR>[Calls]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_free_small
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_free_large
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>

<P><STRONG><a name="[28d]"></a>__2sprintf</STRONG> (Thumb, 34 bytes, Stack size 32 bytes, noretval__2sprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::updateProgramTexts()
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;format_message
</UL>

<P><STRONG><a name="[290]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>

<P><STRONG><a name="[291]"></a>_printf_post_padding</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>

<P><STRONG><a name="[292]"></a>_printf_truncate_signed</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, _printf_truncate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[293]"></a>_printf_truncate_unsigned</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, _printf_truncate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[28f]"></a>_printf_str</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, _printf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[264]"></a>_printf_int_dec</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, _printf_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_signed
</UL>
<BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_u
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_i
</UL>

<P><STRONG><a name="[260]"></a>_printf_charcount</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, _printf_charcount.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_n
</UL>

<P><STRONG><a name="[295]"></a>_printf_wctomb</STRONG> (Thumb, 182 bytes, Stack size 56 bytes, _printf_wctomb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_wcrtomb
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>

<P><STRONG><a name="[268]"></a>_printf_int_oct</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, _printf_oct_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_int_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_o
</UL>

<P><STRONG><a name="[56a]"></a>_printf_longlong_oct</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, _printf_oct_int.o(.text), UNUSED)

<P><STRONG><a name="[297]"></a>_printf_longlong_hex</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, _printf_hex_int_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_hex_ptr
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[26a]"></a>_printf_int_hex</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, _printf_hex_int_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _printf_int_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
</UL>
<BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_x
</UL>

<P><STRONG><a name="[262]"></a>_printf_hex_ptr</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_hex_int_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_hex_ptr &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_p
</UL>

<P><STRONG><a name="[298]"></a>__printf</STRONG> (Thumb, 388 bytes, Stack size 40 bytes, __printf_flags_ss_wp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
</UL>
<BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[29b]"></a>srand</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, rand.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = srand
</UL>
<BR>[Called By]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rand_init
</UL>

<P><STRONG><a name="[276]"></a>_rand_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rand.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _rand_init &rArr; srand
</UL>
<BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand
</UL>
<BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_rand_2
</UL>

<P><STRONG><a name="[29c]"></a>abort</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, abort.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::execute()
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat)
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations)
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SparseContainerList::setup(bool, bool, short, short, short, short, short, short, short, touchgfx::GenericCallback&lang;int, touchgfx::Container**, void&rang;&, touchgfx::GenericCallback&lang;int, int, void&rang;&)
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getColorFrom24BitRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MJPEGWidget::setMovie(const unsigned char*, unsigned)
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParticleEffect::draw(const touchgfx::Rect&) const
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::getPainter() const
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimatedImage::handleTickEvent()
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::registerTimerWidget(touchgfx::Drawable*)
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SparseContainerItems&lang;ImageContainer, (int)5&rang;::getElement(int, touchgfx::Container**)
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::getBitmap() const
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::setupScreen()
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::assertValid() const
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;VideoView, VideoPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;AboutView, AboutPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;MainView, MainPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;ScreenSaverView, ScreenSaverPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::draw(const touchgfx::Rect&) const
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::setCache(unsigned short*, unsigned, unsigned)
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::add(touchgfx::Rect)
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(const touchgfx::CanvasWidget*, const touchgfx::Rect&)
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::setScanlineWidth(unsigned)
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getData() const
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getSolidRect() const
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopy(const unsigned short*, const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat)
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::framebufferStride() const
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::nextPixel(bool, touchgfx::TextRotation)
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::nextLine(bool, touchgfx::TextRotation)
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopy(const unsigned char*, touchgfx::Bitmap::BitmapFormat, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::setFrameBufferStartAddresses(void*, void*, void*)
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::setFrameBufferStartAddress(void*, unsigned short, bool, bool)
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextChar()
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LockFreeDMA_Queue::pop()
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LockFreeDMA_Queue::pushCopyOf(const touchgfx::BlitOp&)
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPainterRGB565::AbstractPainterRGB565__sub_object()
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::pushFront(unsigned short)
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::replaceAt(unsigned short, unsigned short)
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::dropFront(unsigned short)
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short)
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar(unsigned short)
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*)
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::fillInputBuffer()
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::gsubRuleMatch(const unsigned short*, unsigned short, unsigned short, unsigned short)
</UL>

<P><STRONG><a name="[29e]"></a>__aeabi_atexit</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, aeabi_atexit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ddtor_pointer_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___22_BoardConfiguration_cpp_dceb80ee
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL& touchgfx::touchgfx_generic_init&lang;STM32F7HAL&rang;(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, short, short, unsigned short*, unsigned, unsigned)
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_40_4bpp()
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_20_4bpp()
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_10_4bpp()
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_SairaCondensed_Medium_22_4bpp()
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_SairaCondensed_Medium_16_4bpp()
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_SairaCondensed_Medium_14_4bpp()
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_BilinearInterpolation()
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_BilinearInterpolation()
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_BilinearInterpolation()
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_NearestNeighbor()
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_BilinearInterpolation()
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_BilinearInterpolation()
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888_BilinearInterpolation()
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_NearestNeighbor()
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_NearestNeighbor()
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_NearestNeighbor()
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_NearestNeighbor()
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888_NearestNeighbor()
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4_BilinearInterpolation()
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4_NearestNeighbor()
</UL>

<P><STRONG><a name="[51d]"></a>memcmp</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
</UL>

<P><STRONG><a name="[3dc]"></a>strncmp</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, strncmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MJPEGWidget::setMovie(const unsigned char*, unsigned)
</UL>

<P><STRONG><a name="[3ec]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jcopy_sample_rows
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;master_selection
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_dht
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustHindiGlyph(const touchgfx::GlyphNode*)
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustThaiGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*)
</UL>

<P><STRONG><a name="[2a0]"></a>__rt_memcpy</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[56b]"></a>_memcpy_lastbytes</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_v6.o(.text), UNUSED)

<P><STRONG><a name="[2a1]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7DMA::setupDataFill(const touchgfx::BlitOp&)
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ConfigLayer
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ClickableContainer::handleClickEvent(const touchgfx::ClickEvent&)
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_dht
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_input_pass
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu_sub
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu_DC_first
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LockFreeDMA_Queue::pushCopyOf(const touchgfx::BlitOp&)
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL>

<P><STRONG><a name="[56c]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[56d]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[56e]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[2a2]"></a>__aeabi_memset</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, aeabi_memset.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
</UL>

<P><STRONG><a name="[4ab]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;master_selection
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_inverse_dct
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_d_coef_controller
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decompress_onepass
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_pass
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_restart
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_pass_2_quant
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_pass_1_quant
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quantize_ord_dither
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quantize_fs_dither
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;access_virt_sarray
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;access_virt_barray
</UL>

<P><STRONG><a name="[2a4]"></a>__rt_memclr</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[2a3]"></a>_memset</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[4e1]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_CreateDecompress
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_make_d_derived_tbl
</UL>

<P><STRONG><a name="[56f]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[570]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[2a5]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL>

<P><STRONG><a name="[571]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[5]"></a>__rt_heap_escrow</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[4]"></a>__rt_heap_expand</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[25b]"></a>__cpp_initialize__aeabi_</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, init_aeabi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __cpp_initialize__aeabi_
</UL>
<BR>[Called By]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_cpp_2
</UL>

<P><STRONG><a name="[374]"></a>__aeabi_vec_dtor</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, aeabi_vec_dtor_noexceptions.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __aeabi_vec_dtor
</UL>
<BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParticleEffect::~ParticleEffect()
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SparseContainerItems&lang;ImageContainer, (int)5&rang;::~SparseContainerItems()
</UL>

<P><STRONG><a name="[287]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>

<P><STRONG><a name="[28a]"></a>__rt_heap_descriptor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_heap_descriptor_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[29f]"></a>__rt_ddtor_pointer_addr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_ddtor_pointer_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>

<P><STRONG><a name="[572]"></a>__use_no_heap</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[573]"></a>__heap$guard</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[a]"></a>_terminate_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[7]"></a>_init_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[28b]"></a>__Heap_Full</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, init_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[2a7]"></a>__Heap_Broken</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[274]"></a>_init_alloc</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, init_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Initialize
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_heap_2
</UL>

<P><STRONG><a name="[2a9]"></a>__Heap_Initialize</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, h1_init.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[6]"></a>__Heap_DescSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, h1_init.o(.text), UNUSED)

<P><STRONG><a name="[2aa]"></a>__read_errno</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, _rserrno.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>

<P><STRONG><a name="[2ac]"></a>__set_errno</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, _rserrno.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosf
</UL>

<P><STRONG><a name="[294]"></a>_printf_int_common</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, _printf_intcommon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[28e]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 64 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>

<P><STRONG><a name="[89]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _sputc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> noretval__2sprintf.o(.text)
</UL>
<P><STRONG><a name="[2ad]"></a>_printf_cs_common</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[26c]"></a>_printf_char</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_c
</UL>

<P><STRONG><a name="[26e]"></a>_printf_string</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_s
</UL>

<P><STRONG><a name="[2ae]"></a>_printf_lcs_common</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, _printf_wchar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wstring
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wchar
</UL>

<P><STRONG><a name="[270]"></a>_printf_wchar</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_wchar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lc
</UL>

<P><STRONG><a name="[2af]"></a>_printf_wstring</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_wchar.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>

<P><STRONG><a name="[296]"></a>_wcrtomb</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, _wcrtomb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Called By]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
</UL>

<P><STRONG><a name="[27c]"></a>__cxa_finalize</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, cxa_finalize.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __cxa_finalize &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ddtor_pointer_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown_cpp_2
</UL>

<P><STRONG><a name="[29d]"></a>__rt_SIGABRT</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_abrt_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT_inner
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>

<P><STRONG><a name="[2b3]"></a>__rt_SIGPVFN</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_pvfn_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __rt_SIGPVFN &rArr; __rt_SIGPVFN_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGPVFN_inner
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_pure_virtual
</UL>

<P><STRONG><a name="[574]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[2b7]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[575]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[576]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[577]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[578]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[2b0]"></a>__rt_ctype_table</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rt_ctype_table.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>
<BR>[Called By]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_wcrtomb
</UL>

<P><STRONG><a name="[2ab]"></a>__aeabi_errno_addr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_errno
</UL>

<P><STRONG><a name="[579]"></a>__errno$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[57a]"></a>__rt_errno_addr$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[2a6]"></a>__Heap_ProvideMemory</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, h1_extend.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
</UL>

<P><STRONG><a name="[2b2]"></a>__sig_exit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, defsig_exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGPVFN
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[2b1]"></a>__rt_SIGABRT_inner</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_abrt_inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT
</UL>

<P><STRONG><a name="[2a8]"></a>__rt_SIGRTMEM</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_rtmem_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Broken
</UL>

<P><STRONG><a name="[2b4]"></a>__rt_SIGPVFN_inner</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_pvfn_inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGPVFN_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGPVFN
</UL>

<P><STRONG><a name="[27e]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[278]"></a>__rt_locale</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_locale_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_common
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>

<P><STRONG><a name="[283]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[2b5]"></a>__default_signal_display</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, defsig_general.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGPVFN_inner
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT_inner
</UL>

<P><STRONG><a name="[2b6]"></a>__rt_SIGRTMEM_inner</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, defsig_rtmem_inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[2ba]"></a>_ttywrch</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sys_wrch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>

<P><STRONG><a name="[529]"></a>strcmp</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, strcmpv7m_pel.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
</UL>

<P><STRONG><a name="[2bb]"></a>BSP_LCD_ClockConfig</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32746g_discovery_lcd.o(i.BSP_LCD_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = BSP_LCD_ClockConfig &rArr; HAL_RCCEx_PeriphCLKConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_Init
</UL>

<P><STRONG><a name="[2bd]"></a>BSP_LCD_DisplayOn</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, stm32746g_discovery_lcd.o(i.BSP_LCD_DisplayOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_LCD_DisplayOn
</UL>
<BR>[Calls]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::hw_init()
</UL>

<P><STRONG><a name="[412]"></a>BSP_LCD_GetXSize</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32746g_discovery_lcd.o(i.BSP_LCD_GetXSize))
<BR><BR>[Called By]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::hw_init()
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::STM32F746GTouchController::init()
</UL>

<P><STRONG><a name="[411]"></a>BSP_LCD_GetYSize</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32746g_discovery_lcd.o(i.BSP_LCD_GetYSize))
<BR><BR>[Called By]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::hw_init()
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::STM32F746GTouchController::init()
</UL>

<P><STRONG><a name="[2bf]"></a>BSP_LCD_Init</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, stm32746g_discovery_lcd.o(i.BSP_LCD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = BSP_LCD_Init &rArr; BSP_SDRAM_Init &rArr; BSP_SDRAM_MspInit &rArr; HAL_DMA_Init &rArr; DMA_CheckFifoParam
</UL>
<BR>[Calls]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_Init
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_MspInit
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_ClockConfig
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_Init
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_GetState
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::hw_init()
</UL>

<P><STRONG><a name="[2c1]"></a>BSP_LCD_MspInit</STRONG> (Thumb, 286 bytes, Stack size 48 bytes, stm32746g_discovery_lcd.o(i.BSP_LCD_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = BSP_LCD_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_Init
</UL>

<P><STRONG><a name="[2c5]"></a>BSP_LED_Init</STRONG> (Thumb, 68 bytes, Stack size 40 bytes, stm32746g_discovery.o(i.BSP_LED_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = BSP_LED_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::init()
</UL>

<P><STRONG><a name="[2c6]"></a>BSP_LED_Off</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32746g_discovery.o(i.BSP_LED_Off))
<BR><BR>[Calls]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID)
</UL>

<P><STRONG><a name="[2c7]"></a>BSP_LED_On</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32746g_discovery.o(i.BSP_LED_On))
<BR><BR>[Calls]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::set(touchgfx::GPIO::GPIO_ID)
</UL>

<P><STRONG><a name="[2c8]"></a>BSP_LED_Toggle</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32746g_discovery.o(i.BSP_LED_Toggle))
<BR><BR>[Calls]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_TogglePin
</UL>
<BR>[Called By]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::toggle(touchgfx::GPIO::GPIO_ID)
</UL>

<P><STRONG><a name="[2ca]"></a>BSP_QSPI_EnableMemoryMappedMode</STRONG> (Thumb, 66 bytes, Stack size 80 bytes, stm32746g_discovery_qspi.o(i.BSP_QSPI_EnableMemoryMappedMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = BSP_QSPI_EnableMemoryMappedMode &rArr; HAL_QSPI_MemoryMapped &rArr; QSPI_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_MemoryMapped
</UL>
<BR>[Called By]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::hw_init()
</UL>

<P><STRONG><a name="[2cc]"></a>BSP_QSPI_Init</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, stm32746g_discovery_qspi.o(i.BSP_QSPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = BSP_QSPI_Init &rArr; QSPI_DummyCyclesCfg &rArr; QSPI_WriteEnable &rArr; HAL_QSPI_Command &rArr; QSPI_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_QSPI_MspInit
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Init
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_DeInit
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_ResetMemory
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_DummyCyclesCfg
</UL>
<BR>[Called By]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::hw_init()
</UL>

<P><STRONG><a name="[2ce]"></a>BSP_QSPI_MspInit</STRONG> (Thumb, 262 bytes, Stack size 40 bytes, stm32746g_discovery_qspi.o(i.BSP_QSPI_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = BSP_QSPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_QSPI_Init
</UL>

<P><STRONG><a name="[2c3]"></a>BSP_SDRAM_Init</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, stm32746g_discovery_sdram.o(i.BSP_SDRAM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = BSP_SDRAM_Init &rArr; BSP_SDRAM_MspInit &rArr; HAL_DMA_Init &rArr; DMA_CheckFifoParam
</UL>
<BR>[Calls]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_MspInit
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_Init
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_Initialization_sequence
</UL>
<BR>[Called By]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::hw_init()
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_Init
</UL>

<P><STRONG><a name="[2d6]"></a>BSP_SDRAM_Initialization_sequence</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, stm32746g_discovery_sdram.o(i.BSP_SDRAM_Initialization_sequence))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = BSP_SDRAM_Initialization_sequence &rArr; HAL_SDRAM_SendCommand &rArr; FMC_SDRAM_SendCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_SendCommand
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_ProgramRefreshRate
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_Init
</UL>

<P><STRONG><a name="[2d4]"></a>BSP_SDRAM_MspInit</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, stm32746g_discovery_sdram.o(i.BSP_SDRAM_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = BSP_SDRAM_MspInit &rArr; HAL_DMA_Init &rArr; DMA_CheckFifoParam
</UL>
<BR>[Calls]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_DeInit
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_Init
</UL>

<P><STRONG><a name="[2dc]"></a>BSP_TS_GetState</STRONG> (Thumb, 360 bytes, Stack size 120 bytes, stm32746g_discovery_ts.o(i.BSP_TS_GetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = BSP_TS_GetState &rArr; BSP_TS_Get_GestureId &rArr; ft5336_TS_GetGestureID &rArr; TS_IO_Read &rArr; I2Cx_ReadMultiple &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft5336_TS_GetTouchInfo
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_TS_Get_GestureId
</UL>
<BR>[Called By]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::STM32F746GTouchController::sampleTouch(int&, int&)
</UL>

<P><STRONG><a name="[2de]"></a>BSP_TS_Get_GestureId</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, stm32746g_discovery_ts.o(i.BSP_TS_Get_GestureId))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = BSP_TS_Get_GestureId &rArr; ft5336_TS_GetGestureID &rArr; TS_IO_Read &rArr; I2Cx_ReadMultiple &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft5336_TS_GetGestureID
</UL>
<BR>[Called By]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_TS_GetState
</UL>

<P><STRONG><a name="[413]"></a>BSP_TS_Init</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, stm32746g_discovery_ts.o(i.BSP_TS_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BSP_TS_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::STM32F746GTouchController::init()
</UL>

<P><STRONG><a name="[3ce]"></a>CRC_Lock</STRONG> (Thumb, 120 bytes, Stack size 12 bytes, stm32_crc_lock.o(i.CRC_Lock))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CRC_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::Application()
</UL>

<P><STRONG><a name="[7f]"></a>DMA2D_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f7hal.o(i.DMA2D_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DMA2D_IRQHandler &rArr; SCB_CleanInvalidateDCache()
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCB_CleanInvalidateDCache()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[312]"></a>FMC_SDRAM_Init</STRONG> (Thumb, 94 bytes, Stack size 20 bytes, stm32f7xx_ll_fmc.o(i.FMC_SDRAM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FMC_SDRAM_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_Init
</UL>

<P><STRONG><a name="[314]"></a>FMC_SDRAM_ProgramRefreshRate</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f7xx_ll_fmc.o(i.FMC_SDRAM_ProgramRefreshRate))
<BR><BR>[Called By]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_ProgramRefreshRate
</UL>

<P><STRONG><a name="[2e1]"></a>FMC_SDRAM_SendCommand</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, stm32f7xx_ll_fmc.o(i.FMC_SDRAM_SendCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FMC_SDRAM_SendCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_SendCommand
</UL>

<P><STRONG><a name="[313]"></a>FMC_SDRAM_Timing_Init</STRONG> (Thumb, 134 bytes, Stack size 28 bytes, stm32f7xx_ll_fmc.o(i.FMC_SDRAM_Timing_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = FMC_SDRAM_Timing_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_Init
</UL>

<P><STRONG><a name="[2e3]"></a>HAL_DMA2D_Abort</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, stm32f7xx_hal_dma2d.o(i.HAL_DMA2D_Abort))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_DMA2D_Abort
</UL>
<BR>[Calls]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_DeInit
</UL>

<P><STRONG><a name="[2e4]"></a>HAL_DMA2D_BlendingStart_IT</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, stm32f7xx_hal_dma2d.o(i.HAL_DMA2D_BlendingStart_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_DMA2D_BlendingStart_IT &rArr; DMA2D_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7DMA::setupDataCopy(const touchgfx::BlitOp&)
</UL>

<P><STRONG><a name="[2e6]"></a>HAL_DMA2D_CLUTLoading_Abort</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, stm32f7xx_hal_dma2d.o(i.HAL_DMA2D_CLUTLoading_Abort))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_DMA2D_CLUTLoading_Abort
</UL>
<BR>[Calls]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_DeInit
</UL>

<P><STRONG><a name="[339]"></a>HAL_DMA2D_ConfigLayer</STRONG> (Thumb, 180 bytes, Stack size 20 bytes, stm32f7xx_hal_dma2d.o(i.HAL_DMA2D_ConfigLayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_DMA2D_ConfigLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7DMA::setupDataFill(const touchgfx::BlitOp&)
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7DMA::setupDataCopy(const touchgfx::BlitOp&)
</UL>

<P><STRONG><a name="[2e7]"></a>HAL_DMA2D_DeInit</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, stm32f7xx_hal_dma2d.o(i.HAL_DMA2D_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_DMA2D_DeInit &rArr; HAL_DMA2D_CLUTLoading_Abort
</UL>
<BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_MspDeInit
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_CLUTLoading_Abort
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Abort
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7DMA::setupDataFill(const touchgfx::BlitOp&)
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7DMA::setupDataCopy(const touchgfx::BlitOp&)
</UL>

<P><STRONG><a name="[2e9]"></a>HAL_DMA2D_Init</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, stm32f7xx_hal_dma2d.o(i.HAL_DMA2D_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7DMA::setupDataFill(const touchgfx::BlitOp&)
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7DMA::setupDataCopy(const touchgfx::BlitOp&)
</UL>

<P><STRONG><a name="[2e8]"></a>HAL_DMA2D_MspDeInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f7xx_hal_dma2d.o(i.HAL_DMA2D_MspDeInit))
<BR><BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_DeInit
</UL>

<P><STRONG><a name="[2ea]"></a>HAL_DMA2D_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f7xx_hal_dma2d.o(i.HAL_DMA2D_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Init
</UL>

<P><STRONG><a name="[2eb]"></a>HAL_DMA2D_Start_IT</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, stm32f7xx_hal_dma2d.o(i.HAL_DMA2D_Start_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_DMA2D_Start_IT &rArr; DMA2D_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7DMA::setupDataFill(const touchgfx::BlitOp&)
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7DMA::setupDataCopy(const touchgfx::BlitOp&)
</UL>

<P><STRONG><a name="[2ec]"></a>HAL_DMA_Abort</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, stm32f7xx_hal_dma.o(i.HAL_DMA_Abort))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_DMA_Abort
</UL>
<BR>[Calls]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Abort
</UL>

<P><STRONG><a name="[2da]"></a>HAL_DMA_DeInit</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, stm32f7xx_hal_dma.o(i.HAL_DMA_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_CalcBaseAndBitshift
</UL>
<BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_MspInit
</UL>

<P><STRONG><a name="[2db]"></a>HAL_DMA_Init</STRONG> (Thumb, 218 bytes, Stack size 32 bytes, stm32f7xx_hal_dma.o(i.HAL_DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_DMA_Init &rArr; DMA_CheckFifoParam
</UL>
<BR>[Calls]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_CheckFifoParam
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_CalcBaseAndBitshift
</UL>
<BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_MspInit
</UL>

<P><STRONG><a name="[2d8]"></a>HAL_Delay</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, stm32f7xx_hal.o(i.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_Initialization_sequence
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_IO_Delay
</UL>

<P><STRONG><a name="[2c4]"></a>HAL_GPIO_Init</STRONG> (Thumb, 418 bytes, Stack size 40 bytes, stm32f7xx_hal_gpio.o(i.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_MspInit
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Init
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_MspInit
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_MspInit
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_QSPI_MspInit
</UL>

<P><STRONG><a name="[2c9]"></a>HAL_GPIO_TogglePin</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f7xx_hal_gpio.o(i.HAL_GPIO_TogglePin))
<BR><BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Toggle
</UL>

<P><STRONG><a name="[2be]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f7xx_hal_gpio.o(i.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_On
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Off
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Init
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_Init
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_DisplayOn
</UL>

<P><STRONG><a name="[2e2]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f7xx_hal.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_EnableOverDrive
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Transmit
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Receive
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_MemoryMapped
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Init
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Command
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_AutoPolling
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_CLUTLoading_Abort
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Abort
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsAcknowledgeFailed
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Abort
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WaitFlagStateUntilTimeout
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAM_SendCommand
</UL>

<P><STRONG><a name="[2ef]"></a>HAL_I2C_DeInit</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, stm32f7xx_hal_i2c.o(i.HAL_I2C_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_I2C_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspDeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Error
</UL>

<P><STRONG><a name="[31c]"></a>HAL_I2C_GetState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f7xx_hal_i2c.o(i.HAL_I2C_GetState))
<BR><BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Init
</UL>

<P><STRONG><a name="[2f1]"></a>HAL_I2C_Init</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, stm32f7xx_hal_i2c.o(i.HAL_I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_I2C_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Init
</UL>

<P><STRONG><a name="[2f3]"></a>HAL_I2C_Mem_Read</STRONG> (Thumb, 360 bytes, Stack size 64 bytes, stm32f7xx_hal_i2c.o(i.HAL_I2C_Mem_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferConfig
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
</UL>
<BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_ReadMultiple
</UL>

<P><STRONG><a name="[2f8]"></a>HAL_I2C_Mem_Write</STRONG> (Thumb, 354 bytes, Stack size 64 bytes, stm32f7xx_hal_i2c.o(i.HAL_I2C_Mem_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferConfig
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_WriteMultiple
</UL>

<P><STRONG><a name="[2f0]"></a>HAL_I2C_MspDeInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f7xx_hal_i2c.o(i.HAL_I2C_MspDeInit))
<BR><BR>[Called By]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_DeInit
</UL>

<P><STRONG><a name="[2f2]"></a>HAL_I2C_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f7xx_hal_i2c.o(i.HAL_I2C_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
</UL>

<P><STRONG><a name="[328]"></a>HAL_IncTick</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f7xx_hal.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[2fb]"></a>HAL_Init</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f7xx_hal.o(i.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::hw_init()
</UL>

<P><STRONG><a name="[2fd]"></a>HAL_InitTick</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32f7xx_hal.o(i.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[300]"></a>HAL_LTDC_ConfigLayer</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, stm32f7xx_hal_ltdc.o(i.HAL_LTDC_ConfigLayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_LTDC_ConfigLayer &rArr; LTDC_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_SetConfig
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::hw_init()
</UL>

<P><STRONG><a name="[2c0]"></a>HAL_LTDC_GetState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f7xx_hal_ltdc.o(i.HAL_LTDC_GetState))
<BR><BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_Init
</UL>

<P><STRONG><a name="[2c2]"></a>HAL_LTDC_Init</STRONG> (Thumb, 252 bytes, Stack size 24 bytes, stm32f7xx_hal_ltdc.o(i.HAL_LTDC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_LTDC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_Init
</UL>

<P><STRONG><a name="[302]"></a>HAL_LTDC_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f7xx_hal_ltdc.o(i.HAL_LTDC_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_Init
</UL>

<P><STRONG><a name="[45d]"></a>HAL_MPU_ConfigRegion</STRONG> (Thumb, 86 bytes, Stack size 20 bytes, stm32f7xx_hal_cortex.o(i.HAL_MPU_ConfigRegion))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_MPU_ConfigRegion
</UL>
<BR>[Called By]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::hw_init()
</UL>

<P><STRONG><a name="[2fe]"></a>HAL_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f7xx_hal_msp_template.o(i.HAL_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[45c]"></a>HAL_NVIC_DisableIRQ</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f7xx_hal_cortex.o(i.HAL_NVIC_DisableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::hw_init()
</UL>

<P><STRONG><a name="[2d3]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f7xx_hal_cortex.o(i.HAL_NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_MspInit
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_MspInit
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_QSPI_MspInit
</UL>

<P><STRONG><a name="[2d2]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, stm32f7xx_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_MspInit
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_MspInit
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_QSPI_MspInit
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[2fc]"></a>HAL_NVIC_SetPriorityGrouping</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32f7xx_hal_cortex.o(i.HAL_NVIC_SetPriorityGrouping))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_NVIC_SetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[304]"></a>HAL_PWREx_EnableOverDrive</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, stm32f7xx_hal_pwr_ex.o(i.HAL_PWREx_EnableOverDrive))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_PWREx_EnableOverDrive
</UL>
<BR>[Calls]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[305]"></a>HAL_QSPI_Abort</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, stm32f7xx_hal_qspi.o(i.HAL_QSPI_Abort))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_QSPI_Abort &rArr; HAL_DMA_Abort
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Transmit
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Receive
</UL>

<P><STRONG><a name="[307]"></a>HAL_QSPI_AutoPolling</STRONG> (Thumb, 172 bytes, Stack size 40 bytes, stm32f7xx_hal_qspi.o(i.HAL_QSPI_AutoPolling))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = HAL_QSPI_AutoPolling &rArr; QSPI_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WaitFlagStateUntilTimeout
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WriteEnable
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_AutoPollingMemReady
</UL>

<P><STRONG><a name="[309]"></a>HAL_QSPI_Command</STRONG> (Thumb, 134 bytes, Stack size 40 bytes, stm32f7xx_hal_qspi.o(i.HAL_QSPI_Command))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = HAL_QSPI_Command &rArr; QSPI_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WaitFlagStateUntilTimeout
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WriteEnable
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_ResetMemory
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_DummyCyclesCfg
</UL>

<P><STRONG><a name="[2cd]"></a>HAL_QSPI_DeInit</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, stm32f7xx_hal_qspi.o(i.HAL_QSPI_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_QSPI_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_MspDeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_QSPI_Init
</UL>

<P><STRONG><a name="[2cf]"></a>HAL_QSPI_Init</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, stm32f7xx_hal_qspi.o(i.HAL_QSPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_QSPI_Init &rArr; QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_MspInit
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_QSPI_Init
</UL>

<P><STRONG><a name="[2cb]"></a>HAL_QSPI_MemoryMapped</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, stm32f7xx_hal_qspi.o(i.HAL_QSPI_MemoryMapped))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = HAL_QSPI_MemoryMapped &rArr; QSPI_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WaitFlagStateUntilTimeout
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_QSPI_EnableMemoryMappedMode
</UL>

<P><STRONG><a name="[30a]"></a>HAL_QSPI_MspDeInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f7xx_hal_qspi.o(i.HAL_QSPI_MspDeInit))
<BR><BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_DeInit
</UL>

<P><STRONG><a name="[30b]"></a>HAL_QSPI_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f7xx_hal_qspi.o(i.HAL_QSPI_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Init
</UL>

<P><STRONG><a name="[30c]"></a>HAL_QSPI_Receive</STRONG> (Thumb, 194 bytes, Stack size 40 bytes, stm32f7xx_hal_qspi.o(i.HAL_QSPI_Receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_QSPI_Receive &rArr; HAL_QSPI_Abort &rArr; HAL_DMA_Abort
</UL>
<BR>[Calls]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Abort
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_DummyCyclesCfg
</UL>

<P><STRONG><a name="[30d]"></a>HAL_QSPI_Transmit</STRONG> (Thumb, 186 bytes, Stack size 40 bytes, stm32f7xx_hal_qspi.o(i.HAL_QSPI_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_QSPI_Transmit &rArr; HAL_QSPI_Abort &rArr; HAL_DMA_Abort
</UL>
<BR>[Calls]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Abort
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_DummyCyclesCfg
</UL>

<P><STRONG><a name="[2bc]"></a>HAL_RCCEx_PeriphCLKConfig</STRONG> (Thumb, 1712 bytes, Stack size 40 bytes, stm32f7xx_hal_rcc_ex.o(i.HAL_RCCEx_PeriphCLKConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_RCCEx_PeriphCLKConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_ClockConfig
</UL>

<P><STRONG><a name="[30e]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 338 bytes, Stack size 32 bytes, stm32f7xx_hal_rcc.o(i.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[30f]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 120 bytes, Stack size 12 bytes, stm32f7xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[310]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 798 bytes, Stack size 40 bytes, stm32f7xx_hal_rcc.o(i.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_RCC_OscConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[2d5]"></a>HAL_SDRAM_Init</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, stm32f7xx_hal_sdram.o(i.HAL_SDRAM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_SDRAM_Init &rArr; FMC_SDRAM_Timing_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_MspInit
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAM_Timing_Init
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAM_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_Init
</UL>

<P><STRONG><a name="[311]"></a>HAL_SDRAM_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f7xx_hal_sdram.o(i.HAL_SDRAM_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_Init
</UL>

<P><STRONG><a name="[2d9]"></a>HAL_SDRAM_ProgramRefreshRate</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32f7xx_hal_sdram.o(i.HAL_SDRAM_ProgramRefreshRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SDRAM_ProgramRefreshRate
</UL>
<BR>[Calls]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAM_ProgramRefreshRate
</UL>
<BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_Initialization_sequence
</UL>

<P><STRONG><a name="[2d7]"></a>HAL_SDRAM_SendCommand</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, stm32f7xx_hal_sdram.o(i.HAL_SDRAM_SendCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_SDRAM_SendCommand &rArr; FMC_SDRAM_SendCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAM_SendCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_Initialization_sequence
</UL>

<P><STRONG><a name="[2ff]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, stm32f7xx_hal_cortex.o(i.HAL_SYSTICK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SYSTICK_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[315]"></a>HAL_TIM_Base_Init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, stm32f7xx_hal_tim.o(i.HAL_TIM_Base_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_TIM_Base_Init &rArr; TIM_Base_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::STM32F7Instrumentation::init()
</UL>

<P><STRONG><a name="[316]"></a>HAL_TIM_Base_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f7xx_hal_tim.o(i.HAL_TIM_Base_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[40e]"></a>HAL_TIM_Base_Start</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f7xx_hal_tim.o(i.HAL_TIM_Base_Start))
<BR><BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::STM32F7Instrumentation::init()
</UL>

<P><STRONG><a name="[7d]"></a>LTDC_IRQHandler</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, stm32f7hal.o(i.LTDC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = LTDC_IRQHandler &rArr; touchgfx::OSWrappers::signalVSync() &rArr; xQueueGenericSendFromISR &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::set(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::swapFrameBuffers()
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::signalVSync()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[324]"></a>OS_SysTick</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, port.o(i.OS_SysTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = OS_SysTick &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[25]"></a>SysTick_Handler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, boardconfiguration.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SysTick_Handler &rArr; OS_SysTick &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SysTick
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[329]"></a>SystemClock_Config</STRONG> (Thumb, 94 bytes, Stack size 88 bytes, boardconfiguration.o(i.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = SystemClock_Config &rArr; HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_EnableOverDrive
</UL>
<BR>[Called By]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::hw_init()
</UL>

<P><STRONG><a name="[87]"></a>SystemInit</STRONG> (Thumb, 68 bytes, Stack size 12 bytes, system_stm32f7xx.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SystemInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(.text)
</UL>
<P><STRONG><a name="[317]"></a>TIM_Base_SetConfig</STRONG> (Thumb, 150 bytes, Stack size 20 bytes, stm32f7xx_hal_tim.o(i.TIM_Base_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[32a]"></a>TS_IO_Delay</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32746g_discovery.o(i.TS_IO_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TS_IO_Delay &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft5336_Init
</UL>

<P><STRONG><a name="[32b]"></a>TS_IO_Init</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32746g_discovery.o(i.TS_IO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = TS_IO_Init &rArr; I2Cx_Init &rArr; I2Cx_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft5336_I2C_InitializeIfRequired
</UL>

<P><STRONG><a name="[32c]"></a>TS_IO_Read</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, stm32746g_discovery.o(i.TS_IO_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = TS_IO_Read &rArr; I2Cx_ReadMultiple &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_ReadMultiple
</UL>
<BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft5336_TS_GetTouchInfo
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft5336_TS_GetGestureID
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft5336_TS_GetXY
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft5336_TS_DetectTouch
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft5336_ReadID
</UL>

<P><STRONG><a name="[32d]"></a>TS_IO_Write</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, stm32746g_discovery.o(i.TS_IO_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = TS_IO_Write &rArr; I2Cx_WriteMultiple &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_WriteMultiple
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft5336_TS_EnableIT
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft5336_TS_DisableIT
</UL>

<P><STRONG><a name="[3a2]"></a>getProgramName(WasherProgram)</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, programs.o(i._Z14getProgramName13WasherProgram))
<BR><BR>[Called By]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::updateProgramTexts()
</UL>

<P><STRONG><a name="[3a4]"></a>getProgramTime(WasherProgram)</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, programs.o(i._Z14getProgramTime13WasherProgram))
<BR><BR>[Called By]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::updateProgramTexts()
</UL>

<P><STRONG><a name="[32f]"></a>getFont_verdana_10_4bpp()</STRONG> (Thumb, 82 bytes, Stack size 48 bytes, table_verdana_10_4bpp.o(i._Z23getFont_verdana_10_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = getFont_verdana_10_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*)
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_typedtextdatabase_cpp__fonts
</UL>

<P><STRONG><a name="[332]"></a>getFont_verdana_20_4bpp()</STRONG> (Thumb, 82 bytes, Stack size 48 bytes, table_verdana_20_4bpp.o(i._Z23getFont_verdana_20_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = getFont_verdana_20_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*)
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_typedtextdatabase_cpp__fonts
</UL>

<P><STRONG><a name="[333]"></a>getFont_verdana_40_4bpp()</STRONG> (Thumb, 82 bytes, Stack size 48 bytes, table_verdana_40_4bpp.o(i._Z23getFont_verdana_40_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = getFont_verdana_40_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*)
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_typedtextdatabase_cpp__fonts
</UL>

<P><STRONG><a name="[334]"></a>getFont_SairaCondensed_Medium_14_4bpp()</STRONG> (Thumb, 84 bytes, Stack size 48 bytes, table_sairacondensed_medium_14_4bpp.o(i._Z37getFont_SairaCondensed_Medium_14_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = getFont_SairaCondensed_Medium_14_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*)
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_typedtextdatabase_cpp__fonts
</UL>

<P><STRONG><a name="[335]"></a>getFont_SairaCondensed_Medium_16_4bpp()</STRONG> (Thumb, 84 bytes, Stack size 48 bytes, table_sairacondensed_medium_16_4bpp.o(i._Z37getFont_SairaCondensed_Medium_16_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = getFont_SairaCondensed_Medium_16_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*)
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_typedtextdatabase_cpp__fonts
</UL>

<P><STRONG><a name="[336]"></a>getFont_SairaCondensed_Medium_22_4bpp()</STRONG> (Thumb, 86 bytes, Stack size 48 bytes, table_sairacondensed_medium_22_4bpp.o(i._Z37getFont_SairaCondensed_Medium_22_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = getFont_SairaCondensed_Medium_22_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*)
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_typedtextdatabase_cpp__fonts
</UL>

<P><STRONG><a name="[12f]"></a>STM32F7DMA::initialize()</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f7dma.o(i._ZN10STM32F7DMA10initializeEv))
<BR>[Address Reference Count : 1]<UL><LI> stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
</UL>
<P><STRONG><a name="[12c]"></a>STM32F7DMA::getBlitCaps()</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f7dma.o(i._ZN10STM32F7DMA11getBlitCapsEv))
<BR>[Address Reference Count : 1]<UL><LI> stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
</UL>
<P><STRONG><a name="[136]"></a>STM32F7DMA::setupDataCopy(const touchgfx::BlitOp&)</STRONG> (Thumb, 392 bytes, Stack size 48 bytes, stm32f7dma.o(i._ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = STM32F7DMA::setupDataCopy(const touchgfx::BlitOp&) &rArr; HAL_DMA2D_Start_IT &rArr; DMA2D_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Start_IT
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Init
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_DeInit
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_ConfigLayer
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_BlendingStart_IT
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCB_CleanInvalidateDCache()
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ(IRQn_Type)
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ(IRQn_Type)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
</UL>
<P><STRONG><a name="[137]"></a>STM32F7DMA::setupDataFill(const touchgfx::BlitOp&)</STRONG> (Thumb, 254 bytes, Stack size 56 bytes, stm32f7dma.o(i._ZN10STM32F7DMA13setupDataFillERKN8touchgfx6BlitOpE))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = STM32F7DMA::setupDataFill(const touchgfx::BlitOp&) &rArr; HAL_DMA2D_Start_IT &rArr; DMA2D_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Start_IT
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Init
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_DeInit
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_ConfigLayer
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCB_CleanInvalidateDCache()
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ(IRQn_Type)
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ(IRQn_Type)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
</UL>
<P><STRONG><a name="[13b]"></a>STM32F7DMA::setupFillWithAlpha(const touchgfx::BlitOp&)</STRONG> (Thumb, 306 bytes, Stack size 40 bytes, stm32f7dma.o(i._ZN10STM32F7DMA18setupFillWithAlphaERKN8touchgfx6BlitOpE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = STM32F7DMA::setupFillWithAlpha(const touchgfx::BlitOp&) &rArr; SCB_CleanInvalidateDCache()
</UL>
<BR>[Calls]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCB_CleanInvalidateDCache()
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ(IRQn_Type)
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ(IRQn_Type)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
</UL>
<P><STRONG><a name="[131]"></a>STM32F7DMA::signalDMAInterrupt()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f7dma.o(i._ZN10STM32F7DMA18signalDMAInterruptEv))
<BR>[Address Reference Count : 1]<UL><LI> stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
</UL>
<P><STRONG><a name="[33c]"></a>STM32F7DMA::STM32F7DMA()</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, stm32f7dma.o(i._ZN10STM32F7DMAC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = STM32F7DMA::STM32F7DMA() &rArr; __aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LockFreeDMA_Queue::LockFreeDMA_Queue(touchgfx::BlitOp*, unsigned long)
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Called By]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___22_BoardConfiguration_cpp_dceb80ee
</UL>

<P><STRONG><a name="[57b]"></a>STM32F7DMA::STM32F7DMA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, stm32f7dma.o(i._ZN10STM32F7DMAC1Ev), UNUSED)

<P><STRONG><a name="[b0]"></a>STM32F7DMA::~STM32F7DMA()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f7dma.o(i._ZN10STM32F7DMAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> boardconfiguration.o(i.__sti___22_BoardConfiguration_cpp_dceb80ee)
<LI> stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
</UL>
<P><STRONG><a name="[57c]"></a>STM32F7DMA::~STM32F7DMA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32f7dma.o(i._ZN10STM32F7DMAD1Ev), UNUSED)

<P><STRONG><a name="[14e]"></a>STM32F7HAL::enableInterrupts()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32f7hal.o(i._ZN10STM32F7HAL16enableInterruptsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = STM32F7HAL::enableInterrupts()
</UL>
<BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ(IRQn_Type)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
</UL>
<P><STRONG><a name="[13e]"></a>STM32F7HAL::flushFrameBuffer(const touchgfx::Rect&)</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, stm32f7hal.o(i._ZN10STM32F7HAL16flushFrameBufferERKN8touchgfx4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = STM32F7HAL::flushFrameBuffer(const touchgfx::Rect&) &rArr; SCB_CleanInvalidateDCache()
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCB_CleanInvalidateDCache()
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::flushFrameBuffer(const touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
</UL>
<P><STRONG><a name="[14f]"></a>STM32F7HAL::disableInterrupts()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32f7hal.o(i._ZN10STM32F7HAL17disableInterruptsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = STM32F7HAL::disableInterrupts()
</UL>
<BR>[Calls]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ(IRQn_Type)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
</UL>
<P><STRONG><a name="[155]"></a>STM32F7HAL::getTFTCurrentLine()</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f7hal.o(i._ZN10STM32F7HAL17getTFTCurrentLineEv))
<BR>[Address Reference Count : 1]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
</UL>
<P><STRONG><a name="[15a]"></a>STM32F7HAL::setTFTFrameBuffer(unsigned short*)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f7hal.o(i._ZN10STM32F7HAL17setTFTFrameBufferEPt))
<BR>[Address Reference Count : 1]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
</UL>
<P><STRONG><a name="[14d]"></a>STM32F7HAL::configureInterrupts()</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm32f7hal.o(i._ZN10STM32F7HAL19configureInterruptsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = STM32F7HAL::configureInterrupts()
</UL>
<BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority(IRQn_Type, unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
</UL>
<P><STRONG><a name="[150]"></a>STM32F7HAL::enableLCDControllerInterrupt()</STRONG> (Thumb, 46 bytes, Stack size 12 bytes, stm32f7hal.o(i._ZN10STM32F7HAL28enableLCDControllerInterruptEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = STM32F7HAL::enableLCDControllerInterrupt()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
</UL>
<P><STRONG><a name="[11a]"></a>STM32F7HAL::~STM32F7HAL()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f7hal.o(i._ZN10STM32F7HALD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
<LI> boardconfiguration.o(t._ZN8touchgfx21touchgfx_generic_initI10STM32F7HALEERNS_3HALERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEssPtjj)
</UL>
<P><STRONG><a name="[57d]"></a>STM32F7HAL::~STM32F7HAL__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32f7hal.o(i._ZN10STM32F7HALD1Ev), UNUSED)

<P><STRONG><a name="[342]"></a>FrontendHeap::FrontendHeap()</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, boardconfiguration.o(i._ZN12FrontendHeapC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = FrontendHeap::FrontendHeap() &rArr; FrontendApplication::FrontendApplication(Model&, FrontendHeap&) &rArr; FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&) &rArr; touchgfx::LCD16bpp::enableTextureMapperAll() &rArr; touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888() &rArr; touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::AbstractPartition__sub_object()
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::Model()
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoScreenSaverScreenNoTransition()
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::FrontendApplication(Model&, FrontendHeap&)
</UL>
<BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL& touchgfx::touchgfx_generic_init&lang;STM32F7HAL&rang;(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, short, short, unsigned short*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[57e]"></a>FrontendHeap::FrontendHeap__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, boardconfiguration.o(i._ZN12FrontendHeapC1Ev), UNUSED)

<P><STRONG><a name="[11b]"></a>FrontendHeap::~FrontendHeap()</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, boardconfiguration.o(i._ZN12FrontendHeapD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FrontendHeap::~FrontendHeap()
</UL>
<BR>[Calls]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::~AbstractPartition__sub_object()
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::~FrontendApplicationBase()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> boardconfiguration.o(t._ZN8touchgfx21touchgfx_generic_initI10STM32F7HALEERNS_3HALERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEssPtjj)
<LI> boardconfiguration.o(.constdata__ZTV12FrontendHeap)
</UL>
<P><STRONG><a name="[57f]"></a>FrontendHeap::~FrontendHeap__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, boardconfiguration.o(i._ZN12FrontendHeapD1Ev), UNUSED)

<P><STRONG><a name="[160]"></a>MainViewBase::setupScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mainviewbase.o(i._ZN12MainViewBase11setupScreenEv))
<BR>[Address Reference Count : 1]<UL><LI> mainviewbase.o(.constdata__ZTV12MainViewBase)
</UL>
<P><STRONG><a name="[16a]"></a>MainViewBase::buttonUpClicked()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mainviewbase.o(i._ZN12MainViewBase15buttonUpClickedEv))
<BR>[Address Reference Count : 1]<UL><LI> mainviewbase.o(.constdata__ZTV12MainViewBase)
</UL>
<P><STRONG><a name="[16d]"></a>MainViewBase::buttonRunClicked()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mainviewbase.o(i._ZN12MainViewBase16buttonRunClickedEv))
<BR>[Address Reference Count : 1]<UL><LI> mainviewbase.o(.constdata__ZTV12MainViewBase)
</UL>
<P><STRONG><a name="[169]"></a>MainViewBase::leftButtonClicked()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mainviewbase.o(i._ZN12MainViewBase17leftButtonClickedEv))
<BR>[Address Reference Count : 1]<UL><LI> mainviewbase.o(.constdata__ZTV12MainViewBase)
</UL>
<P><STRONG><a name="[16c]"></a>MainViewBase::buttonPauseClicked()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mainviewbase.o(i._ZN12MainViewBase18buttonPauseClickedEv))
<BR>[Address Reference Count : 1]<UL><LI> mainviewbase.o(.constdata__ZTV12MainViewBase)
</UL>
<P><STRONG><a name="[16b]"></a>MainViewBase::buttonStartClicked()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mainviewbase.o(i._ZN12MainViewBase18buttonStartClickedEv))
<BR>[Address Reference Count : 1]<UL><LI> mainviewbase.o(.constdata__ZTV12MainViewBase)
</UL>
<P><STRONG><a name="[168]"></a>MainViewBase::rightButtonClicked()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mainviewbase.o(i._ZN12MainViewBase18rightButtonClickedEv))
<BR>[Address Reference Count : 1]<UL><LI> mainviewbase.o(.constdata__ZTV12MainViewBase)
</UL>
<P><STRONG><a name="[129]"></a>MainViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, mainviewbase.o(i._ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = MainViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&) &rArr; FrontendApplicationBase::gotoVideoScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoVideoScreenNoTransition()
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoAboutScreenNoTransition()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainviewbase.o(.constdata)
</UL>
<P><STRONG><a name="[34a]"></a>MainViewBase::MainViewBase()</STRONG> (Thumb, 1374 bytes, Stack size 176 bytes, mainviewbase.o(i._ZN12MainViewBaseC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = MainViewBase::MainViewBase() &rArr; touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::FadeAnimator() &rArr; touchgfx::Image::Image(const touchgfx::Bitmap&) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::Screen()
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getColorFrom24BitRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setTypedText(touchgfx::TypedText)
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::add(touchgfx::Drawable&)
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::Image(const touchgfx::Bitmap&)
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MoveAnimator&lang;touchgfx::Button&rang;::MoveAnimator()
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::FadeAnimator()
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::FadeAnimator()
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithOneWildcard&rang;::FadeAnimator()
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea()
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::Button()
</UL>
<BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::MainView()
</UL>

<P><STRONG><a name="[580]"></a>MainViewBase::MainViewBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 176 bytes, mainviewbase.o(i._ZN12MainViewBaseC1Ev), UNUSED)

<P><STRONG><a name="[15e]"></a>MainViewBase::~MainViewBase()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mainview.o(i._ZN12MainViewBaseD1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::~MainView()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainviewbase.o(.constdata__ZTV12MainViewBase)
</UL>
<P><STRONG><a name="[581]"></a>MainViewBase::~MainViewBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, mainview.o(i._ZN12MainViewBaseD1Ev), UNUSED)

<P><STRONG><a name="[16f]"></a>AboutViewBase::setupScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, aboutviewbase.o(i._ZN13AboutViewBase11setupScreenEv))
<BR>[Address Reference Count : 1]<UL><LI> aboutviewbase.o(.constdata__ZTV13AboutViewBase)
</UL>
<P><STRONG><a name="[124]"></a>AboutViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, aboutviewbase.o(i._ZN13AboutViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = AboutViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&) &rArr; FrontendApplicationBase::gotoMainScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoMainScreenNoTransition()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> aboutviewbase.o(.constdata)
</UL>
<P><STRONG><a name="[357]"></a>AboutViewBase::AboutViewBase()</STRONG> (Thumb, 382 bytes, Stack size 48 bytes, aboutviewbase.o(i._ZN13AboutViewBaseC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = AboutViewBase::AboutViewBase() &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::Screen()
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getColorFrom24BitRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::Box()
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setTypedText(touchgfx::TypedText)
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::add(touchgfx::Drawable&)
</UL>
<BR>[Called By]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AboutView::AboutView()
</UL>

<P><STRONG><a name="[582]"></a>AboutViewBase::AboutViewBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, aboutviewbase.o(i._ZN13AboutViewBaseC1Ev), UNUSED)

<P><STRONG><a name="[16e]"></a>AboutViewBase::~AboutViewBase()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, aboutviewbase.o(i._ZN13AboutViewBaseD1Ev))
<BR><BR>[Calls]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;AboutPresenter&rang;::~View()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> aboutviewbase.o(.constdata__ZTV13AboutViewBase)
</UL>
<P><STRONG><a name="[583]"></a>AboutViewBase::~AboutViewBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aboutviewbase.o(i._ZN13AboutViewBaseD1Ev), UNUSED)

<P><STRONG><a name="[171]"></a>MainPresenter::deactivate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mainpresenter.o(i._ZN13MainPresenter10deactivateEv))
<BR>[Address Reference Count : 1]<UL><LI> mainpresenter.o(.constdata__ZTV13MainPresenter)
</UL>
<P><STRONG><a name="[170]"></a>MainPresenter::activate()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, mainpresenter.o(i._ZN13MainPresenter8activateEv))
<BR>[Address Reference Count : 1]<UL><LI> mainpresenter.o(.constdata__ZTV13MainPresenter)
</UL>
<P><STRONG><a name="[537]"></a>MainPresenter::MainPresenter(MainView&)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, mainpresenter.o(i._ZN13MainPresenterC1ER8MainView))
<BR><BR>[Called By]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;MainView, MainPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[584]"></a>MainPresenter::MainPresenter__sub_object(MainView&)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, mainpresenter.o(i._ZN13MainPresenterC1ER8MainView), UNUSED)

<P><STRONG><a name="[172]"></a>MainPresenter::~MainPresenter()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mainpresenter.o(i._ZN13MainPresenterD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> mainpresenter.o(.constdata__ZTV13MainPresenter)
</UL>
<P><STRONG><a name="[585]"></a>MainPresenter::~MainPresenter__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, mainpresenter.o(i._ZN13MainPresenterD1Ev), UNUSED)

<P><STRONG><a name="[174]"></a>ModelListener::gotoMainScreenMode()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, aboutpresenter.o(i._ZN13ModelListener18gotoMainScreenModeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ModelListener::gotoMainScreenMode() &rArr; FrontendApplicationBase::gotoMainScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoMainScreenNoTransition()
</UL>
<BR>[Address Reference Count : 4]<UL><LI> aboutpresenter.o(.constdata__ZTV14AboutPresenter)
<LI> mainpresenter.o(.constdata__ZTV13MainPresenter)
<LI> screensaverpresenter.o(.constdata__ZTV20ScreenSaverPresenter)
<LI> videopresenter.o(.constdata__ZTV14VideoPresenter)
</UL>
<P><STRONG><a name="[173]"></a>ModelListener::gotoScreenSaverMode()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, aboutpresenter.o(i._ZN13ModelListener19gotoScreenSaverModeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ModelListener::gotoScreenSaverMode() &rArr; FrontendApplicationBase::gotoScreenSaverScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoScreenSaverScreenNoTransition()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> aboutpresenter.o(.constdata__ZTV14AboutPresenter)
<LI> mainpresenter.o(.constdata__ZTV13MainPresenter)
<LI> videopresenter.o(.constdata__ZTV14VideoPresenter)
</UL>
<P><STRONG><a name="[185]"></a>ScrollingMenu::handleDragEvent(const touchgfx::DragEvent&)</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, scrollingmenu.o(i._ZN13ScrollingMenu15handleDragEventERKN8touchgfx9DragEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ScrollingMenu::handleDragEvent(const touchgfx::DragEvent&) &rArr; touchgfx::ClickableContainer::handleDragEvent(const touchgfx::DragEvent&) &rArr; touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ClickableContainer::handleDragEvent(const touchgfx::DragEvent&)
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::keepOffsetInsideLimits(int, short) const
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::setVirtualOffset(int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollingmenu.o(.constdata__ZTV13ScrollingMenu)
</UL>
<P><STRONG><a name="[186]"></a>ScrollingMenu::handleTickEvent()</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, scrollingmenu.o(i._ZN13ScrollingMenu15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ScrollingMenu::handleTickEvent() &rArr; ScrollingMenu::setVirtualOffset(int) &rArr; SparseContainerList::setVirtualOffset(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::getNormalizedOffset(int) const
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::setVirtualOffset(int)
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::getSelectedItem() const
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollingmenu.o(.constdata__ZTV13ScrollingMenu)
</UL>
<P><STRONG><a name="[360]"></a>ScrollingMenu::setSelectedItem(int)</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, scrollingmenu.o(i._ZN13ScrollingMenu15setSelectedItemEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = ScrollingMenu::setSelectedItem(int) &rArr; ScrollingMenu::animateTo(int) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1 touchgfx::abs&lang;int&rang;(T1)
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::getNormalizedOffset(int) const
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::animateTo(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::rightButtonClicked()
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::leftButtonClicked()
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::setupScreen()
</UL>

<P><STRONG><a name="[183]"></a>ScrollingMenu::handleClickEvent(const touchgfx::ClickEvent&)</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, scrollingmenu.o(i._ZN13ScrollingMenu16handleClickEventERKN8touchgfx10ClickEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = ScrollingMenu::handleClickEvent(const touchgfx::ClickEvent&) &rArr; touchgfx::ClickableContainer::handleClickEvent(const touchgfx::ClickEvent&) &rArr; touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ClickableContainer::handleClickEvent(const touchgfx::ClickEvent&)
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::animateTo(int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollingmenu.o(.constdata__ZTV13ScrollingMenu)
</UL>
<P><STRONG><a name="[35c]"></a>ScrollingMenu::setVirtualOffset(int)</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, scrollingmenu.o(i._ZN13ScrollingMenu16setVirtualOffsetEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ScrollingMenu::setVirtualOffset(int) &rArr; SparseContainerList::setVirtualOffset(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SparseContainerList::setVirtualOffset(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::animateTo(int)
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::handleTickEvent()
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::handleDragEvent(const touchgfx::DragEvent&)
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::setup(bool, bool, short, short, short, short, short, short, short, touchgfx::GenericCallback&lang;int, touchgfx::Container**, void&rang;&, touchgfx::GenericCallback&lang;int, int, void&rang;&)
</UL>

<P><STRONG><a name="[184]"></a>ScrollingMenu::handleGestureEvent(const touchgfx::GestureEvent&)</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, scrollingmenu.o(i._ZN13ScrollingMenu18handleGestureEventERKN8touchgfx12GestureEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = ScrollingMenu::handleGestureEvent(const touchgfx::GestureEvent&) &rArr; ScrollingMenu::animateTo(int) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ClickableContainer::handleGestureEvent(const touchgfx::GestureEvent&)
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::keepOffsetInsideLimits(int, short) const
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::animateTo(int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollingmenu.o(.constdata__ZTV13ScrollingMenu)
</UL>
<P><STRONG><a name="[38d]"></a>ScrollingMenu::setAnimationEndedCallback(touchgfx::GenericCallback&lang;int, void, void&rang;&)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, scrollingmenu.o(i._ZN13ScrollingMenu25setAnimationEndedCallbackERN8touchgfx15GenericCallbackIivvEE))
<BR><BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::setupScreen()
</UL>

<P><STRONG><a name="[364]"></a>ScrollingMenu::setup(bool, bool, short, short, short, short, short, short, short, touchgfx::GenericCallback&lang;int, touchgfx::Container**, void&rang;&, touchgfx::GenericCallback&lang;int, int, void&rang;&)</STRONG> (Thumb, 184 bytes, Stack size 88 bytes, scrollingmenu.o(i._ZN13ScrollingMenu5setupEbbsssssssRN8touchgfx15GenericCallbackIiPPNS0_9ContainerEvEERNS1_IiivEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = ScrollingMenu::setup(bool, bool, short, short, short, short, short, short, short, touchgfx::GenericCallback&lang;int, touchgfx::Container**, void&rang;&, touchgfx::GenericCallback&lang;int, int, void&rang;&) &rArr; SparseContainerList::setup(bool, bool, short, short, short, short, short, short, short, touchgfx::GenericCallback&lang;int, touchgfx::Container**, void&rang;&, touchgfx::GenericCallback&lang;int, int, void&rang;&) &rArr; touchgfx::Container::add(touchgfx::Drawable&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::removeAll()
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SparseContainerList::setup(bool, bool, short, short, short, short, short, short, short, touchgfx::GenericCallback&lang;int, touchgfx::Container**, void&rang;&, touchgfx::GenericCallback&lang;int, int, void&rang;&)
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::setVirtualOffset(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::setupScreen()
</UL>

<P><STRONG><a name="[362]"></a>ScrollingMenu::animateTo(int)</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, scrollingmenu.o(i._ZN13ScrollingMenu9animateToEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = ScrollingMenu::animateTo(int) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::getNearestAlignedOffset(int) const
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::setVirtualOffset(int)
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::registerTimerWidget(touchgfx::Drawable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::handleGestureEvent(const touchgfx::GestureEvent&)
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::handleClickEvent(const touchgfx::ClickEvent&)
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::setSelectedItem(int)
</UL>

<P><STRONG><a name="[368]"></a>ScrollingMenu::ScrollingMenu()</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, scrollingmenu.o(i._ZN13ScrollingMenuC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ScrollingMenu::ScrollingMenu() &rArr; touchgfx::ClickableContainer::ClickableContainer() &rArr; touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ClickableContainer::ClickableContainer()
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SparseContainerList::SparseContainerList()
</UL>
<BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::MainView()
</UL>

<P><STRONG><a name="[586]"></a>ScrollingMenu::ScrollingMenu__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, scrollingmenu.o(i._ZN13ScrollingMenuC1Ev), UNUSED)

<P><STRONG><a name="[175]"></a>ScrollingMenu::~ScrollingMenu()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mainview.o(i._ZN13ScrollingMenuD1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::~MainView()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollingmenu.o(.constdata__ZTV13ScrollingMenu)
</UL>
<P><STRONG><a name="[587]"></a>ScrollingMenu::~ScrollingMenu__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, mainview.o(i._ZN13ScrollingMenuD1Ev), UNUSED)

<P><STRONG><a name="[18f]"></a>VideoViewBase::setupScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, videoviewbase.o(i._ZN13VideoViewBase11setupScreenEv))
<BR>[Address Reference Count : 1]<UL><LI> videoviewbase.o(.constdata__ZTV13VideoViewBase)
</UL>
<P><STRONG><a name="[12b]"></a>VideoViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, videoviewbase.o(i._ZN13VideoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = VideoViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&) &rArr; FrontendApplicationBase::gotoMainScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoMainScreenNoTransition()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> videoviewbase.o(.constdata)
</UL>
<P><STRONG><a name="[36b]"></a>VideoViewBase::VideoViewBase()</STRONG> (Thumb, 494 bytes, Stack size 80 bytes, videoviewbase.o(i._ZN13VideoViewBaseC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = VideoViewBase::VideoViewBase() &rArr; touchgfx::Image::Image(const touchgfx::Bitmap&) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::Screen()
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getColorFrom24BitRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setTypedText(touchgfx::TypedText)
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::add(touchgfx::Drawable&)
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::Image(const touchgfx::Bitmap&)
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::FadeAnimator()
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea()
</UL>
<BR>[Called By]<UL><LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VideoView::VideoView()
</UL>

<P><STRONG><a name="[588]"></a>VideoViewBase::VideoViewBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 80 bytes, videoviewbase.o(i._ZN13VideoViewBaseC1Ev), UNUSED)

<P><STRONG><a name="[18e]"></a>VideoViewBase::~VideoViewBase()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, videoviewbase.o(i._ZN13VideoViewBaseD1Ev))
<BR><BR>[Calls]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;VideoPresenter&rang;::~View()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> videoviewbase.o(.constdata__ZTV13VideoViewBase)
</UL>
<P><STRONG><a name="[589]"></a>VideoViewBase::~VideoViewBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, videoviewbase.o(i._ZN13VideoViewBaseD1Ev), UNUSED)

<P><STRONG><a name="[191]"></a>AboutPresenter::deactivate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, aboutpresenter.o(i._ZN14AboutPresenter10deactivateEv))
<BR>[Address Reference Count : 1]<UL><LI> aboutpresenter.o(.constdata__ZTV14AboutPresenter)
</UL>
<P><STRONG><a name="[190]"></a>AboutPresenter::activate()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, aboutpresenter.o(i._ZN14AboutPresenter8activateEv))
<BR>[Address Reference Count : 1]<UL><LI> aboutpresenter.o(.constdata__ZTV14AboutPresenter)
</UL>
<P><STRONG><a name="[538]"></a>AboutPresenter::AboutPresenter(AboutView&)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, aboutpresenter.o(i._ZN14AboutPresenterC1ER9AboutView))
<BR><BR>[Called By]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;AboutView, AboutPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[58a]"></a>AboutPresenter::AboutPresenter__sub_object(AboutView&)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aboutpresenter.o(i._ZN14AboutPresenterC1ER9AboutView), UNUSED)

<P><STRONG><a name="[192]"></a>AboutPresenter::~AboutPresenter()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, aboutpresenter.o(i._ZN14AboutPresenterD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> aboutpresenter.o(.constdata__ZTV14AboutPresenter)
</UL>
<P><STRONG><a name="[58b]"></a>AboutPresenter::~AboutPresenter__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aboutpresenter.o(i._ZN14AboutPresenterD1Ev), UNUSED)

<P><STRONG><a name="[53c]"></a>BitmapDatabase::getInstance()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bitmapdatabase.o(i._ZN14BitmapDatabase11getInstanceEv))
<BR><BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL& touchgfx::touchgfx_generic_init&lang;STM32F7HAL&rang;(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, short, short, unsigned short*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[53b]"></a>BitmapDatabase::getInstanceSize()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bitmapdatabase.o(i._ZN14BitmapDatabase15getInstanceSizeEv))
<BR><BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL& touchgfx::touchgfx_generic_init&lang;STM32F7HAL&rang;(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, short, short, unsigned short*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[36e]"></a>ImageContainer::setBitmap(touchgfx::Bitmap)</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, mainview.o(i._ZN14ImageContainer9setBitmapEN8touchgfx6BitmapE))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = ImageContainer::setBitmap(touchgfx::Bitmap) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::initializeCenterMenuItem(int, int)
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::initializeBackMenuItem(int, int)
</UL>

<P><STRONG><a name="[118]"></a>ImageContainer::ImageContainer()</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, mainview.o(i._ZN14ImageContainerC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = ImageContainer::ImageContainer() &rArr; touchgfx::Image::Image(const touchgfx::Bitmap&) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::Drawable__sub_object()
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::Image(const touchgfx::Bitmap&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainview.o(t._ZN20SparseContainerItemsI14ImageContainerLi5EEC1Ev)
</UL>
<P><STRONG><a name="[58c]"></a>ImageContainer::ImageContainer__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, mainview.o(i._ZN14ImageContainerC1Ev), UNUSED)

<P><STRONG><a name="[119]"></a>ImageContainer::~ImageContainer()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mainview.o(i._ZN14ImageContainerD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> mainview.o(t._ZN20SparseContainerItemsI14ImageContainerLi5EED1Ev)
<LI> mainview.o(.constdata__ZTV14ImageContainer)
</UL>
<P><STRONG><a name="[58d]"></a>ImageContainer::~ImageContainer__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, mainview.o(i._ZN14ImageContainerD1Ev), UNUSED)

<P><STRONG><a name="[19d]"></a>ParticleEffect::handleDragEvent(const touchgfx::DragEvent&)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, particleeffect.o(i._ZN14ParticleEffect15handleDragEventERKN8touchgfx9DragEventE))
<BR>[Address Reference Count : 1]<UL><LI> particleeffect.o(.constdata__ZTV14ParticleEffect)
</UL>
<P><STRONG><a name="[19e]"></a>ParticleEffect::handleTickEvent()</STRONG> (Thumb, 170 bytes, Stack size 40 bytes, particleeffect.o(i._ZN14ParticleEffect15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = ParticleEffect::handleTickEvent() &rArr; Particle::init(int, int, int, bool, unsigned short) &rArr; __hardfp_sinf &rArr; __mathlib_rredf2
</UL>
<BR>[Calls]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Particle::update()
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Particle::init(int, int, int, bool, unsigned short)
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Particle::done(int, int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> particleeffect.o(.constdata__ZTV14ParticleEffect)
</UL>
<P><STRONG><a name="[375]"></a>ParticleEffect::setSnapToOrigin(bool)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, particleeffect.o(i._ZN14ParticleEffect15setSnapToOriginEb))
<BR><BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScreenSaverView::setupScreen()
</UL>

<P><STRONG><a name="[19c]"></a>ParticleEffect::handleClickEvent(const touchgfx::ClickEvent&)</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, particleeffect.o(i._ZN14ParticleEffect16handleClickEventERKN8touchgfx10ClickEventE))
<BR>[Address Reference Count : 1]<UL><LI> particleeffect.o(.constdata__ZTV14ParticleEffect)
</UL>
<P><STRONG><a name="[37a]"></a>ParticleEffect::spawnNewParticles(bool)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, particleeffect.o(i._ZN14ParticleEffect17spawnNewParticlesEb))
<BR><BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScreenSaverView::endScreenSaverAnimation()
</UL>

<P><STRONG><a name="[376]"></a>ParticleEffect::setNumberOfParticles(int)</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, particleeffect.o(i._ZN14ParticleEffect20setNumberOfParticlesEi))
<BR><BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScreenSaverView::setupScreen()
</UL>

<P><STRONG><a name="[378]"></a>ParticleEffect::setCenter(int, int)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, particleeffect.o(i._ZN14ParticleEffect9setCenterEii))
<BR><BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScreenSaverView::setupScreen()
</UL>

<P><STRONG><a name="[377]"></a>ParticleEffect::setOrigin(int, int)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, particleeffect.o(i._ZN14ParticleEffect9setOriginEii))
<BR><BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScreenSaverView::setupScreen()
</UL>

<P><STRONG><a name="[373]"></a>ParticleEffect::ParticleEffect()</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, particleeffect.o(i._ZN14ParticleEffectC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = ParticleEffect::ParticleEffect() &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::registerTimerWidget(touchgfx::Drawable*)
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Called By]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScreenSaverView::ScreenSaverView()
</UL>

<P><STRONG><a name="[58e]"></a>ParticleEffect::ParticleEffect__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, particleeffect.o(i._ZN14ParticleEffectC1Ev), UNUSED)

<P><STRONG><a name="[198]"></a>ParticleEffect::~ParticleEffect()</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, particleeffect.o(i._ZN14ParticleEffectD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ParticleEffect::~ParticleEffect() &rArr; __aeabi_vec_dtor
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*)
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_dtor
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScreenSaverView::~ScreenSaverView()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> particleeffect.o(.constdata__ZTV14ParticleEffect)
</UL>
<P><STRONG><a name="[58f]"></a>ParticleEffect::~ParticleEffect__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, particleeffect.o(i._ZN14ParticleEffectD1Ev), UNUSED)

<P><STRONG><a name="[1a4]"></a>TouchForwarder::handleDragEvent(const touchgfx::DragEvent&)</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, touchforwarder.o(i._ZN14TouchForwarder15handleDragEventERKN8touchgfx9DragEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TouchForwarder::handleDragEvent(const touchgfx::DragEvent&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchforwarder.o(.constdata__ZTV14TouchForwarder)
</UL>
<P><STRONG><a name="[1a2]"></a>TouchForwarder::handleClickEvent(const touchgfx::ClickEvent&)</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, touchforwarder.o(i._ZN14TouchForwarder16handleClickEventERKN8touchgfx10ClickEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TouchForwarder::handleClickEvent(const touchgfx::ClickEvent&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchforwarder.o(.constdata__ZTV14TouchForwarder)
</UL>
<P><STRONG><a name="[1a3]"></a>TouchForwarder::handleGestureEvent(const touchgfx::GestureEvent&)</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, touchforwarder.o(i._ZN14TouchForwarder18handleGestureEventERKN8touchgfx12GestureEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TouchForwarder::handleGestureEvent(const touchgfx::GestureEvent&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchforwarder.o(.constdata__ZTV14TouchForwarder)
</UL>
<P><STRONG><a name="[1a6]"></a>VideoPresenter::deactivate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, videopresenter.o(i._ZN14VideoPresenter10deactivateEv))
<BR>[Address Reference Count : 1]<UL><LI> videopresenter.o(.constdata__ZTV14VideoPresenter)
</UL>
<P><STRONG><a name="[1a5]"></a>VideoPresenter::activate()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, videopresenter.o(i._ZN14VideoPresenter8activateEv))
<BR>[Address Reference Count : 1]<UL><LI> videopresenter.o(.constdata__ZTV14VideoPresenter)
</UL>
<P><STRONG><a name="[539]"></a>VideoPresenter::VideoPresenter(VideoView&)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, videopresenter.o(i._ZN14VideoPresenterC1ER9VideoView))
<BR><BR>[Called By]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;VideoView, VideoPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[590]"></a>VideoPresenter::VideoPresenter__sub_object(VideoView&)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, videopresenter.o(i._ZN14VideoPresenterC1ER9VideoView), UNUSED)

<P><STRONG><a name="[1a7]"></a>VideoPresenter::~VideoPresenter()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, videopresenter.o(i._ZN14VideoPresenterD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> videopresenter.o(.constdata__ZTV14VideoPresenter)
</UL>
<P><STRONG><a name="[591]"></a>VideoPresenter::~VideoPresenter__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, videopresenter.o(i._ZN14VideoPresenterD1Ev), UNUSED)

<P><STRONG><a name="[1a9]"></a>ScreenSaverView::setupScreen()</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, screensaverview.o(i._ZN15ScreenSaverView11setupScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ScreenSaverView::setupScreen()
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::setCurrentScreen(int)
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::insert(touchgfx::Drawable*, touchgfx::Drawable&)
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParticleEffect::setOrigin(int, int)
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParticleEffect::setCenter(int, int)
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParticleEffect::setNumberOfParticles(int)
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParticleEffect::setSnapToOrigin(bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screensaverview.o(.constdata__ZTV15ScreenSaverView)
</UL>
<P><STRONG><a name="[1ab]"></a>ScreenSaverView::tearDownScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screensaverview.o(i._ZN15ScreenSaverView14tearDownScreenEv))
<BR>[Address Reference Count : 1]<UL><LI> screensaverview.o(.constdata__ZTV15ScreenSaverView)
</UL>
<P><STRONG><a name="[1ad]"></a>ScreenSaverView::endScreenSaverAnimation()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, screensaverview.o(i._ZN15ScreenSaverView23endScreenSaverAnimationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ScreenSaverView::endScreenSaverAnimation()
</UL>
<BR>[Calls]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParticleEffect::spawnNewParticles(bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screensaverview.o(.constdata__ZTV15ScreenSaverView)
</UL>
<P><STRONG><a name="[37b]"></a>ScreenSaverView::ScreenSaverView()</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, screensaverview.o(i._ZN15ScreenSaverViewC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = ScreenSaverView::ScreenSaverView() &rArr; ScreenSaverViewBase::ScreenSaverViewBase() &rArr; touchgfx::Image::Image(const touchgfx::Bitmap&) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScreenSaverViewBase::ScreenSaverViewBase()
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParticleEffect::ParticleEffect()
</UL>
<BR>[Called By]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;ScreenSaverView, ScreenSaverPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[592]"></a>ScreenSaverView::ScreenSaverView__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, screensaverview.o(i._ZN15ScreenSaverViewC1Ev), UNUSED)

<P><STRONG><a name="[1a8]"></a>ScreenSaverView::~ScreenSaverView()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, screensaverview.o(i._ZN15ScreenSaverViewD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ScreenSaverView::~ScreenSaverView() &rArr; ParticleEffect::~ParticleEffect() &rArr; __aeabi_vec_dtor
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParticleEffect::~ParticleEffect()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screensaverview.o(.constdata__ZTV15ScreenSaverView)
</UL>
<P><STRONG><a name="[593]"></a>ScreenSaverView::~ScreenSaverView__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, screensaverview.o(i._ZN15ScreenSaverViewD1Ev), UNUSED)

<P><STRONG><a name="[431]"></a>TypedTextDatabase::getInstanceSize()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, typedtextdatabase.o(i._ZN17TypedTextDatabase15getInstanceSizeEv))
<BR><BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::setLanguage(unsigned short)
</UL>

<P><STRONG><a name="[430]"></a>TypedTextDatabase::getFonts()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, typedtextdatabase.o(i._ZN17TypedTextDatabase8getFontsEv))
<BR><BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::setLanguage(unsigned short)
</UL>

<P><STRONG><a name="[1af]"></a>FrontendApplication::handleDragEvent(const touchgfx::DragEvent&)</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, frontendapplication.o(i._ZN19FrontendApplication15handleDragEventERKN8touchgfx9DragEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FrontendApplication::handleDragEvent(const touchgfx::DragEvent&)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::handleDragEvent(const touchgfx::DragEvent&)
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::resetScreenSaverCounter()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
</UL>
<P><STRONG><a name="[1b2]"></a>FrontendApplication::handleTickEvent()</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, frontendapplication.o(i._ZN19FrontendApplication15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = FrontendApplication::handleTickEvent() &rArr; touchgfx::Application::handleTickEvent()
</UL>
<BR>[Calls]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::handleTickEvent()
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::tick()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
</UL>
<P><STRONG><a name="[1ae]"></a>FrontendApplication::handleClickEvent(const touchgfx::ClickEvent&)</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, frontendapplication.o(i._ZN19FrontendApplication16handleClickEventERKN8touchgfx10ClickEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FrontendApplication::handleClickEvent(const touchgfx::ClickEvent&)
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::handleClickEvent(const touchgfx::ClickEvent&)
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::resetScreenSaverCounter()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
</UL>
<P><STRONG><a name="[379]"></a>FrontendApplication::setCurrentScreen(int)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, frontendapplication.o(i._ZN19FrontendApplication16setCurrentScreenEi))
<BR><BR>[Calls]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::setCurrentScreen(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScreenSaverView::setupScreen()
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::setupScreen()
</UL>

<P><STRONG><a name="[344]"></a>FrontendApplication::FrontendApplication(Model&, FrontendHeap&)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, frontendapplication.o(i._ZN19FrontendApplicationC1ER5ModelR12FrontendHeap))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = FrontendApplication::FrontendApplication(Model&, FrontendHeap&) &rArr; FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&) &rArr; touchgfx::LCD16bpp::enableTextureMapperAll() &rArr; touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888() &rArr; touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)
</UL>
<BR>[Called By]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap()
</UL>

<P><STRONG><a name="[594]"></a>FrontendApplication::FrontendApplication__sub_object(Model&, FrontendHeap&)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, frontendapplication.o(i._ZN19FrontendApplicationC1ER5ModelR12FrontendHeap), UNUSED)

<P><STRONG><a name="[1b8]"></a>ScreenSaverViewBase::setupScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screensaverviewbase.o(i._ZN19ScreenSaverViewBase11setupScreenEv))
<BR>[Address Reference Count : 1]<UL><LI> screensaverviewbase.o(.constdata__ZTV19ScreenSaverViewBase)
</UL>
<P><STRONG><a name="[1aa]"></a>ScreenSaverViewBase::afterTransition()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, screensaverviewbase.o(i._ZN19ScreenSaverViewBase15afterTransitionEv))
<BR>[Address Reference Count : 2]<UL><LI> screensaverview.o(.constdata__ZTV15ScreenSaverView)
<LI> screensaverviewbase.o(.constdata__ZTV19ScreenSaverViewBase)
</UL>
<P><STRONG><a name="[1ac]"></a>ScreenSaverViewBase::handleTickEvent()</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, screensaverviewbase.o(i._ZN19ScreenSaverViewBase15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ScreenSaverViewBase::handleTickEvent() &rArr; FrontendApplicationBase::gotoMainScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoMainScreenNoTransition()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> screensaverview.o(.constdata__ZTV15ScreenSaverView)
<LI> screensaverviewbase.o(.constdata__ZTV19ScreenSaverViewBase)
</UL>
<P><STRONG><a name="[12a]"></a>ScreenSaverViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, screensaverviewbase.o(i._ZN19ScreenSaverViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = ScreenSaverViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::registerTimerWidget(touchgfx::Drawable*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screensaverviewbase.o(.constdata)
</UL>
<P><STRONG><a name="[1b9]"></a>ScreenSaverViewBase::endScreenSaverAnimation()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screensaverviewbase.o(i._ZN19ScreenSaverViewBase23endScreenSaverAnimationEv))
<BR>[Address Reference Count : 1]<UL><LI> screensaverviewbase.o(.constdata__ZTV19ScreenSaverViewBase)
</UL>
<P><STRONG><a name="[37c]"></a>ScreenSaverViewBase::ScreenSaverViewBase()</STRONG> (Thumb, 246 bytes, Stack size 40 bytes, screensaverviewbase.o(i._ZN19ScreenSaverViewBaseC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = ScreenSaverViewBase::ScreenSaverViewBase() &rArr; touchgfx::Image::Image(const touchgfx::Bitmap&) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::Screen()
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::Image(const touchgfx::Bitmap&)
</UL>
<BR>[Called By]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScreenSaverView::ScreenSaverView()
</UL>

<P><STRONG><a name="[595]"></a>ScreenSaverViewBase::ScreenSaverViewBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 40 bytes, screensaverviewbase.o(i._ZN19ScreenSaverViewBaseC1Ev), UNUSED)

<P><STRONG><a name="[1b7]"></a>ScreenSaverViewBase::~ScreenSaverViewBase()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, screensaverviewbase.o(i._ZN19ScreenSaverViewBaseD1Ev))
<BR><BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;ScreenSaverPresenter&rang;::~View()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screensaverviewbase.o(.constdata__ZTV19ScreenSaverViewBase)
</UL>
<P><STRONG><a name="[596]"></a>ScreenSaverViewBase::~ScreenSaverViewBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, screensaverviewbase.o(i._ZN19ScreenSaverViewBaseD1Ev), UNUSED)

<P><STRONG><a name="[363]"></a>SparseContainerList::setVirtualOffset(int)</STRONG> (Thumb, 436 bytes, Stack size 40 bytes, sparsecontainerlist.o(i._ZN19SparseContainerList16setVirtualOffsetEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SparseContainerList::setVirtualOffset(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SparseContainerList::setup(bool, bool, short, short, short, short, short, short, short, touchgfx::GenericCallback&lang;int, touchgfx::Container**, void&rang;&, touchgfx::GenericCallback&lang;int, int, void&rang;&)
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::setVirtualOffset(int)
</UL>

<P><STRONG><a name="[365]"></a>SparseContainerList::setup(bool, bool, short, short, short, short, short, short, short, touchgfx::GenericCallback&lang;int, touchgfx::Container**, void&rang;&, touchgfx::GenericCallback&lang;int, int, void&rang;&)</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, sparsecontainerlist.o(i._ZN19SparseContainerList5setupEbbsssssssRN8touchgfx15GenericCallbackIiPPNS0_9ContainerEvEERNS1_IiivEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = SparseContainerList::setup(bool, bool, short, short, short, short, short, short, short, touchgfx::GenericCallback&lang;int, touchgfx::Container**, void&rang;&, touchgfx::GenericCallback&lang;int, int, void&rang;&) &rArr; touchgfx::Container::add(touchgfx::Drawable&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::removeAll()
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SparseContainerList::setVirtualOffset(int)
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::setup(bool, bool, short, short, short, short, short, short, short, touchgfx::GenericCallback&lang;int, touchgfx::Container**, void&rang;&, touchgfx::GenericCallback&lang;int, int, void&rang;&)
</UL>

<P><STRONG><a name="[36a]"></a>SparseContainerList::SparseContainerList()</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, sparsecontainerlist.o(i._ZN19SparseContainerListC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SparseContainerList::SparseContainerList()
</UL>
<BR>[Called By]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::ScrollingMenu()
</UL>

<P><STRONG><a name="[597]"></a>SparseContainerList::SparseContainerList__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, sparsecontainerlist.o(i._ZN19SparseContainerListC1Ev), UNUSED)

<P><STRONG><a name="[1bb]"></a>ScreenSaverPresenter::deactivate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screensaverpresenter.o(i._ZN20ScreenSaverPresenter10deactivateEv))
<BR>[Address Reference Count : 1]<UL><LI> screensaverpresenter.o(.constdata__ZTV20ScreenSaverPresenter)
</UL>
<P><STRONG><a name="[1ba]"></a>ScreenSaverPresenter::activate()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, screensaverpresenter.o(i._ZN20ScreenSaverPresenter8activateEv))
<BR>[Address Reference Count : 1]<UL><LI> screensaverpresenter.o(.constdata__ZTV20ScreenSaverPresenter)
</UL>
<P><STRONG><a name="[536]"></a>ScreenSaverPresenter::ScreenSaverPresenter(ScreenSaverView&)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, screensaverpresenter.o(i._ZN20ScreenSaverPresenterC1ER15ScreenSaverView))
<BR><BR>[Called By]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;ScreenSaverView, ScreenSaverPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[598]"></a>ScreenSaverPresenter::ScreenSaverPresenter__sub_object(ScreenSaverView&)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, screensaverpresenter.o(i._ZN20ScreenSaverPresenterC1ER15ScreenSaverView), UNUSED)

<P><STRONG><a name="[1bc]"></a>ScreenSaverPresenter::~ScreenSaverPresenter()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screensaverpresenter.o(i._ZN20ScreenSaverPresenterD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> screensaverpresenter.o(.constdata__ZTV20ScreenSaverPresenter)
</UL>
<P><STRONG><a name="[599]"></a>ScreenSaverPresenter::~ScreenSaverPresenter__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, screensaverpresenter.o(i._ZN20ScreenSaverPresenterD1Ev), UNUSED)

<P><STRONG><a name="[af]"></a>ApplicationFontProvider::~ApplicationFontProvider()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, boardconfiguration.o(i._ZN23ApplicationFontProviderD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> boardconfiguration.o(i.__sti___22_BoardConfiguration_cpp_dceb80ee)
<LI> applicationfontprovider.o(.constdata__ZTV23ApplicationFontProvider)
</UL>
<P><STRONG><a name="[59a]"></a>ApplicationFontProvider::~ApplicationFontProvider__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, boardconfiguration.o(i._ZN23ApplicationFontProviderD1Ev), UNUSED)

<P><STRONG><a name="[356]"></a>FrontendApplicationBase::gotoMainScreenNoTransition()</STRONG> (Thumb, 36 bytes, Stack size 32 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = FrontendApplicationBase::gotoMainScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::operator =(const touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelListener::gotoMainScreenMode()
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScreenSaverViewBase::handleTickEvent()
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AboutViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::handleTickEvent()
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VideoViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)
</UL>

<P><STRONG><a name="[349]"></a>FrontendApplicationBase::gotoAboutScreenNoTransition()</STRONG> (Thumb, 36 bytes, Stack size 32 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase27gotoAboutScreenNoTransitionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = FrontendApplicationBase::gotoAboutScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::operator =(const touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)
</UL>

<P><STRONG><a name="[348]"></a>FrontendApplicationBase::gotoVideoScreenNoTransition()</STRONG> (Thumb, 36 bytes, Stack size 32 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase27gotoVideoScreenNoTransitionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = FrontendApplicationBase::gotoVideoScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::operator =(const touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)
</UL>

<P><STRONG><a name="[125]"></a>FrontendApplicationBase::gotoMainScreenNoTransitionImpl()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = FrontendApplicationBase::gotoMainScreenNoTransitionImpl() &rArr; T2* touchgfx::makeTransition&lang;MainView, MainPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; MainView::MainView() &rArr; MainViewBase::MainViewBase() &rArr; touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::FadeAnimator() &rArr; touchgfx::Image::Image(const touchgfx::Bitmap&) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;MainView, MainPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata)
</UL>
<P><STRONG><a name="[126]"></a>FrontendApplicationBase::gotoAboutScreenNoTransitionImpl()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase31gotoAboutScreenNoTransitionImplEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = FrontendApplicationBase::gotoAboutScreenNoTransitionImpl() &rArr; T2* touchgfx::makeTransition&lang;AboutView, AboutPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; AboutView::AboutView() &rArr; AboutViewBase::AboutViewBase() &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;AboutView, AboutPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata)
</UL>
<P><STRONG><a name="[127]"></a>FrontendApplicationBase::gotoVideoScreenNoTransitionImpl()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase31gotoVideoScreenNoTransitionImplEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = FrontendApplicationBase::gotoVideoScreenNoTransitionImpl() &rArr; T2* touchgfx::makeTransition&lang;VideoView, VideoPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; VideoView::VideoView() &rArr; VideoViewBase::VideoViewBase() &rArr; touchgfx::Image::Image(const touchgfx::Bitmap&) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;VideoView, VideoPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata)
</UL>
<P><STRONG><a name="[346]"></a>FrontendApplicationBase::gotoScreenSaverScreenNoTransition()</STRONG> (Thumb, 36 bytes, Stack size 32 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase33gotoScreenSaverScreenNoTransitionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = FrontendApplicationBase::gotoScreenSaverScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::operator =(const touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap()
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelListener::gotoScreenSaverMode()
</UL>

<P><STRONG><a name="[128]"></a>FrontendApplicationBase::gotoScreenSaverScreenNoTransitionImpl()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase37gotoScreenSaverScreenNoTransitionImplEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = FrontendApplicationBase::gotoScreenSaverScreenNoTransitionImpl() &rArr; T2* touchgfx::makeTransition&lang;ScreenSaverView, ScreenSaverPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; ScreenSaverView::ScreenSaverView() &rArr; ScreenSaverViewBase::ScreenSaverViewBase() &rArr; touchgfx::Image::Image(const touchgfx::Bitmap&) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;ScreenSaverView, ScreenSaverPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata)
</UL>
<P><STRONG><a name="[380]"></a>FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&) &rArr; touchgfx::LCD16bpp::enableTextureMapperAll() &rArr; touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888() &rArr; touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::setLanguage(unsigned short)
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::Application()
</UL>
<BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::FrontendApplication(Model&, FrontendHeap&)
</UL>

<P><STRONG><a name="[59b]"></a>FrontendApplicationBase::FrontendApplicationBase__sub_object(Model&, FrontendHeap&)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap), UNUSED)

<P><STRONG><a name="[1c2]"></a>FrontendApplicationBase::~FrontendApplicationBase()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, boardconfiguration.o(i._ZN23FrontendApplicationBaseD1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::~FrontendHeap()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boardconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
</UL>
<P><STRONG><a name="[59c]"></a>FrontendApplicationBase::~FrontendApplicationBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, boardconfiguration.o(i._ZN23FrontendApplicationBaseD1Ev), UNUSED)

<P><STRONG><a name="[37f]"></a>Model::setCurrentScreen(int)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, model.o(i._ZN5Model16setCurrentScreenEi))
<BR><BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::setCurrentScreen(int)
</UL>

<P><STRONG><a name="[37d]"></a>Model::resetScreenSaverCounter()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, model.o(i._ZN5Model23resetScreenSaverCounterEv))
<BR><BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::handleClickEvent(const touchgfx::ClickEvent&)
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::handleDragEvent(const touchgfx::DragEvent&)
</UL>

<P><STRONG><a name="[37e]"></a>Model::tick()</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, model.o(i._ZN5Model4tickEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Model::tick()
</UL>
<BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::handleTickEvent()
</UL>

<P><STRONG><a name="[345]"></a>Model::Model()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, model.o(i._ZN5ModelC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap()
</UL>

<P><STRONG><a name="[59d]"></a>Model::Model__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, model.o(i._ZN5ModelC1Ev), UNUSED)

<P><STRONG><a name="[38b]"></a>MainView::gotoWaiting()</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, mainview.o(i._ZN8MainView11gotoWaitingEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = MainView::gotoWaiting() &rArr; touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
</UL>
<BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::rightButtonClicked()
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::leftButtonClicked()
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::handleDragEvent(const touchgfx::DragEvent&)
</UL>

<P><STRONG><a name="[1c4]"></a>MainView::setupScreen()</STRONG> (Thumb, 912 bytes, Stack size 72 bytes, mainview.o(i._ZN8MainView11setupScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = MainView::setupScreen() &rArr; ScrollingMenu::setup(bool, bool, short, short, short, short, short, short, short, touchgfx::GenericCallback&lang;int, touchgfx::Container**, void&rang;&, touchgfx::GenericCallback&lang;int, int, void&rang;&) &rArr; SparseContainerList::setup(bool, bool, short, short, short, short, short, short, short, touchgfx::GenericCallback&lang;int, touchgfx::Container**, void&rang;&, touchgfx::GenericCallback&lang;int, int, void&rang;&) &rArr; touchgfx::Container::add(touchgfx::Drawable&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::remove(touchgfx::Drawable&)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::setCurrentScreen(int)
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::insert(touchgfx::Drawable*, touchgfx::Drawable&)
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::getSelectedItem() const
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::setCapPrecision(int)
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565::setColor(touchgfx::colortype, unsigned char)
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimatedImage::setUpdateTicksInterval(unsigned char)
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimatedImage::setBitmaps(unsigned short, unsigned short)
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::setPainter(touchgfx::AbstractPainter&)
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::setup(bool, bool, short, short, short, short, short, short, short, touchgfx::GenericCallback&lang;int, touchgfx::Container**, void&rang;&, touchgfx::GenericCallback&lang;int, int, void&rang;&)
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::setAnimationEndedCallback(touchgfx::GenericCallback&lang;int, void, void&rang;&)
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::setSelectedItem(int)
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void touchgfx::Circle::setArc&lang;int&rang;(T1, T1)
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::add(touchgfx::Drawable&)
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::updateProgramTexts()
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainview.o(.constdata__ZTV8MainView)
</UL>
<P><STRONG><a name="[394]"></a>MainView::gotoStarting()</STRONG> (Thumb, 812 bytes, Stack size 56 bytes, mainview.o(i._ZN8MainView12gotoStartingEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = MainView::gotoStarting() &rArr; touchgfx::AnimatedImage::startAnimation(const bool&, const bool&, const bool&) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::getSelectedItem() const
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimatedImage::startAnimation(const bool&, const bool&, const bool&)
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MoveAnimator&lang;touchgfx::Button&rang;::startMoveAnimation(short, short, unsigned short, short(*)(unsigned short, short, short, unsigned short), short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MoveAnimator&lang;touchgfx::Image&rang;::startMoveAnimation(short, short, unsigned short, short(*)(unsigned short, short, short, unsigned short), short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SparseContainerItems&lang;ImageContainer, (int)5&rang;::getElement(int, touchgfx::Container**)
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::getBitmap() const
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::fadeOutProgramTextsNow()
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::buttonStartClicked()
</UL>

<P><STRONG><a name="[1c5]"></a>MainView::tearDownScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mainview.o(i._ZN8MainView14tearDownScreenEv))
<BR>[Address Reference Count : 1]<UL><LI> mainview.o(.constdata__ZTV8MainView)
</UL>
<P><STRONG><a name="[1ca]"></a>MainView::buttonUpClicked()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mainview.o(i._ZN8MainView15buttonUpClickedEv))
<BR>[Address Reference Count : 1]<UL><LI> mainview.o(.constdata__ZTV8MainView)
</UL>
<P><STRONG><a name="[39a]"></a>MainView::gotoWashingDone()</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, mainview.o(i._ZN8MainView15gotoWashingDoneEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = MainView::gotoWashingDone() &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::registerTimerWidget(touchgfx::Drawable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::handleTickEvent()
</UL>

<P><STRONG><a name="[1c6]"></a>MainView::handleDragEvent(const touchgfx::DragEvent&)</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, mainview.o(i._ZN8MainView15handleDragEventERKN8touchgfx9DragEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = MainView::handleDragEvent(const touchgfx::DragEvent&) &rArr; touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&) &rArr; touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::gotoWaiting()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainview.o(.constdata__ZTV8MainView)
</UL>
<P><STRONG><a name="[1c7]"></a>MainView::handleTickEvent()</STRONG> (Thumb, 380 bytes, Stack size 40 bytes, mainview.o(i._ZN8MainView15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = MainView::handleTickEvent() &rArr; MainView::updateProgramTexts() &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoMainScreenNoTransition()
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::invalidate() const
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::getSelectedItem() const
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimatedImage::startAnimation(const bool&, const bool&, const bool&)
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void touchgfx::Circle::setArc&lang;int&rang;(T1, T1)
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::fadeOutProgramTextsNow()
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::gotoWashingSpinning()
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::updateProgramTexts()
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::gotoWashingWashing()
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::gotoWashingRinsing()
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::gotoWaitingStart()
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::gotoWashingDone()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainview.o(.constdata__ZTV8MainView)
</UL>
<P><STRONG><a name="[1cd]"></a>MainView::buttonRunClicked()</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, mainview.o(i._ZN8MainView16buttonRunClickedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = MainView::buttonRunClicked() &rArr; touchgfx::AnimatedImage::startAnimation(const bool&, const bool&, const bool&) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimatedImage::startAnimation(const bool&, const bool&, const bool&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainview.o(.constdata__ZTV8MainView)
</UL>
<P><STRONG><a name="[39b]"></a>MainView::gotoWaitingStart()</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, mainview.o(i._ZN8MainView16gotoWaitingStartEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = MainView::gotoWaitingStart() &rArr; touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::handleTickEvent()
</UL>

<P><STRONG><a name="[122]"></a>MainView::textDashFadeDone(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, mainview.o(i._ZN8MainView16textDashFadeDoneERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = MainView::textDashFadeDone(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&) &rArr; MainView::updateProgramTexts() &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::updateProgramTexts()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainview.o(.constdata)
</UL>
<P><STRONG><a name="[1c9]"></a>MainView::leftButtonClicked()</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, mainview.o(i._ZN8MainView17leftButtonClickedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = MainView::leftButtonClicked() &rArr; ScrollingMenu::setSelectedItem(int) &rArr; ScrollingMenu::animateTo(int) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::getSelectedItem() const
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::setSelectedItem(int)
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::fadeOutProgramTexts()
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::gotoWaiting()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainview.o(.constdata__ZTV8MainView)
</UL>
<P><STRONG><a name="[1cc]"></a>MainView::buttonPauseClicked()</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, mainview.o(i._ZN8MainView18buttonPauseClickedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = MainView::buttonPauseClicked() &rArr; touchgfx::AnimatedImage::stopAnimation() &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimatedImage::stopAnimation()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainview.o(.constdata__ZTV8MainView)
</UL>
<P><STRONG><a name="[1cb]"></a>MainView::buttonStartClicked()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, mainview.o(i._ZN8MainView18buttonStartClickedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = MainView::buttonStartClicked() &rArr; MainView::gotoStarting() &rArr; touchgfx::AnimatedImage::startAnimation(const bool&, const bool&, const bool&) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::gotoStarting()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainview.o(.constdata__ZTV8MainView)
</UL>
<P><STRONG><a name="[3a0]"></a>MainView::gotoWashingPrewash()</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, mainview.o(i._ZN8MainView18gotoWashingPrewashEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = MainView::gotoWashingPrewash() &rArr; touchgfx::AnimatedImage::startAnimation(const bool&, const bool&, const bool&) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::invalidate() const
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimatedImage::startAnimation(const bool&, const bool&, const bool&)
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::AnimatedImage&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::centerAnimatedImageDone(const touchgfx::AnimatedImage&)
</UL>

<P><STRONG><a name="[39d]"></a>MainView::gotoWashingRinsing()</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, mainview.o(i._ZN8MainView18gotoWashingRinsingEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = MainView::gotoWashingRinsing() &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::handleTickEvent()
</UL>

<P><STRONG><a name="[39e]"></a>MainView::gotoWashingWashing()</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, mainview.o(i._ZN8MainView18gotoWashingWashingEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = MainView::gotoWashingWashing() &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::handleTickEvent()
</UL>

<P><STRONG><a name="[1c8]"></a>MainView::rightButtonClicked()</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, mainview.o(i._ZN8MainView18rightButtonClickedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = MainView::rightButtonClicked() &rArr; ScrollingMenu::setSelectedItem(int) &rArr; ScrollingMenu::animateTo(int) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::getSelectedItem() const
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::setSelectedItem(int)
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::fadeOutProgramTexts()
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::gotoWaiting()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainview.o(.constdata__ZTV8MainView)
</UL>
<P><STRONG><a name="[393]"></a>MainView::updateProgramTexts()</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, mainview.o(i._ZN8MainView18updateProgramTextsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = MainView::updateProgramTexts() &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getProgramTime(WasherProgram)
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getProgramName(WasherProgram)
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithOneWildcard&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::textDashFadeDone(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::handleTickEvent()
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::setupScreen()
</UL>

<P><STRONG><a name="[39f]"></a>MainView::fadeOutProgramTexts()</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, mainview.o(i._ZN8MainView19fadeOutProgramTextsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = MainView::fadeOutProgramTexts() &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithOneWildcard&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
</UL>
<BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::rightButtonClicked()
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::leftButtonClicked()
</UL>

<P><STRONG><a name="[3a7]"></a>MainView::getBitmapForProgram(int, bool)</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, mainview.o(i._ZN8MainView19getBitmapForProgramEib))
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::initializeCenterMenuItem(int, int)
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::initializeBackMenuItem(int, int)
</UL>

<P><STRONG><a name="[39c]"></a>MainView::gotoWashingSpinning()</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, mainview.o(i._ZN8MainView19gotoWashingSpinningEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = MainView::gotoWashingSpinning() &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::handleTickEvent()
</UL>

<P><STRONG><a name="[395]"></a>MainView::fadeOutProgramTextsNow()</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, mainview.o(i._ZN8MainView22fadeOutProgramTextsNowEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = MainView::fadeOutProgramTextsNow() &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithOneWildcard&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::handleTickEvent()
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::gotoStarting()
</UL>

<P><STRONG><a name="[11f]"></a>MainView::initializeBackMenuItem(int, int)</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, mainview.o(i._ZN8MainView22initializeBackMenuItemEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = MainView::initializeBackMenuItem(int, int) &rArr; ImageContainer::setBitmap(touchgfx::Bitmap) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::getBitmapForProgram(int, bool)
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageContainer::setBitmap(touchgfx::Bitmap)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainview.o(.constdata)
</UL>
<P><STRONG><a name="[120]"></a>MainView::centerAnimatedImageDone(const touchgfx::AnimatedImage&)</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, mainview.o(i._ZN8MainView23centerAnimatedImageDoneERKN8touchgfx13AnimatedImageE))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = MainView::centerAnimatedImageDone(const touchgfx::AnimatedImage&) &rArr; MainView::gotoWashingPrewash() &rArr; touchgfx::AnimatedImage::startAnimation(const bool&, const bool&, const bool&) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimatedImage::stopAnimation()
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::AnimatedImage&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::gotoWashingPrewash()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainview.o(.constdata)
</UL>
<P><STRONG><a name="[121]"></a>MainView::centerMenuAnimationEnded(int)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mainview.o(i._ZN8MainView24centerMenuAnimationEndedEi))
<BR>[Address Reference Count : 1]<UL><LI> mainview.o(.constdata)
</UL>
<P><STRONG><a name="[11e]"></a>MainView::initializeCenterMenuItem(int, int)</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, mainview.o(i._ZN8MainView24initializeCenterMenuItemEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = MainView::initializeCenterMenuItem(int, int) &rArr; ImageContainer::setBitmap(touchgfx::Bitmap) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::getBitmapForProgram(int, bool)
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageContainer::setBitmap(touchgfx::Bitmap)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainview.o(.constdata)
</UL>
<P><STRONG><a name="[3a8]"></a>MainView::MainView()</STRONG> (Thumb, 398 bytes, Stack size 64 bytes, mainview.o(i._ZN8MainViewC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = MainView::MainView() &rArr; MainViewBase::MainViewBase() &rArr; touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::FadeAnimator() &rArr; touchgfx::Image::Image(const touchgfx::Bitmap&) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::Circle()
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565::PainterRGB565(touchgfx::colortype, unsigned char)
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::ScrollingMenu()
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainViewBase::MainViewBase()
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;MainView, int, int, void&rang;::Callback(MainView*, void(MainView::*)(int, int))
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MoveAnimator&lang;touchgfx::Image&rang;::MoveAnimator()
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SparseContainerItems&lang;ImageContainer, (int)5&rang;::SparseContainerItems()
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::Image(const touchgfx::Bitmap&)
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimatedImage::AnimatedImage(const unsigned char&)
</UL>
<BR>[Called By]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;MainView, MainPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[59e]"></a>MainView::MainView__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, mainview.o(i._ZN8MainViewC1Ev), UNUSED)

<P><STRONG><a name="[1c3]"></a>MainView::~MainView()</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, mainview.o(i._ZN8MainViewD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = MainView::~MainView() &rArr; SparseContainerItems&lang;ImageContainer, (int)5&rang;::~SparseContainerItems() &rArr; __aeabi_vec_dtor
</UL>
<BR>[Calls]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPainter::~AbstractPainter__sub_object()
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::~CanvasWidget__sub_object()
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SparseContainerItems&lang;ImageContainer, (int)5&rang;::~SparseContainerItems()
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::~ScrollingMenu()
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainViewBase::~MainViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainview.o(.constdata__ZTV8MainView)
</UL>
<P><STRONG><a name="[59f]"></a>MainView::~MainView__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, mainview.o(i._ZN8MainViewD1Ev), UNUSED)

<P><STRONG><a name="[370]"></a>Particle::done(int, int)</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, particleeffect.o(i._ZN8Particle4doneEii))
<BR><BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParticleEffect::handleTickEvent()
</UL>

<P><STRONG><a name="[371]"></a>Particle::init(int, int, int, bool, unsigned short)</STRONG> (Thumb, 438 bytes, Stack size 56 bytes, particleeffect.o(i._ZN8Particle4initEiiibt))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = Particle::init(int, int, int, bool, unsigned short) &rArr; __hardfp_sinf &rArr; __mathlib_rredf2
</UL>
<BR>[Calls]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosf
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParticleEffect::handleTickEvent()
</UL>

<P><STRONG><a name="[372]"></a>Particle::update()</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, particleeffect.o(i._ZN8Particle6updateEv))
<BR><BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParticleEffect::handleTickEvent()
</UL>

<P><STRONG><a name="[8f]"></a>Particle::Particle()</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, particleeffect.o(i._ZN8ParticleC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = Particle::Particle() &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> particleeffect.o(i._ZN14ParticleEffectC1Ev)
</UL>
<P><STRONG><a name="[5a0]"></a>Particle::Particle__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, particleeffect.o(i._ZN8ParticleC1Ev), UNUSED)

<P><STRONG><a name="[90]"></a>Particle::~Particle()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, particleeffect.o(i._ZN8ParticleD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> particleeffect.o(i._ZN14ParticleEffectD1Ev)
<LI> particleeffect.o(.constdata__ZTV8Particle)
</UL>
<P><STRONG><a name="[5a1]"></a>Particle::~Particle__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, particleeffect.o(i._ZN8ParticleD1Ev), UNUSED)

<P><STRONG><a name="[406]"></a>touchgfx::ClickEvent::ClickEvent(touchgfx::ClickEvent::ClickEventType, short, short, short)</STRONG> (Thumb, 18 bytes, Stack size 12 bytes, clickablecontainer.o(i._ZN8touchgfx10ClickEventC1ENS0_14ClickEventTypeEsss))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::ClickEvent::ClickEvent(touchgfx::ClickEvent::ClickEventType, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ClickableContainer::handleGestureEvent(const touchgfx::GestureEvent&)
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ClickableContainer::handleClickEvent(const touchgfx::ClickEvent&)
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ClickableContainer::handleDragEvent(const touchgfx::DragEvent&)
</UL>

<P><STRONG><a name="[5a2]"></a>touchgfx::ClickEvent::ClickEvent__sub_object(touchgfx::ClickEvent::ClickEventType, short, short, short)</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, clickablecontainer.o(i._ZN8touchgfx10ClickEventC1ENS0_14ClickEventTypeEsss), UNUSED)

<P><STRONG><a name="[3b2]"></a>touchgfx::OSWrappers::initialize()</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, oswrappers.o(i._ZN8touchgfx10OSWrappers10initializeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = touchgfx::OSWrappers::initialize() &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::initialize()
</UL>

<P><STRONG><a name="[320]"></a>touchgfx::OSWrappers::signalVSync()</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, oswrappers.o(i._ZN8touchgfx10OSWrappers11signalVSyncEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = touchgfx::OSWrappers::signalVSync() &rArr; xQueueGenericSendFromISR &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_IRQHandler
</UL>

<P><STRONG><a name="[3b6]"></a>touchgfx::OSWrappers::waitForVSync()</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, oswrappers.o(i._ZN8touchgfx10OSWrappers12waitForVSyncEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = touchgfx::OSWrappers::waitForVSync() &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::taskEntry()
</UL>

<P><STRONG><a name="[3b8]"></a>touchgfx::OSWrappers::giveFrameBufferSemaphore()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, oswrappers.o(i._ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = touchgfx::OSWrappers::giveFrameBufferSemaphore() &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::waitForFrameBufferSemaphore()
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::unlockFrameBuffer()
</UL>

<P><STRONG><a name="[3b9]"></a>touchgfx::OSWrappers::takeFrameBufferSemaphore()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, oswrappers.o(i._ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = touchgfx::OSWrappers::takeFrameBufferSemaphore() &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::waitForFrameBufferSemaphore()
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lockFrameBuffer()
</UL>

<P><STRONG><a name="[3ba]"></a>touchgfx::OSWrappers::tryTakeFrameBufferSemaphore()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, oswrappers.o(i._ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = touchgfx::OSWrappers::tryTakeFrameBufferSemaphore() &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::addToQueue(const touchgfx::BlitOp&)
</UL>

<P><STRONG><a name="[3bb]"></a>touchgfx::OSWrappers::giveFrameBufferSemaphoreFromISR()</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, oswrappers.o(i._ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::OSWrappers::giveFrameBufferSemaphoreFromISR() &rArr; xQueueGiveFromISR &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::executeCompleted()
</UL>

<P><STRONG><a name="[3bd]"></a>touchgfx::Rasterizer::lineTo(int, int)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, canvas.o(i._ZN8touchgfx10Rasterizer6lineToEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = touchgfx::Rasterizer::lineTo(int, int) &rArr; touchgfx::Outline::lineTo(int, int) &rArr; touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Cell::set(int, int, int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::lineTo(int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::lineTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::close()
</UL>

<P><STRONG><a name="[3bf]"></a>touchgfx::Rasterizer::moveTo(int, int)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, canvas.o(i._ZN8touchgfx10Rasterizer6moveToEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = touchgfx::Rasterizer::moveTo(int, int) &rArr; touchgfx::Outline::moveTo(int, int) &rArr; touchgfx::Outline::lineTo(int, int) &rArr; touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Cell::set(int, int, int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::moveTo(int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::moveTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::lineTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
</UL>

<P><STRONG><a name="[204]"></a>touchgfx::Transition::setScreenContainer(touchgfx::Container&)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[203]"></a>touchgfx::Transition::init()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx10Transition4initEv))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[202]"></a>touchgfx::Transition::tearDown()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx10Transition8tearDownEv))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[347]"></a>touchgfx::Application::getInstance()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application11getInstanceEv))
<BR><BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::tick()
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL& touchgfx::touchgfx_generic_init&lang;STM32F7HAL&rang;(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, short, short, unsigned short*, unsigned, unsigned)
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelListener::gotoScreenSaverMode()
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelListener::gotoMainScreenMode()
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::moveRelative(short, short)
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::animateTo(int)
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::handleTickEvent()
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScreenSaverViewBase::handleTickEvent()
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScreenSaverView::setupScreen()
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AboutViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParticleEffect::~ParticleEffect()
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParticleEffect::ParticleEffect()
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimatedImage::handleTickEvent()
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimatedImage::startAnimation(const bool&, const bool&, const bool&)
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimatedImage::stopAnimation()
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MoveAnimator&lang;touchgfx::Button&rang;::nextMoveAnimationStep()
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MoveAnimator&lang;touchgfx::Button&rang;::startMoveAnimation(short, short, unsigned short, short(*)(unsigned short, short, short, unsigned short), short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MoveAnimator&lang;touchgfx::Image&rang;::nextMoveAnimationStep()
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MoveAnimator&lang;touchgfx::Image&rang;::startMoveAnimation(short, short, unsigned short, short(*)(unsigned short, short, short, unsigned short), short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::nextFadeAnimationStep()
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Circle&rang;::nextFadeAnimationStep()
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::nextFadeAnimationStep()
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::nextFadeAnimationStep()
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithOneWildcard&rang;::nextFadeAnimationStep()
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithOneWildcard&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::AnimatedImage&rang;::nextFadeAnimationStep()
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::AnimatedImage&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::handleTickEvent()
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::gotoWashingDone()
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::setupScreen()
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VideoViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScreenSaverViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)
</UL>

<P><STRONG><a name="[1b1]"></a>touchgfx::Application::handleKeyEvent(unsigned char)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application14handleKeyEventEh))
<BR>[Address Reference Count : 4]<UL><LI> boardconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[3c1]"></a>touchgfx::Application::invalidateArea(touchgfx::Rect)</STRONG> (Thumb, 242 bytes, Stack size 56 bytes, application.o(i._ZN8touchgfx11Application14invalidateAreaENS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = touchgfx::Application::invalidateArea(touchgfx::Rect) &rArr; touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::add(touchgfx::Rect) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::add(touchgfx::Rect)
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::quickRemoveAt(unsigned short)
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::includes(const touchgfx::Rect&) const
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::expandToFit(const touchgfx::Rect&)
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::intersect(const touchgfx::Rect&) const
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::isEmpty() const
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::draw(touchgfx::Rect&)
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::cacheDrawOperations(bool)
</UL>

<P><STRONG><a name="[1c0]"></a>touchgfx::Application::handleDragEvent(const touchgfx::DragEvent&)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE))
<BR><BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::handleDragEvent(const touchgfx::DragEvent&)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> boardconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[1c1]"></a>touchgfx::Application::handleTickEvent()</STRONG> (Thumb, 244 bytes, Stack size 24 bytes, application.o(i._ZN8touchgfx11Application15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Application::handleTickEvent()
</UL>
<BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::handleTickEvent()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> boardconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[1bf]"></a>touchgfx::Application::handleClickEvent(const touchgfx::ClickEvent&)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE))
<BR><BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::handleClickEvent(const touchgfx::ClickEvent&)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> boardconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[1b0]"></a>touchgfx::Application::handleGestureEvent(const touchgfx::GestureEvent&)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE))
<BR>[Address Reference Count : 4]<UL><LI> boardconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[1b6]"></a>touchgfx::Application::cacheDrawOperations(bool)</STRONG> (Thumb, 770 bytes, Stack size 136 bytes, application.o(i._ZN8touchgfx11Application19cacheDrawOperationsEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = touchgfx::Application::cacheDrawOperations(bool) &rArr; touchgfx::Application::invalidateArea(touchgfx::Rect) &rArr; touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::add(touchgfx::Rect) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::bottom() const
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect()
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformFrameBufferToDisplay(touchgfx::Rect&)
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::Vector()
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::add(touchgfx::Rect)
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::isEmpty() const
</UL>
<BR>[Address Reference Count : 4]<UL><LI> boardconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[366]"></a>touchgfx::Application::registerTimerWidget(touchgfx::Drawable*)</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, application.o(i._ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::animateTo(int)
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParticleEffect::ParticleEffect()
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimatedImage::startAnimation(const bool&, const bool&, const bool&)
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MoveAnimator&lang;touchgfx::Button&rang;::startMoveAnimation(short, short, unsigned short, short(*)(unsigned short, short, short, unsigned short), short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MoveAnimator&lang;touchgfx::Image&rang;::startMoveAnimation(short, short, unsigned short, short(*)(unsigned short, short, short, unsigned short), short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithOneWildcard&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::AnimatedImage&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::gotoWashingDone()
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScreenSaverViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)
</UL>

<P><STRONG><a name="[3d0]"></a>touchgfx::Application::clearAllTimerWidgets()</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application20clearAllTimerWidgetsEv))
<BR><BR>[Called By]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::Application()
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
</UL>

<P><STRONG><a name="[35d]"></a>touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*)</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, application.o(i._ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::handleTickEvent()
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParticleEffect::~ParticleEffect()
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimatedImage::handleTickEvent()
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimatedImage::stopAnimation()
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MoveAnimator&lang;touchgfx::Button&rang;::nextMoveAnimationStep()
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MoveAnimator&lang;touchgfx::Image&rang;::nextMoveAnimationStep()
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::nextFadeAnimationStep()
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Circle&rang;::nextFadeAnimationStep()
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::nextFadeAnimationStep()
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::nextFadeAnimationStep()
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithOneWildcard&rang;::nextFadeAnimationStep()
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::AnimatedImage&rang;::nextFadeAnimationStep()
</UL>

<P><STRONG><a name="[1d9]"></a>touchgfx::Application::handlePendingScreenTransition()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application29handlePendingScreenTransitionEv))
<BR>[Address Reference Count : 1]<UL><LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[1b5]"></a>touchgfx::Application::draw(touchgfx::Rect&)</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, application.o(i._ZN8touchgfx11Application4drawERNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = touchgfx::Application::draw(touchgfx::Rect&) &rArr; touchgfx::Application::invalidateArea(touchgfx::Rect) &rArr; touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::add(touchgfx::Rect) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
</UL>
<BR>[Address Reference Count : 4]<UL><LI> boardconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[1b4]"></a>touchgfx::Application::draw()</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, application.o(i._ZN8touchgfx11Application4drawEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Application::draw() &rArr; touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Address Reference Count : 4]<UL><LI> boardconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[388]"></a>touchgfx::Application::Application()</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, application.o(i._ZN8touchgfx11ApplicationC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::Application::Application() &rArr; touchgfx::Screen::draw() &rArr; touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::clearAllTimerWidgets()
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw()
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC_Lock
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::Vector()
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)
</UL>

<P><STRONG><a name="[5a3]"></a>touchgfx::Application::Application__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, application.o(i._ZN8touchgfx11ApplicationC1Ev), UNUSED)

<P><STRONG><a name="[53d]"></a>touchgfx::FontManager::setFontProvider(touchgfx::FontProvider*)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fontmanager.o(i._ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE))
<BR><BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL& touchgfx::touchgfx_generic_init&lang;STM32F7HAL&rang;(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, short, short, unsigned short*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[48a]"></a>touchgfx::MJPEGWidget::setLineBuffer(unsigned char*)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, mjpegwidget.o(i._ZN8touchgfx11MJPEGWidget13setLineBufferEPh))
<BR><BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VideoView::setupScreen()
</UL>

<P><STRONG><a name="[3d1]"></a>touchgfx::MJPEGWidget::decodeMJPEGFrame(const unsigned char*, unsigned)</STRONG> (Thumb, 298 bytes, Stack size 688 bytes, mjpegwidget.o(i._ZN8touchgfx11MJPEGWidget16decodeMJPEGFrameEPKhj))
<BR><BR>[Stack]<UL><LI>Max Depth = 800<LI>Call Chain = touchgfx::MJPEGWidget::decodeMJPEGFrame(const unsigned char*, unsigned) &rArr; jpeg_start_decompress &rArr; jinit_master_decompress &rArr; master_selection &rArr; jinit_1pass_quantizer &rArr; create_colormap &rArr; select_ncolors
</UL>
<BR>[Calls]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_std_error
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_start_decompress
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_read_scanlines
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_read_header
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_mem_src
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_finish_decompress
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_destroy_decompress
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_CreateDecompress
</UL>
<BR>[Called By]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MJPEGWidget::gotoFrame(unsigned)
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MJPEGWidget::tick()
</UL>

<P><STRONG><a name="[3da]"></a>touchgfx::MJPEGWidget::tick()</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, mjpegwidget.o(i._ZN8touchgfx11MJPEGWidget4tickEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 832<LI>Call Chain = touchgfx::MJPEGWidget::tick() &rArr; touchgfx::MJPEGWidget::decodeMJPEGFrame(const unsigned char*, unsigned) &rArr; jpeg_start_decompress &rArr; jinit_master_decompress &rArr; master_selection &rArr; jinit_1pass_quantizer &rArr; create_colormap &rArr; select_ncolors
</UL>
<BR>[Calls]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MJPEGWidget::decodeMJPEGFrame(const unsigned char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VideoView::handleTickEvent()
</UL>

<P><STRONG><a name="[3dd]"></a>touchgfx::MJPEGWidget::getU32(const unsigned char*)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, mjpegwidget.o(i._ZN8touchgfx11MJPEGWidget6getU32EPKh))
<BR><BR>[Called By]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MJPEGWidget::setMovie(const unsigned char*, unsigned)
</UL>

<P><STRONG><a name="[3db]"></a>touchgfx::MJPEGWidget::setMovie(const unsigned char*, unsigned)</STRONG> (Thumb, 228 bytes, Stack size 24 bytes, mjpegwidget.o(i._ZN8touchgfx11MJPEGWidget8setMovieEPKhj))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::MJPEGWidget::setMovie(const unsigned char*, unsigned) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MJPEGWidget::getU32(const unsigned char*)
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VideoView::setupScreen()
</UL>

<P><STRONG><a name="[3de]"></a>touchgfx::MJPEGWidget::gotoFrame(unsigned)</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, mjpegwidget.o(i._ZN8touchgfx11MJPEGWidget9gotoFrameEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 832<LI>Call Chain = touchgfx::MJPEGWidget::gotoFrame(unsigned) &rArr; touchgfx::MJPEGWidget::decodeMJPEGFrame(const unsigned char*, unsigned) &rArr; jpeg_start_decompress &rArr; jinit_master_decompress &rArr; master_selection &rArr; jinit_1pass_quantizer &rArr; create_colormap &rArr; select_ncolors
</UL>
<BR>[Calls]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MJPEGWidget::decodeMJPEGFrame(const unsigned char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VideoView::setupScreen()
</UL>

<P><STRONG><a name="[3df]"></a>touchgfx::MJPEGWidget::MJPEGWidget()</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, mjpegwidget.o(i._ZN8touchgfx11MJPEGWidgetC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::MJPEGWidget::MJPEGWidget() &rArr; touchgfx::PixelDataWidget::PixelDataWidget() &rArr; touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PixelDataWidget::PixelDataWidget()
</UL>
<BR>[Called By]<UL><LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VideoView::VideoView()
</UL>

<P><STRONG><a name="[5a4]"></a>touchgfx::MJPEGWidget::MJPEGWidget__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, mjpegwidget.o(i._ZN8touchgfx11MJPEGWidgetC1Ev), UNUSED)

<P><STRONG><a name="[1e0]"></a>touchgfx::CanvasWidget::setPainter(touchgfx::AbstractPainter&)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, canvaswidget.o(i._ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE))
<BR><BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::setupScreen()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6CircleEEE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> circle.o(.constdata__ZTVN8touchgfx6CircleE)
</UL>
<P><STRONG><a name="[3e1]"></a>touchgfx::CanvasWidget::CanvasWidget__sub_object()</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, canvaswidget.o(i._ZN8touchgfx12CanvasWidgetC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::CanvasWidget::CanvasWidget__sub_object() &rArr; touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::Circle()
</UL>

<P><STRONG><a name="[5a5]"></a>touchgfx::CanvasWidget::~CanvasWidget()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, canvaswidget.o(i._ZN8touchgfx12CanvasWidgetD2Ev), UNUSED)

<P><STRONG><a name="[1dc]"></a>touchgfx::CanvasWidget::~CanvasWidget__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, canvaswidget.o(i._ZN8touchgfx12CanvasWidgetD2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::~MainView()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
</UL>
<P><STRONG><a name="[45f]"></a>touchgfx::GestureEvent::GestureEvent(touchgfx::GestureEvent::GestureType, short, short, short)</STRONG> (Thumb, 18 bytes, Stack size 12 bytes, gestures.o(i._ZN8touchgfx12GestureEventC1ENS0_11GestureTypeEsss))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::GestureEvent::GestureEvent(touchgfx::GestureEvent::GestureType, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short)
</UL>

<P><STRONG><a name="[5a6]"></a>touchgfx::GestureEvent::GestureEvent__sub_object(touchgfx::GestureEvent::GestureType, short, short, short)</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, gestures.o(i._ZN8touchgfx12GestureEventC1ENS0_11GestureTypeEsss), UNUSED)

<P><STRONG><a name="[201]"></a>touchgfx::NoTransition::handleTickEvent()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx12NoTransition15handleTickEventEv))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[535]"></a>touchgfx::NoTransition::NoTransition()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx12NoTransitionC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;VideoView, VideoPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;AboutView, AboutPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;MainView, MainPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;ScreenSaverView, ScreenSaverPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[5a7]"></a>touchgfx::NoTransition::NoTransition__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx12NoTransitionC1Ev), UNUSED)

<P><STRONG><a name="[200]"></a>touchgfx::NoTransition::~NoTransition()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx12NoTransitionD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[5a8]"></a>touchgfx::NoTransition::~NoTransition__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx12NoTransitionD1Ev), UNUSED)

<P><STRONG><a name="[3e2]"></a>touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list, const unsigned short*)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, textprovider.o(i._ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list, const unsigned short*) &rArr; touchgfx::TextProvider::initializeInternal() &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initializeInternal()
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidthLTR(unsigned char, const unsigned short*, std::__va_list) const
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const
</UL>

<P><STRONG><a name="[3e4]"></a>touchgfx::TextProvider::getNextChar()</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, textprovider.o(i._ZN8touchgfx12TextProvider11getNextCharEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::getNextChar() &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::pushFront(unsigned short)
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::fillInputBuffer()
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
</UL>

<P><STRONG><a name="[3e7]"></a>touchgfx::TextProvider::gsubRuleMatch(const unsigned short*, unsigned short, unsigned short, unsigned short)</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, textprovider.o(i._ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::gsubRuleMatch(const unsigned short*, unsigned short, unsigned short, unsigned short) &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar(unsigned short)
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short)
</UL>

<P><STRONG><a name="[3e9]"></a>touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short)</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, textprovider.o(i._ZN8touchgfx12TextProvider14applyGsubRulesEPKtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*)
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::gsubRuleMatch(const unsigned short*, unsigned short, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::substituteGlyphs()
</UL>

<P><STRONG><a name="[3eb]"></a>touchgfx::TextProvider::adjustThaiGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*)</STRONG> (Thumb, 374 bytes, Stack size 40 bytes, textprovider.o(i._ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::adjustThaiGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*) &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::advance() const
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::top() const
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar(unsigned short)
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::thaiLookupGlyph(const touchgfx::GlyphNode*, const touchgfx::Font*, unsigned short) const
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::setTop(short)
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&)
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&)
</UL>

<P><STRONG><a name="[3e5]"></a>touchgfx::TextProvider::fillInputBuffer()</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, textprovider.o(i._ZN8touchgfx12TextProvider15fillInputBufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::isFull() const
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short)
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextCharInternal()
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextChar()
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*)
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initializeInternal()
</UL>

<P><STRONG><a name="[3f4]"></a>touchgfx::TextProvider::getNextLigature(unsigned char)</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, textprovider.o(i._ZN8touchgfx12TextProvider15getNextLigatureEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextChar()
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::replaceAt(unsigned short, unsigned short)
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar(unsigned short)
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::substituteGlyphs()
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&)
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&)
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool)
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, const touchgfx::Font*, short)
</UL>

<P><STRONG><a name="[3f7]"></a>touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&)</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, textprovider.o(i._ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::advance() const
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustHindiGlyph(const touchgfx::GlyphNode*)
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustThaiGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidthLTR(unsigned char, const unsigned short*, std::__va_list) const
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool)
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::stringWidth(touchgfx::TextProvider&, const touchgfx::Font&, int, unsigned char)
</UL>

<P><STRONG><a name="[3f9]"></a>touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&)</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, textprovider.o(i._ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::advance() const
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustHindiGlyph(const touchgfx::GlyphNode*)
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustThaiGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*)
</UL>
<BR>[Called By]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool)
</UL>

<P><STRONG><a name="[3f8]"></a>touchgfx::TextProvider::adjustHindiGlyph(const touchgfx::GlyphNode*)</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, textprovider.o(i._ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::TextProvider::adjustHindiGlyph(const touchgfx::GlyphNode*)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&)
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&)
</UL>

<P><STRONG><a name="[3f6]"></a>touchgfx::TextProvider::substituteGlyphs()</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, textprovider.o(i._ZN8touchgfx12TextProvider16substituteGlyphsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar(unsigned short)
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::gsubTableBinarySearch(unsigned short, const unsigned short*, unsigned short) const
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
</UL>

<P><STRONG><a name="[3e3]"></a>touchgfx::TextProvider::initializeInternal()</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, textprovider.o(i._ZN8touchgfx12TextProvider18initializeInternalEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::initializeInternal() &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Called By]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list, const unsigned short*)
</UL>

<P><STRONG><a name="[3f3]"></a>touchgfx::TextProvider::getNextCharInternal()</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, textprovider.o(i._ZN8touchgfx12TextProvider19getNextCharInternalEv))
<BR><BR>[Calls]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextCharInternal()
</UL>
<BR>[Called By]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextCharInternal()
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::fillInputBuffer()
</UL>

<P><STRONG><a name="[3ea]"></a>touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*)</STRONG> (Thumb, 154 bytes, Stack size 40 bytes, textprovider.o(i._ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::pushFront(unsigned short)
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::replaceAt(unsigned short, unsigned short)
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::dropFront(unsigned short)
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::fillInputBuffer()
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short)
</UL>

<P><STRONG><a name="[3fc]"></a>touchgfx::TextProvider::TextProvider()</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, textprovider.o(i._ZN8touchgfx12TextProviderC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::TextProvider() &rArr; touchgfx::TextProvider::initializeInternal() &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initializeInternal()
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidthLTR(unsigned char, const unsigned short*, std::__va_list) const
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const
</UL>

<P><STRONG><a name="[5a9]"></a>touchgfx::TextProvider::TextProvider__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, textprovider.o(i._ZN8touchgfx12TextProviderC1Ev), UNUSED)

<P><STRONG><a name="[38e]"></a>touchgfx::AnimatedImage::setBitmaps(unsigned short, unsigned short)</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, animatedimage.o(i._ZN8touchgfx13AnimatedImage10setBitmapsEtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::AnimatedImage::setBitmaps(unsigned short, unsigned short) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::setupScreen()
</UL>

<P><STRONG><a name="[1e9]"></a>touchgfx::AnimatedImage::stopAnimation()</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, animatedimage.o(i._ZN8touchgfx13AnimatedImage13stopAnimationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::AnimatedImage::stopAnimation() &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::centerAnimatedImageDone(const touchgfx::AnimatedImage&)
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::buttonPauseClicked()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_13AnimatedImageEEE)
<LI> animatedimage.o(.constdata__ZTVN8touchgfx13AnimatedImageE)
</UL>
<P><STRONG><a name="[1e8]"></a>touchgfx::AnimatedImage::startAnimation(const bool&, const bool&, const bool&)</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, animatedimage.o(i._ZN8touchgfx13AnimatedImage14startAnimationERKbS2_S2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = touchgfx::AnimatedImage::startAnimation(const bool&, const bool&, const bool&) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::registerTimerWidget(touchgfx::Drawable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::gotoWashingPrewash()
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::buttonRunClicked()
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::handleTickEvent()
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::gotoStarting()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_13AnimatedImageEEE)
<LI> animatedimage.o(.constdata__ZTVN8touchgfx13AnimatedImageE)
</UL>
<P><STRONG><a name="[205]"></a>touchgfx::AnimatedImage::handleTickEvent()</STRONG> (Thumb, 210 bytes, Stack size 16 bytes, animatedimage.o(i._ZN8touchgfx13AnimatedImage15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::AnimatedImage::handleTickEvent() &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*)
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::AnimatedImage&rang;::handleTickEvent()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> animatedimage.o(.constdata__ZTVN8touchgfx13AnimatedImageE)
</UL>
<P><STRONG><a name="[38f]"></a>touchgfx::AnimatedImage::setUpdateTicksInterval(unsigned char)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, animatedimage.o(i._ZN8touchgfx13AnimatedImage22setUpdateTicksIntervalEh))
<BR><BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::setupScreen()
</UL>

<P><STRONG><a name="[1e7]"></a>touchgfx::AnimatedImage::setBitmap(const touchgfx::Bitmap&)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mainview.o(i._ZN8touchgfx13AnimatedImage9setBitmapERKNS_6BitmapE))
<BR>[Address Reference Count : 2]<UL><LI> mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_13AnimatedImageEEE)
<LI> animatedimage.o(.constdata__ZTVN8touchgfx13AnimatedImageE)
</UL>
<P><STRONG><a name="[3ac]"></a>touchgfx::AnimatedImage::AnimatedImage(const unsigned char&)</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, mainview.o(i._ZN8touchgfx13AnimatedImageC1ERKh))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = touchgfx::AnimatedImage::AnimatedImage(const unsigned char&) &rArr; touchgfx::Image::Image(const touchgfx::Bitmap&) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::Image(const touchgfx::Bitmap&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::MainView()
</UL>

<P><STRONG><a name="[5aa]"></a>touchgfx::AnimatedImage::AnimatedImage__sub_object(const unsigned char&)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, mainview.o(i._ZN8touchgfx13AnimatedImageC1ERKh), UNUSED)

<P><STRONG><a name="[12d]"></a>touchgfx::DMA_Interface::addToQueue(const touchgfx::BlitOp&)</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dma.o(i._ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = touchgfx::DMA_Interface::addToQueue(const touchgfx::BlitOp&) &rArr; touchgfx::OSWrappers::tryTakeFrameBufferSemaphore() &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::tryTakeFrameBufferSemaphore()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
</UL>
<P><STRONG><a name="[132]"></a>touchgfx::DMA_Interface::getDMAType()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f7dma.o(i._ZN8touchgfx13DMA_Interface10getDMATypeEv))
<BR>[Address Reference Count : 1]<UL><LI> stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
</UL>
<P><STRONG><a name="[138]"></a>touchgfx::DMA_Interface::enableAlpha(unsigned char)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx13DMA_Interface11enableAlphaEh))
<BR>[Address Reference Count : 1]<UL><LI> stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
</UL>
<P><STRONG><a name="[139]"></a>touchgfx::DMA_Interface::disableAlpha()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx13DMA_Interface12disableAlphaEv))
<BR>[Address Reference Count : 1]<UL><LI> stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
</UL>
<P><STRONG><a name="[135]"></a>touchgfx::DMA_Interface::seedExecution()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx13DMA_Interface13seedExecutionEv))
<BR>[Address Reference Count : 1]<UL><LI> stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
</UL>
<P><STRONG><a name="[417]"></a>touchgfx::DMA_Interface::isDmaQueueEmpty()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv))
<BR><BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lockFrameBuffer()
</UL>

<P><STRONG><a name="[134]"></a>touchgfx::DMA_Interface::executeCompleted()</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, dma.o(i._ZN8touchgfx13DMA_Interface16executeCompletedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = touchgfx::DMA_Interface::executeCompleted() &rArr; touchgfx::OSWrappers::giveFrameBufferSemaphoreFromISR() &rArr; xQueueGiveFromISR &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::giveFrameBufferSemaphoreFromISR()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
</UL>
<P><STRONG><a name="[13a]"></a>touchgfx::DMA_Interface::waitForFrameBufferSemaphore()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dma.o(i._ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = touchgfx::DMA_Interface::waitForFrameBufferSemaphore() &rArr; touchgfx::OSWrappers::takeFrameBufferSemaphore() &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::takeFrameBufferSemaphore()
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::giveFrameBufferSemaphore()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
</UL>
<P><STRONG><a name="[12e]"></a>touchgfx::DMA_Interface::flush()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f7dma.o(i._ZN8touchgfx13DMA_Interface5flushEv))
<BR>[Address Reference Count : 1]<UL><LI> stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
</UL>
<P><STRONG><a name="[130]"></a>touchgfx::DMA_Interface::start()</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, dma.o(i._ZN8touchgfx13DMA_Interface5startEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::DMA_Interface::start()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
</UL>
<P><STRONG><a name="[133]"></a>touchgfx::DMA_Interface::execute()</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, dma.o(i._ZN8touchgfx13DMA_Interface7executeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::DMA_Interface::execute() &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
</UL>
<P><STRONG><a name="[331]"></a>touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*)</STRONG> (Thumb, 62 bytes, Stack size 64 bytes, generatedfont.o(i._ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_40_4bpp()
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_20_4bpp()
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_10_4bpp()
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_SairaCondensed_Medium_22_4bpp()
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_SairaCondensed_Medium_16_4bpp()
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_SairaCondensed_Medium_14_4bpp()
</UL>

<P><STRONG><a name="[5ab]"></a>touchgfx::GeneratedFont::GeneratedFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*)</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, generatedfont.o(i._ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt), UNUSED)

<P><STRONG><a name="[8c]"></a>touchgfx::GeneratedFont::~GeneratedFont()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, generatedfont.o(i._ZN8touchgfx13GeneratedFontD1Ev))
<BR>[Address Reference Count : 7]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> table_sairacondensed_medium_16_4bpp.o(i._Z37getFont_SairaCondensed_Medium_16_4bppv)
<LI> table_sairacondensed_medium_22_4bpp.o(i._Z37getFont_SairaCondensed_Medium_22_4bppv)
<LI> table_sairacondensed_medium_14_4bpp.o(i._Z37getFont_SairaCondensed_Medium_14_4bppv)
<LI> table_verdana_10_4bpp.o(i._Z23getFont_verdana_10_4bppv)
<LI> table_verdana_20_4bpp.o(i._Z23getFont_verdana_20_4bppv)
<LI> table_verdana_40_4bpp.o(i._Z23getFont_verdana_40_4bppv)
</UL>
<P><STRONG><a name="[5ac]"></a>touchgfx::GeneratedFont::~GeneratedFont__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, generatedfont.o(i._ZN8touchgfx13GeneratedFontD1Ev), UNUSED)

<P><STRONG><a name="[214]"></a>touchgfx::PainterRGB565::renderNext(unsigned char&, unsigned char&, unsigned char&, unsigned char&)</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, painterrgb565.o(i._ZN8touchgfx13PainterRGB56510renderNextERhS1_S1_S1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::PainterRGB565::renderNext(unsigned char&, unsigned char&, unsigned char&, unsigned char&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> painterrgb565.o(.constdata__ZTVN8touchgfx13PainterRGB565E)
</UL>
<P><STRONG><a name="[212]"></a>touchgfx::PainterRGB565::render(unsigned char*, int, int, int, unsigned, const unsigned char*)</STRONG> (Thumb, 274 bytes, Stack size 36 bytes, painterrgb565.o(i._ZN8touchgfx13PainterRGB5656renderEPhiiijPKh))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = touchgfx::PainterRGB565::render(unsigned char*, int, int, int, unsigned, const unsigned char*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> painterrgb565.o(.constdata__ZTVN8touchgfx13PainterRGB565E)
</UL>
<P><STRONG><a name="[390]"></a>touchgfx::PainterRGB565::setColor(touchgfx::colortype, unsigned char)</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, painterrgb565.o(i._ZN8touchgfx13PainterRGB5658setColorENS_9colortypeEh))
<BR><BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565::PainterRGB565(touchgfx::colortype, unsigned char)
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::setupScreen()
</UL>

<P><STRONG><a name="[3ae]"></a>touchgfx::PainterRGB565::PainterRGB565(touchgfx::colortype, unsigned char)</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, painterrgb565.o(i._ZN8touchgfx13PainterRGB565C1ENS_9colortypeEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::PainterRGB565::PainterRGB565(touchgfx::colortype, unsigned char) &rArr; touchgfx::AbstractPainterRGB565::AbstractPainterRGB565__sub_object() &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565::setColor(touchgfx::colortype, unsigned char)
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPainterRGB565::AbstractPainterRGB565__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::MainView()
</UL>

<P><STRONG><a name="[5ad]"></a>touchgfx::PainterRGB565::PainterRGB565__sub_object(touchgfx::colortype, unsigned char)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, painterrgb565.o(i._ZN8touchgfx13PainterRGB565C1ENS_9colortypeEh), UNUSED)

<P><STRONG><a name="[3ff]"></a>touchgfx::touchgfx_init()</STRONG> (Thumb, 104 bytes, Stack size 40 bytes, boardconfiguration.o(i._ZN8touchgfx13touchgfx_initEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = touchgfx::touchgfx_init() &rArr; touchgfx::HAL& touchgfx::touchgfx_generic_init&lang;STM32F7HAL&rang;(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, short, short, unsigned short*, unsigned, unsigned) &rArr; FrontendHeap::FrontendHeap() &rArr; FrontendApplication::FrontendApplication(Model&, FrontendHeap&) &rArr; FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&) &rArr; touchgfx::LCD16bpp::enableTextureMapperAll() &rArr; touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888() &rArr; touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::STM32F7Instrumentation::init()
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL& touchgfx::touchgfx_generic_init&lang;STM32F7HAL&rang;(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, short, short, unsigned short*, unsigned, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1f3]"></a>touchgfx::AbstractButton::handleClickEvent(const touchgfx::ClickEvent&)</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, abstractbutton.o(i._ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::AbstractButton::handleClickEvent(const touchgfx::ClickEvent&)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> mainviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_6ButtonEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
</UL>
<P><STRONG><a name="[1b3]"></a>touchgfx::MVPApplication::handlePendingScreenTransition()</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, boardconfiguration.o(i._ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::MVPApplication::handlePendingScreenTransition()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> boardconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
</UL>
<P><STRONG><a name="[43d]"></a>touchgfx::AbstractPainter::setWidgetAlpha(unsigned char)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, abstractpainter.o(i._ZN8touchgfx15AbstractPainter14setWidgetAlphaEh))
<BR><BR>[Called By]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::render()
</UL>

<P><STRONG><a name="[43c]"></a>touchgfx::AbstractPainter::setOffset(unsigned short, unsigned short)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractpainter.o(i._ZN8touchgfx15AbstractPainter9setOffsetEtt))
<BR><BR>[Called By]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::render()
</UL>

<P><STRONG><a name="[40a]"></a>touchgfx::AbstractPainter::AbstractPainter__sub_object()</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, abstractpainter.o(i._ZN8touchgfx15AbstractPainterC2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPainterRGB565::AbstractPainterRGB565__sub_object()
</UL>

<P><STRONG><a name="[5ae]"></a>touchgfx::AbstractPainter::~AbstractPainter()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, abstractpainter.o(i._ZN8touchgfx15AbstractPainterD2Ev), UNUSED)

<P><STRONG><a name="[216]"></a>touchgfx::AbstractPainter::~AbstractPainter__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, abstractpainter.o(i._ZN8touchgfx15AbstractPainterD2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::~MainView()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> abstractpainter.o(.constdata__ZTVN8touchgfx15AbstractPainterE)
</UL>
<P><STRONG><a name="[8e]"></a>touchgfx::EasingEquations::backEaseOut(unsigned short, short, short, unsigned short)</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, easingequations.o(i._ZN8touchgfx15EasingEquations11backEaseOutEtsst))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::EasingEquations::backEaseOut(unsigned short, short, short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::EasingEquations::roundRespectSign(float)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollingmenu.o(i._ZN13ScrollingMenuC1Ev)
</UL>
<P><STRONG><a name="[91]"></a>touchgfx::EasingEquations::cubicEaseIn(unsigned short, short, short, unsigned short)</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, easingequations.o(i._ZN8touchgfx15EasingEquations11cubicEaseInEtsst))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::EasingEquations::cubicEaseIn(unsigned short, short, short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::EasingEquations::roundRespectSign(float)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> mainview.o(i._ZN8MainView12gotoStartingEv)
<LI> screensaverviewbase.o(i._ZN19ScreenSaverViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE)
</UL>
<P><STRONG><a name="[92]"></a>touchgfx::EasingEquations::linearEaseNone(unsigned short, short, short, unsigned short)</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, easingequations.o(i._ZN8touchgfx15EasingEquations14linearEaseNoneEtsst))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::EasingEquations::linearEaseNone(unsigned short, short, short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::EasingEquations::roundRespectSign(float)
</UL>
<BR>[Address Reference Count : 10]<UL><LI> mainview.o(i._ZN8MainView16gotoWaitingStartEv)
<LI> mainview.o(i._ZN8MainView18gotoWashingPrewashEv)
<LI> mainview.o(i._ZN8MainView18updateProgramTextsEv)
<LI> videoview.o(i._ZN9VideoView16handleClickEventERKN8touchgfx10ClickEventE)
<LI> mainview.o(i._ZN8MainView11gotoWaitingEv)
<LI> mainview.o(i._ZN8MainView12gotoStartingEv)
<LI> mainview.o(i._ZN8MainView15gotoWashingDoneEv)
<LI> mainview.o(i._ZN8MainView19fadeOutProgramTextsEv)
<LI> mainview.o(i._ZN8MainView22fadeOutProgramTextsNowEv)
<LI> mainview.o(i._ZN8MainView23centerAnimatedImageDoneERKN8touchgfx13AnimatedImageE)
</UL>
<P><STRONG><a name="[401]"></a>touchgfx::EasingEquations::roundRespectSign(float)</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, easingequations.o(i._ZN8touchgfx15EasingEquations16roundRespectSignEf))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::EasingEquations::backEaseOut(unsigned short, short, short, unsigned short)
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::EasingEquations::linearEaseNone(unsigned short, short, short, unsigned short)
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::EasingEquations::cubicEaseIn(unsigned short, short, short, unsigned short)
</UL>

<P><STRONG><a name="[48c]"></a>touchgfx::PixelDataWidget::setPixelData(unsigned char*)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, pixeldatawidget.o(i._ZN8touchgfx15PixelDataWidget12setPixelDataEPh))
<BR><BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VideoView::setupScreen()
</UL>

<P><STRONG><a name="[48b]"></a>touchgfx::PixelDataWidget::setBitmapFormat(touchgfx::Bitmap::BitmapFormat)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, pixeldatawidget.o(i._ZN8touchgfx15PixelDataWidget15setBitmapFormatENS_6Bitmap12BitmapFormatE))
<BR><BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VideoView::setupScreen()
</UL>

<P><STRONG><a name="[3e0]"></a>touchgfx::PixelDataWidget::PixelDataWidget()</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, pixeldatawidget.o(i._ZN8touchgfx15PixelDataWidgetC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::PixelDataWidget::PixelDataWidget() &rArr; touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MJPEGWidget::MJPEGWidget()
</UL>

<P><STRONG><a name="[5af]"></a>touchgfx::PixelDataWidget::PixelDataWidget__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, pixeldatawidget.o(i._ZN8touchgfx15PixelDataWidgetC1Ev), UNUSED)

<P><STRONG><a name="[445]"></a>touchgfx::RenderingBuffer::attach(unsigned char*, unsigned char, unsigned, unsigned, int)</STRONG> (Thumb, 18 bytes, Stack size 12 bytes, renderingbuffer.o(i._ZN8touchgfx15RenderingBuffer6attachEPhhjji))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::RenderingBuffer::attach(unsigned char*, unsigned char, unsigned, unsigned, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(const touchgfx::CanvasWidget*, const touchgfx::Rect&)
</UL>

<P><STRONG><a name="[440]"></a>touchgfx::RenderingBuffer::RenderingBuffer()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, renderingbuffer.o(i._ZN8touchgfx15RenderingBufferC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(const touchgfx::CanvasWidget*, const touchgfx::Rect&)
</UL>

<P><STRONG><a name="[5b0]"></a>touchgfx::RenderingBuffer::RenderingBuffer__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, renderingbuffer.o(i._ZN8touchgfx15RenderingBufferC1Ev), UNUSED)

<P><STRONG><a name="[446]"></a>touchgfx::RenderingBuffer::~RenderingBuffer()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, renderingbuffer.o(i._ZN8touchgfx15RenderingBufferD1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::~Canvas()
</UL>

<P><STRONG><a name="[5b1]"></a>touchgfx::RenderingBuffer::~RenderingBuffer__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, renderingbuffer.o(i._ZN8touchgfx15RenderingBufferD1Ev), UNUSED)

<P><STRONG><a name="[402]"></a>touchgfx::TouchCalibration::translatePoint(touchgfx::Point&)</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, touchcalibration.o(i._ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = touchgfx::TouchCalibration::translatePoint(touchgfx::Point&) &rArr; touchgfx::TouchCalibration::muldiv(int, int, int, int, int, int, int&)
</UL>
<BR>[Calls]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldiv(int, int, int, int, int, int, int&)
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::touch(int, int)
</UL>

<P><STRONG><a name="[403]"></a>touchgfx::TouchCalibration::muldiv(int, int, int, int, int, int, int&)</STRONG> (Thumb, 98 bytes, Stack size 20 bytes, touchcalibration.o(i._ZN8touchgfx16TouchCalibration6muldivEiiiiiiRi))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::TouchCalibration::muldiv(int, int, int, int, int, int, int&)
</UL>
<BR>[Called By]<UL><LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::translatePoint(touchgfx::Point&)
</UL>

<P><STRONG><a name="[343]"></a>touchgfx::AbstractPartition::AbstractPartition__sub_object()</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, abstractpartition.o(i._ZN8touchgfx17AbstractPartitionC2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap()
</UL>

<P><STRONG><a name="[5b2]"></a>touchgfx::AbstractPartition::~AbstractPartition()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, abstractpartition.o(i._ZN8touchgfx17AbstractPartitionD2Ev), UNUSED)

<P><STRONG><a name="[217]"></a>touchgfx::AbstractPartition::~AbstractPartition__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, abstractpartition.o(i._ZN8touchgfx17AbstractPartitionD2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::~FrontendHeap()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> abstractpartition.o(.constdata__ZTVN8touchgfx17AbstractPartitionE)
</UL>
<P><STRONG><a name="[21a]"></a>touchgfx::LockFreeDMA_Queue::pushCopyOf(const touchgfx::BlitOp&)</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, dma.o(i._ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::LockFreeDMA_Queue::pushCopyOf(const touchgfx::BlitOp&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[21b]"></a>touchgfx::LockFreeDMA_Queue::pop()</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, dma.o(i._ZN8touchgfx17LockFreeDMA_Queue3popEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::LockFreeDMA_Queue::pop() &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[21c]"></a>touchgfx::LockFreeDMA_Queue::first()</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx17LockFreeDMA_Queue5firstEv))
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[219]"></a>touchgfx::LockFreeDMA_Queue::isFull()</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx17LockFreeDMA_Queue6isFullEv))
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[218]"></a>touchgfx::LockFreeDMA_Queue::isEmpty()</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv))
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[33d]"></a>touchgfx::LockFreeDMA_Queue::LockFreeDMA_Queue(touchgfx::BlitOp*, unsigned long)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEm))
<BR><BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7DMA::STM32F7DMA()
</UL>

<P><STRONG><a name="[5b3]"></a>touchgfx::LockFreeDMA_Queue::LockFreeDMA_Queue__sub_object(touchgfx::BlitOp*, unsigned long)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEm), UNUSED)

<P><STRONG><a name="[17a]"></a>touchgfx::ClickableContainer::getLastChild(short, short, touchgfx::Drawable**)</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, clickablecontainer.o(i._ZN8touchgfx18ClickableContainer12getLastChildEssPPNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::ClickableContainer::getLastChild(short, short, touchgfx::Drawable**) &rArr; touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)
</UL>
<BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> clickablecontainer.o(.constdata__ZTVN8touchgfx18ClickableContainerE)
<LI> scrollingmenu.o(.constdata__ZTV13ScrollingMenu)
</UL>
<P><STRONG><a name="[21f]"></a>touchgfx::ClickableContainer::handleDragEvent(const touchgfx::DragEvent&)</STRONG> (Thumb, 180 bytes, Stack size 56 bytes, clickablecontainer.o(i._ZN8touchgfx18ClickableContainer15handleDragEventERKNS_9DragEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::ClickableContainer::handleDragEvent(const touchgfx::DragEvent&) &rArr; touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ClickEvent::ClickEvent(touchgfx::ClickEvent::ClickEventType, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::handleDragEvent(const touchgfx::DragEvent&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> clickablecontainer.o(.constdata__ZTVN8touchgfx18ClickableContainerE)
</UL>
<P><STRONG><a name="[21d]"></a>touchgfx::ClickableContainer::handleClickEvent(const touchgfx::ClickEvent&)</STRONG> (Thumb, 574 bytes, Stack size 192 bytes, clickablecontainer.o(i._ZN8touchgfx18ClickableContainer16handleClickEventERKNS_10ClickEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = touchgfx::ClickableContainer::handleClickEvent(const touchgfx::ClickEvent&) &rArr; touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ClickEvent::ClickEvent(touchgfx::ClickEvent::ClickEventType, short, short, short)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::handleClickEvent(const touchgfx::ClickEvent&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> clickablecontainer.o(.constdata__ZTVN8touchgfx18ClickableContainerE)
</UL>
<P><STRONG><a name="[21e]"></a>touchgfx::ClickableContainer::handleGestureEvent(const touchgfx::GestureEvent&)</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, clickablecontainer.o(i._ZN8touchgfx18ClickableContainer18handleGestureEventERKNS_12GestureEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = touchgfx::ClickableContainer::handleGestureEvent(const touchgfx::GestureEvent&) &rArr; touchgfx::ClickEvent::ClickEvent(touchgfx::ClickEvent::ClickEventType, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ClickEvent::ClickEvent(touchgfx::ClickEvent::ClickEventType, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::handleGestureEvent(const touchgfx::GestureEvent&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> clickablecontainer.o(.constdata__ZTVN8touchgfx18ClickableContainerE)
</UL>
<P><STRONG><a name="[369]"></a>touchgfx::ClickableContainer::ClickableContainer()</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, clickablecontainer.o(i._ZN8touchgfx18ClickableContainerC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::ClickableContainer::ClickableContainer() &rArr; touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::ScrollingMenu()
</UL>

<P><STRONG><a name="[5b4]"></a>touchgfx::ClickableContainer::ClickableContainer__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, clickablecontainer.o(i._ZN8touchgfx18ClickableContainerC1Ev), UNUSED)

<P><STRONG><a name="[224]"></a>touchgfx::MCUInstrumentation::getCCConsumed()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f7instrumentation.o(i._ZN8touchgfx18MCUInstrumentation13getCCConsumedEv))
<BR>[Address Reference Count : 1]<UL><LI> stm32f7instrumentation.o(.constdata__ZTVN8touchgfx22STM32F7InstrumentationE)
</UL>
<P><STRONG><a name="[225]"></a>touchgfx::MCUInstrumentation::setCCConsumed(unsigned)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f7instrumentation.o(i._ZN8touchgfx18MCUInstrumentation13setCCConsumedEj))
<BR>[Address Reference Count : 1]<UL><LI> stm32f7instrumentation.o(.constdata__ZTVN8touchgfx22STM32F7InstrumentationE)
</UL>
<P><STRONG><a name="[4ec]"></a>touchgfx::CanvasWidgetRenderer::setupBuffer(unsigned char*, unsigned)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, canvaswidgetrenderer.o(i._ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj))
<BR><BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[456]"></a>touchgfx::CanvasWidgetRenderer::getOutlineBuffer()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, canvaswidgetrenderer.o(i._ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv))
<BR><BR>[Called By]<UL><LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::reset()
</UL>

<P><STRONG><a name="[485]"></a>touchgfx::CanvasWidgetRenderer::getScanlineWidth()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, canvaswidgetrenderer.o(i._ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv))
<BR><BR>[Called By]<UL><LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Scanline::addSpan(int, int, unsigned, unsigned)
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool touchgfx::Rasterizer::render&lang;touchgfx::Renderer&rang;(T1&)
</UL>

<P><STRONG><a name="[409]"></a>touchgfx::CanvasWidgetRenderer::setScanlineWidth(unsigned)</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, canvaswidgetrenderer.o(i._ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::CanvasWidgetRenderer::setScanlineWidth(unsigned) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(const touchgfx::CanvasWidget*, const touchgfx::Rect&)
</UL>

<P><STRONG><a name="[483]"></a>touchgfx::CanvasWidgetRenderer::getScanlineCounts()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, canvaswidgetrenderer.o(i._ZN8touchgfx20CanvasWidgetRenderer17getScanlineCountsEv))
<BR><BR>[Called By]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Scanline::reset()
</UL>

<P><STRONG><a name="[481]"></a>touchgfx::CanvasWidgetRenderer::getScanlineCovers()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, canvaswidgetrenderer.o(i._ZN8touchgfx20CanvasWidgetRenderer17getScanlineCoversEv))
<BR><BR>[Called By]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Scanline::reset()
</UL>

<P><STRONG><a name="[457]"></a>touchgfx::CanvasWidgetRenderer::getOutlineBufferSize()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, canvaswidgetrenderer.o(i._ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv))
<BR><BR>[Called By]<UL><LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::reset()
</UL>

<P><STRONG><a name="[482]"></a>touchgfx::CanvasWidgetRenderer::getScanlineStartIndices()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, canvaswidgetrenderer.o(i._ZN8touchgfx20CanvasWidgetRenderer23getScanlineStartIndicesEv))
<BR><BR>[Called By]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Scanline::reset()
</UL>

<P><STRONG><a name="[443]"></a>touchgfx::CanvasWidgetRenderer::hasBuffer()</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, canvaswidgetrenderer.o(i._ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv))
<BR><BR>[Called By]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(const touchgfx::CanvasWidget*, const touchgfx::Rect&)
</UL>

<P><STRONG><a name="[213]"></a>touchgfx::AbstractPainterRGB565::renderInit()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, painterrgb565.o(i._ZN8touchgfx21AbstractPainterRGB56510renderInitEv))
<BR>[Address Reference Count : 2]<UL><LI> painterrgb565.o(.constdata__ZTVN8touchgfx13PainterRGB565E)
<LI> abstractpainterrgb565.o(.constdata__ZTVN8touchgfx21AbstractPainterRGB565E)
</UL>
<P><STRONG><a name="[215]"></a>touchgfx::AbstractPainterRGB565::renderPixel(unsigned short*, unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, abstractpainterrgb565.o(i._ZN8touchgfx21AbstractPainterRGB56511renderPixelEPthhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::AbstractPainterRGB565::renderPixel(unsigned short*, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> painterrgb565.o(.constdata__ZTVN8touchgfx13PainterRGB565E)
<LI> abstractpainterrgb565.o(.constdata__ZTVN8touchgfx21AbstractPainterRGB565E)
</UL>
<P><STRONG><a name="[220]"></a>touchgfx::AbstractPainterRGB565::render(unsigned char*, int, int, int, unsigned, const unsigned char*)</STRONG> (Thumb, 280 bytes, Stack size 48 bytes, abstractpainterrgb565.o(i._ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::AbstractPainterRGB565::render(unsigned char*, int, int, int, unsigned, const unsigned char*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> abstractpainterrgb565.o(.constdata__ZTVN8touchgfx21AbstractPainterRGB565E)
</UL>
<P><STRONG><a name="[3fe]"></a>touchgfx::AbstractPainterRGB565::AbstractPainterRGB565__sub_object()</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, painterrgb565.o(i._ZN8touchgfx21AbstractPainterRGB565C2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::AbstractPainterRGB565::AbstractPainterRGB565__sub_object() &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPainter::AbstractPainter__sub_object()
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565::PainterRGB565(touchgfx::colortype, unsigned char)
</UL>

<P><STRONG><a name="[3cd]"></a>touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, displaytransformation.o(i._ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&, const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::cacheDrawOperations(bool)
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(const touchgfx::CanvasWidget*, const touchgfx::Rect&)
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::fillRect(const touchgfx::Rect&, touchgfx::colortype, unsigned char)
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopy(const unsigned short*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyAlphaPerPixel(const unsigned short*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[40b]"></a>touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, displaytransformation.o(i._ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&, const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&, const touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(const touchgfx::CanvasWidget*, const touchgfx::Rect&)
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopy(const unsigned short*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyAlphaPerPixel(const unsigned short*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[40d]"></a>touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&)</STRONG> (Thumb, 36 bytes, Stack size 20 bytes, displaytransformation.o(i._ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&, const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&, const touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[40c]"></a>touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&, const touchgfx::Rect&)</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, displaytransformation.o(i._ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&, const touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&)
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
</UL>

<P><STRONG><a name="[3c9]"></a>touchgfx::DisplayTransformation::transformFrameBufferToDisplay(touchgfx::Rect&)</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, displaytransformation.o(i._ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::DisplayTransformation::transformFrameBufferToDisplay(touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::cacheDrawOperations(bool)
</UL>

<P><STRONG><a name="[41c]"></a>touchgfx::DisplayTransformation::transformFrameBufferToDisplay(short&, short&)</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, displaytransformation.o(i._ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::DisplayTransformation::transformFrameBufferToDisplay(short&, short&)
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::touch(int, int)
</UL>

<P><STRONG><a name="[222]"></a>touchgfx::STM32F7Instrumentation::getCPUCycles()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f7instrumentation.o(i._ZN8touchgfx22STM32F7Instrumentation12getCPUCyclesEv))
<BR>[Address Reference Count : 1]<UL><LI> stm32f7instrumentation.o(.constdata__ZTVN8touchgfx22STM32F7InstrumentationE)
</UL>
<P><STRONG><a name="[223]"></a>touchgfx::STM32F7Instrumentation::setMCUActive(bool)</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32f7instrumentation.o(i._ZN8touchgfx22STM32F7Instrumentation12setMCUActiveEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::STM32F7Instrumentation::setMCUActive(bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f7instrumentation.o(.constdata__ZTVN8touchgfx22STM32F7InstrumentationE)
</UL>
<P><STRONG><a name="[221]"></a>touchgfx::STM32F7Instrumentation::init()</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, stm32f7instrumentation.o(i._ZN8touchgfx22STM32F7Instrumentation4initEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = touchgfx::STM32F7Instrumentation::init() &rArr; HAL_TIM_Base_Init &rArr; TIM_Base_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Start
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::touchgfx_init()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f7instrumentation.o(.constdata__ZTVN8touchgfx22STM32F7InstrumentationE)
</UL>
<P><STRONG><a name="[b2]"></a>touchgfx::STM32F7Instrumentation::~STM32F7Instrumentation()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, boardconfiguration.o(i._ZN8touchgfx22STM32F7InstrumentationD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> boardconfiguration.o(i.__sti___22_BoardConfiguration_cpp_dceb80ee)
<LI> stm32f7instrumentation.o(.constdata__ZTVN8touchgfx22STM32F7InstrumentationE)
</UL>
<P><STRONG><a name="[5b5]"></a>touchgfx::STM32F7Instrumentation::~STM32F7Instrumentation__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, boardconfiguration.o(i._ZN8touchgfx22STM32F7InstrumentationD1Ev), UNUSED)

<P><STRONG><a name="[1ed]"></a>touchgfx::TextAreaWithOneWildcard::getTextHeight()</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, mainviewbase.o(i._ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextAreaWithOneWildcard::getTextHeight() &rArr; touchgfx::TypedText::getText() const &rArr; touchgfx::TypedText::assertValid() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::hasValidId() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEEE)
</UL>
<P><STRONG><a name="[227]"></a>touchgfx::STM32F746GTouchController::sampleTouch(int&, int&)</STRONG> (Thumb, 46 bytes, Stack size 56 bytes, stm32f746gtouchcontroller.o(i._ZN8touchgfx25STM32F746GTouchController11sampleTouchERiS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = touchgfx::STM32F746GTouchController::sampleTouch(int&, int&) &rArr; BSP_TS_GetState &rArr; BSP_TS_Get_GestureId &rArr; ft5336_TS_GetGestureID &rArr; TS_IO_Read &rArr; I2Cx_ReadMultiple &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_TS_GetState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f746gtouchcontroller.o(.constdata__ZTVN8touchgfx25STM32F746GTouchControllerE)
</UL>
<P><STRONG><a name="[226]"></a>touchgfx::STM32F746GTouchController::init()</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, stm32f746gtouchcontroller.o(i._ZN8touchgfx25STM32F746GTouchController4initEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::STM32F746GTouchController::init() &rArr; BSP_TS_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_GetYSize
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_GetXSize
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_TS_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f746gtouchcontroller.o(.constdata__ZTVN8touchgfx25STM32F746GTouchControllerE)
</UL>
<P><STRONG><a name="[b1]"></a>touchgfx::STM32F746GTouchController::~STM32F746GTouchController()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, boardconfiguration.o(i._ZN8touchgfx25STM32F746GTouchControllerD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> boardconfiguration.o(i.__sti___22_BoardConfiguration_cpp_dceb80ee)
<LI> stm32f746gtouchcontroller.o(.constdata__ZTVN8touchgfx25STM32F746GTouchControllerE)
</UL>
<P><STRONG><a name="[5b6]"></a>touchgfx::STM32F746GTouchController::~STM32F746GTouchController__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, boardconfiguration.o(i._ZN8touchgfx25STM32F746GTouchControllerD1Ev), UNUSED)

<P><STRONG><a name="[358]"></a>touchgfx::Box::Box()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, aboutviewbase.o(i._ZN8touchgfx3BoxC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = touchgfx::Box::Box() &rArr; touchgfx::Widget::Widget__sub_object() &rArr; touchgfx::Drawable::Drawable__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AboutViewBase::AboutViewBase()
</UL>

<P><STRONG><a name="[5b7]"></a>touchgfx::Box::Box__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aboutviewbase.o(i._ZN8touchgfx3BoxC1Ev), UNUSED)

<P><STRONG><a name="[158]"></a>touchgfx::HAL::beginFrame()</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL10beginFrameEv))
<BR>[Address Reference Count : 2]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[156]"></a>touchgfx::HAL::getDMAType()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f7hal.o(i._ZN8touchgfx3HAL10getDMATypeEv))
<BR>[Address Reference Count : 2]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[414]"></a>touchgfx::HAL::initialize()</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, hal.o(i._ZN8touchgfx3HAL10initializeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = touchgfx::HAL::initialize() &rArr; touchgfx::OSWrappers::initialize() &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::initialize()
</UL>
<BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL& touchgfx::touchgfx_generic_init&lang;STM32F7HAL&rang;(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, short, short, unsigned short*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[145]"></a>touchgfx::HAL::getBlitCaps()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f7hal.o(i._ZN8touchgfx3HAL11getBlitCapsEv))
<BR>[Address Reference Count : 2]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[32e]"></a>touchgfx::HAL::setMCUActive(bool)</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, hal.o(i._ZN8touchgfx3HAL12setMCUActiveEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::HAL::setMCUActive(bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::set(touchgfx::GPIO::GPIO_ID)
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IdleTaskHook(void*)
</UL>

<P><STRONG><a name="[148]"></a>touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations)</STRONG> (Thumb, 136 bytes, Stack size 88 bytes, hal.o(i._ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations) &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const &rArr; touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BlitOp::BlitOp()
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getClientFrameBuffer()
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[14c]"></a>touchgfx::HAL::backPorchExited()</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm32f7hal.o(i._ZN8touchgfx3HAL15backPorchExitedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::HAL::backPorchExited() &rArr; touchgfx::HAL::swapFrameBuffers() &rArr; touchgfx::HAL::getClientFrameBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::swapFrameBuffers()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[141]"></a>touchgfx::HAL::lockFrameBuffer()</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, hal.o(i._ZN8touchgfx3HAL15lockFrameBufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = touchgfx::HAL::lockFrameBuffer() &rArr; touchgfx::OSWrappers::takeFrameBufferSemaphore() &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::takeFrameBufferSemaphore()
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getClientFrameBuffer()
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::isDmaQueueEmpty()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[147]"></a>touchgfx::HAL::blitCopyARGB8888(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char)</STRONG> (Thumb, 68 bytes, Stack size 72 bytes, hal.o(i._ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::blitCopyARGB8888(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char) &rArr; touchgfx::HAL::blitCopy(const unsigned short*, const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat) &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const &rArr; touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopy(const unsigned short*, const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[22a]"></a>touchgfx::HAL::flushFrameBuffer(const touchgfx::Rect&)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE))
<BR><BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7HAL::flushFrameBuffer(const touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[321]"></a>touchgfx::HAL::swapFrameBuffers()</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, hal.o(i._ZN8touchgfx3HAL16swapFrameBuffersEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::HAL::swapFrameBuffers() &rArr; touchgfx::HAL::getClientFrameBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::toggle(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getClientFrameBuffer()
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::backPorchExited()
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_IRQHandler
</UL>

<P><STRONG><a name="[13f]"></a>touchgfx::HAL::allowDMATransfers()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL17allowDMATransfersEv))
<BR>[Address Reference Count : 2]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[22b]"></a>touchgfx::HAL::getTFTCurrentLine()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL17getTFTCurrentLineEv))
<BR>[Address Reference Count : 1]<UL><LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[142]"></a>touchgfx::HAL::unlockFrameBuffer()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL17unlockFrameBufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = touchgfx::HAL::unlockFrameBuffer() &rArr; touchgfx::OSWrappers::giveFrameBufferSemaphore() &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::giveFrameBufferSemaphore()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[415]"></a>touchgfx::HAL::getClientFrameBuffer()</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, hal.o(i._ZN8touchgfx3HAL20getClientFrameBufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::HAL::getClientFrameBuffer()
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat)
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::swapFrameBuffers()
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lockFrameBuffer()
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations)
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopy(const unsigned short*, const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat)
</UL>

<P><STRONG><a name="[14b]"></a>touchgfx::HAL::registerEventListener(touchgfx::UIEventListener&)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE))
<BR><BR>[Calls]<UL><LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerEventListener(touchgfx::UIEventListener&)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[13c]"></a>touchgfx::HAL::setDisplayOrientation(touchgfx::DisplayOrientation)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f7hal.o(i._ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE))
<BR>[Address Reference Count : 2]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[151]"></a>touchgfx::HAL::setFrameBufferStartAddress(void*, unsigned short, bool, bool)</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, hal.o(i._ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::setFrameBufferStartAddress(void*, unsigned short, bool, bool) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[153]"></a>touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short)</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, hal.o(i._ZN8touchgfx3HAL27configurePartialFrameBufferEtttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[152]"></a>touchgfx::HAL::setFrameBufferStartAddresses(void*, void*, void*)</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, hal.o(i._ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::setFrameBufferStartAddresses(void*, void*, void*) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[15d]"></a>touchgfx::HAL::performDisplayOrientationChange()</STRONG> (Thumb, 56 bytes, Stack size 12 bytes, hal.o(i._ZN8touchgfx3HAL31performDisplayOrientationChangeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::HAL::performDisplayOrientationChange()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[337]"></a>touchgfx::HAL::lcd()</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f7dma.o(i._ZN8touchgfx3HAL3lcdEv))
<BR><BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7DMA::setupFillWithAlpha(const touchgfx::BlitOp&)
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7DMA::setupDataFill(const touchgfx::BlitOp&)
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7DMA::setupDataCopy(const touchgfx::BlitOp&)
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char)
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopyARGB8888(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char)
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations)
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::draw(const touchgfx::Rect&) const
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(const touchgfx::CanvasWidget*, const touchgfx::Rect&)
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::setFrameBufferStartAddress(void*, unsigned short, bool, bool)
</UL>

<P><STRONG><a name="[157]"></a>touchgfx::HAL::tick()</STRONG> (Thumb, 372 bytes, Stack size 32 bytes, hal.o(i._ZN8touchgfx3HAL4tickEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::HAL::tick()
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::set(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::tick()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[15b]"></a>touchgfx::HAL::touch(int, int)</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, hal.o(i._ZN8touchgfx3HAL5touchEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = touchgfx::HAL::touch(int, int) &rArr; touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short) &rArr; touchgfx::GestureEvent::GestureEvent(touchgfx::GestureEvent::GestureType, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short)
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerDragEvent(unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformFrameBufferToDisplay(short&, short&)
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::translatePoint(touchgfx::Point&)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[15c]"></a>touchgfx::HAL::noTouch()</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, hal.o(i._ZN8touchgfx3HAL7noTouchEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = touchgfx::HAL::noTouch() &rArr; touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short) &rArr; touchgfx::GestureEvent::GestureEvent(touchgfx::GestureEvent::GestureType, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[418]"></a>touchgfx::HAL::blitCopy(const unsigned short*, const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat)</STRONG> (Thumb, 178 bytes, Stack size 96 bytes, hal.o(i._ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::blitCopy(const unsigned short*, const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat) &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const &rArr; touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BlitOp::BlitOp()
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getClientFrameBuffer()
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopyARGB8888(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char)
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[146]"></a>touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</STRONG> (Thumb, 60 bytes, Stack size 88 bytes, hal.o(i._ZN8touchgfx3HAL8blitCopyEPKtttttthb))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool) &rArr; touchgfx::HAL::blitCopy(const unsigned short*, const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat) &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const &rArr; touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopy(const unsigned short*, const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[14a]"></a>touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char)</STRONG> (Thumb, 62 bytes, Stack size 56 bytes, hal.o(i._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[149]"></a>touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat)</STRONG> (Thumb, 136 bytes, Stack size 96 bytes, hal.o(i._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat) &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const &rArr; touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BlitOp::BlitOp()
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getClientFrameBuffer()
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[159]"></a>touchgfx::HAL::endFrame()</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, hal.o(i._ZN8touchgfx3HAL8endFrameEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::HAL::endFrame()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[140]"></a>touchgfx::HAL::flushDMA()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL8flushDMAEv))
<BR>[Address Reference Count : 2]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[144]"></a>touchgfx::HAL::blockCopy(void*, const void*, unsigned)</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, hal.o(i._ZN8touchgfx3HAL9blockCopyEPvPKvj))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::HAL::blockCopy(void*, const void*, unsigned)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[154]"></a>touchgfx::HAL::taskDelay(unsigned short)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f7hal.o(i._ZN8touchgfx3HAL9taskDelayEt))
<BR>[Address Reference Count : 2]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[13d]"></a>touchgfx::HAL::taskEntry()</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL9taskEntryEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = touchgfx::HAL::taskEntry() &rArr; touchgfx::OSWrappers::waitForVSync() &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::waitForVSync()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[53a]"></a>touchgfx::HAL::HAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)</STRONG> (Thumb, 162 bytes, Stack size 20 bytes, boardconfiguration.o(i._ZN8touchgfx3HALC2ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::HAL::HAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL& touchgfx::touchgfx_generic_init&lang;STM32F7HAL&rang;(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, short, short, unsigned short*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[493]"></a>touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, ...)</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, lcd.o(i._ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, ...)
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(const touchgfx::Rect&) const
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::draw(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[420]"></a>touchgfx::LCD::rotateRect(touchgfx::Rect&, const touchgfx::Rect&, touchgfx::TextRotation)</STRONG> (Thumb, 126 bytes, Stack size 40 bytes, lcd.o(i._ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::LCD::rotateRect(touchgfx::Rect&, const touchgfx::Rect&, touchgfx::TextRotation) &rArr; touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
</UL>

<P><STRONG><a name="[421]"></a>touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, const touchgfx::Font*, short)</STRONG> (Thumb, 80 bytes, Stack size 56 bytes, lcd.o(i._ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, const touchgfx::Font*, short) &rArr; touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::WideTextInternalStruct(touchgfx::TextProvider&, unsigned short, unsigned char, const touchgfx::Font*, touchgfx::WideTextAction)
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const
</UL>

<P><STRONG><a name="[424]"></a>touchgfx::LCD::stringWidth(touchgfx::TextProvider&, const touchgfx::Font&, int, unsigned char)</STRONG> (Thumb, 92 bytes, Stack size 56 bytes, lcd.o(i._ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD::stringWidth(touchgfx::TextProvider&, const touchgfx::Font&, int, unsigned char) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&)
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::advance() const
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
</UL>

<P><STRONG><a name="[492]"></a>touchgfx::LCD::StringVisuals::StringVisuals(const touchgfx::Font*, touchgfx::colortype, unsigned char, unsigned char, short, touchgfx::TextRotation, unsigned char, unsigned char, touchgfx::WideTextAction)</STRONG> (Thumb, 38 bytes, Stack size 20 bytes, textareawithwildcard.o(i._ZN8touchgfx3LCD13StringVisualsC1EPKNS_4FontENS_9colortypeEhhsNS_12TextRotationEhhNS_14WideTextActionE))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::LCD::StringVisuals::StringVisuals(const touchgfx::Font*, touchgfx::colortype, unsigned char, unsigned char, short, touchgfx::TextRotation, unsigned char, unsigned char, touchgfx::WideTextAction)
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::draw(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[5b8]"></a>touchgfx::LCD::StringVisuals::StringVisuals__sub_object(const touchgfx::Font*, touchgfx::colortype, unsigned char, unsigned char, short, touchgfx::TextRotation, unsigned char, unsigned char, touchgfx::WideTextAction)</STRONG> (Thumb, 0 bytes, Stack size 20 bytes, textareawithwildcard.o(i._ZN8touchgfx3LCD13StringVisualsC1EPKNS_4FontENS_9colortypeEhhsNS_12TextRotationEhhNS_14WideTextActionE), UNUSED)

<P><STRONG><a name="[1b]"></a>touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)</STRONG> (Thumb, 618 bytes, Stack size 400 bytes, lcd.o(i._ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 760 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list) &rArr; touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::bottom() const
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list, const unsigned short*)
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::WideTextInternalStruct(touchgfx::TextProvider&, unsigned short, unsigned char, const touchgfx::Font*, touchgfx::WideTextAction)
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool)
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool)
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::stringWidth(touchgfx::TextProvider&, const touchgfx::Font&, int, unsigned char)
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::rotateRect(touchgfx::Rect&, const touchgfx::Rect&, touchgfx::TextRotation)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> texts.o(.data)
</UL>
<P><STRONG><a name="[425]"></a>touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool)</STRONG> (Thumb, 594 bytes, Stack size 128 bytes, lcd.o(i._ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib))
<BR><BR>[Stack]<UL><LI>Max Depth = 360 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::right() const
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::advance() const
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&)
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
</UL>

<P><STRONG><a name="[423]"></a>touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool)</STRONG> (Thumb, 428 bytes, Stack size 56 bytes, lcd.o(i._ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&)
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::advance() const
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::isSpace(unsigned short)
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::addWord(unsigned short, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, const touchgfx::Font*, short)
</UL>

<P><STRONG><a name="[428]"></a>touchgfx::LCD::WideTextInternalStruct::addWord(unsigned short, unsigned short, unsigned short)</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, lcd.o(i._ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::LCD::WideTextInternalStruct::addWord(unsigned short, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool)
</UL>

<P><STRONG><a name="[427]"></a>touchgfx::LCD::WideTextInternalStruct::isSpace(unsigned short)</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd.o(i._ZN8touchgfx3LCD22WideTextInternalStruct7isSpaceEt))
<BR><BR>[Called By]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool)
</UL>

<P><STRONG><a name="[422]"></a>touchgfx::LCD::WideTextInternalStruct::WideTextInternalStruct(touchgfx::TextProvider&, unsigned short, unsigned char, const touchgfx::Font*, touchgfx::WideTextAction)</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, lcd.o(i._ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD::WideTextInternalStruct::WideTextInternalStruct(touchgfx::TextProvider&, unsigned short, unsigned char, const touchgfx::Font*, touchgfx::WideTextAction)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::advance() const
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, const touchgfx::Font*, short)
</UL>

<P><STRONG><a name="[5b9]"></a>touchgfx::LCD::WideTextInternalStruct::WideTextInternalStruct__sub_object(touchgfx::TextProvider&, unsigned short, unsigned char, const touchgfx::Font*, touchgfx::WideTextAction)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, lcd.o(i._ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE), UNUSED)

<P><STRONG><a name="[429]"></a>touchgfx::LCD::realX(const touchgfx::Rect&, short, short, touchgfx::TextRotation)</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, lcd.o(i._ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD::realX(const touchgfx::Rect&, short, short, touchgfx::TextRotation)
</UL>
<BR>[Calls]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::right() const
</UL>
<BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[42a]"></a>touchgfx::LCD::realY(const touchgfx::Rect&, short, short, touchgfx::TextRotation)</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, lcd.o(i._ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD::realY(const touchgfx::Rect&, short, short, touchgfx::TextRotation)
</UL>
<BR>[Calls]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::bottom() const
</UL>
<BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[44e]"></a>touchgfx::clz(int)</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, utils.o(i._ZN8touchgfx3clzEi))
<BR><BR>[Called By]<UL><LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldiv(int, int, int, int&)
</UL>

<P><STRONG><a name="[454]"></a>touchgfx::Cell::set(int, int, int, int)</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, outline.o(i._ZN8touchgfx4Cell3setEiiii))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Cell::set(int, int, int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::renderLine(int, int, int, int)
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::moveTo(int, int)
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::reset()
</UL>

<P><STRONG><a name="[455]"></a>touchgfx::Cell::addCover(int, int)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, outline.o(i._ZN8touchgfx4Cell8addCoverEii))
<BR><BR>[Called By]<UL><LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::renderLine(int, int, int, int)
</UL>

<P><STRONG><a name="[322]"></a>touchgfx::GPIO::set(touchgfx::GPIO::GPIO_ID)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gpio.o(i._ZN8touchgfx4GPIO3setENS0_7GPIO_IDE))
<BR><BR>[Calls]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_On
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::tick()
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_IRQHandler
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::setMCUActive(bool)
</UL>

<P><STRONG><a name="[42b]"></a>touchgfx::GPIO::init()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gpio.o(i._ZN8touchgfx4GPIO4initEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::GPIO::init() &rArr; BSP_LED_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::hw_init()
</UL>

<P><STRONG><a name="[323]"></a>touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gpio.o(i._ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE))
<BR><BR>[Calls]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Off
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::tick()
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_IRQHandler
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::init()
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::setMCUActive(bool)
</UL>

<P><STRONG><a name="[419]"></a>touchgfx::GPIO::toggle(touchgfx::GPIO::GPIO_ID)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gpio.o(i._ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE))
<BR><BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Toggle
</UL>
<BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::swapFrameBuffers()
</UL>

<P><STRONG><a name="[3c6]"></a>touchgfx::Rect::expandToFit(const touchgfx::Rect&)</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, application.o(i._ZN8touchgfx4Rect11expandToFitERKS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Rect::expandToFit(const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::bottom() const
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::right() const
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::isEmpty() const
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
</UL>

<P><STRONG><a name="[3ca]"></a>touchgfx::Rect::Rect(short, short, short, short)</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, clickablecontainer.o(i._ZN8touchgfx4RectC1Essss))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::draw()
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::draw(touchgfx::Rect&)
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::cacheDrawOperations(bool)
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ClickableContainer::ClickableContainer()
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::Screen()
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::draw(const touchgfx::Rect&) const
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::getSolidRect() const
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PixelDataWidget::PixelDataWidget()
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw()
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___15_Application_cpp_63cd8d44
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::getMinimalRect() const
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::CanvasWidget__sub_object()
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getSolidRect() const
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::rotateRect(touchgfx::Rect&, const touchgfx::Rect&, touchgfx::TextRotation)
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getCachedVisibleRect()
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[5ba]"></a>touchgfx::Rect::Rect__sub_object(short, short, short, short)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, clickablecontainer.o(i._ZN8touchgfx4RectC1Essss), UNUSED)

<P><STRONG><a name="[11c]"></a>touchgfx::Rect::Rect()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, particleeffect.o(i._ZN8touchgfx4RectC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::cacheDrawOperations(bool)
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::Screen()
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Particle::getSolidRect() const
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParticleEffect::draw(const touchgfx::Rect&) const
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParticleEffect::getSolidRect() const
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::quickRemoveAt(unsigned short)
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(t._ZN8touchgfx6VectorINS_4RectELt8EEC1Ev)
</UL>
<P><STRONG><a name="[5bb]"></a>touchgfx::Rect::Rect__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, particleeffect.o(i._ZN8touchgfx4RectC1Ev), UNUSED)

<P><STRONG><a name="[42c]"></a>touchgfx::Rect::operator &=(const touchgfx::Rect&)</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, application.o(i._ZN8touchgfx4RectaNERKS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Rect::operator &=(const touchgfx::Rect&) &rArr; touchgfx::Rect::intersect(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::bottom() const
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::right() const
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::intersect(const touchgfx::Rect&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParticleEffect::draw(const touchgfx::Rect&) const
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::draw(const touchgfx::Rect&) const
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::draw(const touchgfx::Rect&) const
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(const touchgfx::CanvasWidget*, const touchgfx::Rect&)
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[35a]"></a>touchgfx::View&lang;AboutPresenter&rang;::~View()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, aboutviewbase.o(i._ZN8touchgfx4ViewI14AboutPresenterED1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AboutViewBase::~AboutViewBase()
</UL>

<P><STRONG><a name="[5bc]"></a>touchgfx::View&lang;AboutPresenter&rang;::~View__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aboutviewbase.o(i._ZN8touchgfx4ViewI14AboutPresenterED1Ev), UNUSED)

<P><STRONG><a name="[36d]"></a>touchgfx::View&lang;VideoPresenter&rang;::~View()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, videoviewbase.o(i._ZN8touchgfx4ViewI14VideoPresenterED1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VideoViewBase::~VideoViewBase()
</UL>

<P><STRONG><a name="[5bd]"></a>touchgfx::View&lang;VideoPresenter&rang;::~View__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, videoviewbase.o(i._ZN8touchgfx4ViewI14VideoPresenterED1Ev), UNUSED)

<P><STRONG><a name="[381]"></a>touchgfx::View&lang;ScreenSaverPresenter&rang;::~View()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, screensaverviewbase.o(i._ZN8touchgfx4ViewI20ScreenSaverPresenterED1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScreenSaverViewBase::~ScreenSaverViewBase()
</UL>

<P><STRONG><a name="[5be]"></a>touchgfx::View&lang;ScreenSaverPresenter&rang;::~View__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, screensaverviewbase.o(i._ZN8touchgfx4ViewI20ScreenSaverPresenterED1Ev), UNUSED)

<P><STRONG><a name="[353]"></a>touchgfx::Color::getColorFrom24BitRGB(unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, aboutviewbase.o(i._ZN8touchgfx5Color20getColorFrom24BitRGBEhhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::Color::getColorFrom24BitRGB(unsigned char, unsigned char, unsigned char) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AboutViewBase::AboutViewBase()
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VideoViewBase::VideoViewBase()
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainViewBase::MainViewBase()
</UL>

<P><STRONG><a name="[1d0]"></a>touchgfx::Image::setBitmap(const touchgfx::Bitmap&)</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, image.o(i._ZN8touchgfx5Image9setBitmapERKNS_6BitmapE))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::hasTransparentPixels() const
</UL>
<BR>[Called By]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AboutViewBase::AboutViewBase()
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AboutView::setStateTGFX()
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AboutView::setupScreen()
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScreenSaverViewBase::ScreenSaverViewBase()
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VideoViewBase::VideoViewBase()
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VideoView::handleClickEvent(const touchgfx::ClickEvent&)
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Particle::Particle()
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimatedImage::handleTickEvent()
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimatedImage::startAnimation(const bool&, const bool&, const bool&)
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimatedImage::stopAnimation()
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimatedImage::setBitmaps(unsigned short, unsigned short)
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainViewBase::MainViewBase()
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::Image(const touchgfx::Bitmap&)
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::gotoWashingSpinning()
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::gotoWashingWashing()
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::gotoWashingRinsing()
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::gotoWashingPrewash()
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::gotoWashingDone()
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::gotoStarting()
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::setupScreen()
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageContainer::setBitmap(touchgfx::Bitmap)
</UL>
<BR>[Address Reference Count : 4]<UL><LI> particleeffect.o(.constdata__ZTV8Particle)
<LI> mainview.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[34c]"></a>touchgfx::Image::Image(const touchgfx::Bitmap&)</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, mainview.o(i._ZN8touchgfx5ImageC1ERKNS_6BitmapE))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::Image::Image(const touchgfx::Bitmap&) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AboutView::AboutView()
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScreenSaverViewBase::ScreenSaverViewBase()
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VideoViewBase::VideoViewBase()
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainViewBase::MainViewBase()
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MoveAnimator&lang;touchgfx::Image&rang;::MoveAnimator()
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimatedImage::AnimatedImage(const unsigned char&)
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::MainView()
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageContainer::ImageContainer()
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::FadeAnimator()
</UL>

<P><STRONG><a name="[5bf]"></a>touchgfx::Image::Image__sub_object(const touchgfx::Bitmap&)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, mainview.o(i._ZN8touchgfx5ImageC1ERKNS_6BitmapE), UNUSED)

<P><STRONG><a name="[389]"></a>touchgfx::Texts::setLanguage(unsigned short)</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, texts.o(i._ZN8touchgfx5Texts11setLanguageEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Texts::setLanguage(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypedTextDatabase::getFonts()
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypedTextDatabase::getInstanceSize()
</UL>
<BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL& touchgfx::touchgfx_generic_init&lang;STM32F7HAL&rang;(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, short, short, unsigned short*, unsigned, unsigned)
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)
</UL>

<P><STRONG><a name="[434]"></a>touchgfx::Bitmap::clearCache()</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, bitmap.o(i._ZN8touchgfx6Bitmap10clearCacheEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Bitmap::clearCache()
</UL>
<BR>[Called By]<UL><LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::setCache(unsigned short*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[432]"></a>touchgfx::Bitmap::registerBitmapDatabase(const touchgfx::Bitmap::BitmapData*, unsigned short, unsigned short*, unsigned, unsigned)</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, bitmap.o(i._ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::registerBitmapDatabase(const touchgfx::Bitmap::BitmapData*, unsigned short, unsigned short*, unsigned, unsigned) &rArr; touchgfx::Bitmap::setCache(unsigned short*, unsigned, unsigned) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::setCache(unsigned short*, unsigned, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL& touchgfx::touchgfx_generic_init&lang;STM32F7HAL&rang;(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, short, short, unsigned short*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[433]"></a>touchgfx::Bitmap::setCache(unsigned short*, unsigned, unsigned)</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, bitmap.o(i._ZN8touchgfx6Bitmap8setCacheEPtjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::setCache(unsigned short*, unsigned, unsigned) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::clearCache()
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::registerBitmapDatabase(const touchgfx::Bitmap::BitmapData*, unsigned short, unsigned short*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[8d]"></a>touchgfx::BlitOp::BlitOp()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f7dma.o(i._ZN8touchgfx6BlitOpC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat)
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations)
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopy(const unsigned short*, const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f7dma.o(i._ZN10STM32F7DMAC1Ev)
</UL>
<P><STRONG><a name="[5c0]"></a>touchgfx::BlitOp::BlitOp__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32f7dma.o(i._ZN8touchgfx6BlitOpC1Ev), UNUSED)

<P><STRONG><a name="[1f5]"></a>touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, button.o(i._ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
</UL>
<BR>[Called By]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AboutViewBase::AboutViewBase()
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScreenSaverViewBase::ScreenSaverViewBase()
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VideoViewBase::VideoViewBase()
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainViewBase::MainViewBase()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> mainviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_6ButtonEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
</UL>
<P><STRONG><a name="[34e]"></a>touchgfx::Button::Button()</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, mainviewbase.o(i._ZN8touchgfx6ButtonC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = touchgfx::Button::Button() &rArr; touchgfx::Widget::Widget__sub_object() &rArr; touchgfx::Drawable::Drawable__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainViewBase::MainViewBase()
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MoveAnimator&lang;touchgfx::Button&rang;::MoveAnimator()
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::FadeAnimator()
</UL>

<P><STRONG><a name="[5c1]"></a>touchgfx::Button::Button__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, mainviewbase.o(i._ZN8touchgfx6ButtonC1Ev), UNUSED)

<P><STRONG><a name="[435]"></a>touchgfx::Canvas::close()</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, canvas.o(i._ZN8touchgfx6Canvas5closeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = touchgfx::Canvas::close() &rArr; touchgfx::Rasterizer::lineTo(int, int) &rArr; touchgfx::Outline::lineTo(int, int) &rArr; touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Cell::set(int, int, int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rasterizer::lineTo(int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::render()
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::moveTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
</UL>

<P><STRONG><a name="[436]"></a>touchgfx::Canvas::lineTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, canvas.o(i._ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = touchgfx::Canvas::lineTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) &rArr; touchgfx::Rasterizer::moveTo(int, int) &rArr; touchgfx::Outline::moveTo(int, int) &rArr; touchgfx::Outline::lineTo(int, int) &rArr; touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Cell::set(int, int, int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator -(const touchgfx::CWRUtil::Q5&) const
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::isOutside(const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&) const
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::transformFrameBufferToDisplay(touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rasterizer::moveTo(int, int)
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rasterizer::lineTo(int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::drawCanvasWidget(const touchgfx::Rect&) const
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::lineToXYAR2(touchgfx::Canvas&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&) const
</UL>

<P><STRONG><a name="[43a]"></a>touchgfx::Canvas::moveTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, canvas.o(i._ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = touchgfx::Canvas::moveTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) &rArr; touchgfx::Rasterizer::moveTo(int, int) &rArr; touchgfx::Outline::moveTo(int, int) &rArr; touchgfx::Outline::lineTo(int, int) &rArr; touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Cell::set(int, int, int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator -(const touchgfx::CWRUtil::Q5&) const
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::isOutside(const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&) const
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::transformFrameBufferToDisplay(touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::close()
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rasterizer::moveTo(int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::moveToAR2(touchgfx::Canvas&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&) const
</UL>

<P><STRONG><a name="[43b]"></a>touchgfx::Canvas::render()</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, canvas.o(i._ZN8touchgfx6Canvas6renderEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 428<LI>Call Chain = touchgfx::Canvas::render() &rArr; bool touchgfx::Rasterizer::render&lang;touchgfx::Renderer&rang;(T1&) &rArr; touchgfx::Outline::getCells() &rArr; touchgfx::Outline::sortCells() &rArr; touchgfx::Outline::qsortCells(touchgfx::Cell*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPainter::setOffset(unsigned short, unsigned short)
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPainter::setWidgetAlpha(unsigned char)
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool touchgfx::Rasterizer::render&lang;touchgfx::Renderer&rang;(T1&)
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::close()
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::drawCanvasWidget(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[43f]"></a>touchgfx::Canvas::Canvas(const touchgfx::CanvasWidget*, const touchgfx::Rect&)</STRONG> (Thumb, 482 bytes, Stack size 56 bytes, canvas.o(i._ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = touchgfx::Canvas::Canvas(const touchgfx::CanvasWidget*, const touchgfx::Rect&) &rArr; touchgfx::CanvasWidgetRenderer::setScanlineWidth(unsigned) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::hasBuffer()
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::setScanlineWidth(unsigned)
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Scanline::Scanline()
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::Outline()
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::reset()
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::RenderingBuffer::RenderingBuffer()
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::RenderingBuffer::attach(unsigned char*, unsigned char, unsigned, unsigned, int)
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::drawCanvasWidget(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[5c2]"></a>touchgfx::Canvas::Canvas__sub_object(const touchgfx::CanvasWidget*, const touchgfx::Rect&)</STRONG> (Thumb, 0 bytes, Stack size 56 bytes, canvas.o(i._ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE), UNUSED)

<P><STRONG><a name="[22e]"></a>touchgfx::Canvas::~Canvas()</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, canvas.o(i._ZN8touchgfx6CanvasD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Canvas::~Canvas()
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::~Outline()
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::RenderingBuffer::~RenderingBuffer()
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::drawCanvasWidget(const touchgfx::Rect&) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> canvas.o(.constdata__ZTVN8touchgfx6CanvasE)
</UL>
<P><STRONG><a name="[5c3]"></a>touchgfx::Canvas::~Canvas__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, canvas.o(i._ZN8touchgfx6CanvasD1Ev), UNUSED)

<P><STRONG><a name="[391]"></a>touchgfx::Circle::setCapPrecision(int)</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, circle.o(i._ZN8touchgfx6Circle15setCapPrecisionEi))
<BR><BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::setupScreen()
</UL>

<P><STRONG><a name="[3ad]"></a>touchgfx::Circle::Circle()</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, circle.o(i._ZN8touchgfx6CircleC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Circle::Circle() &rArr; touchgfx::CanvasWidget::CanvasWidget__sub_object() &rArr; touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::CanvasWidget__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::MainView()
</UL>

<P><STRONG><a name="[5c4]"></a>touchgfx::Circle::Circle__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, circle.o(i._ZN8touchgfx6CircleC1Ev), UNUSED)

<P><STRONG><a name="[230]"></a>touchgfx::Screen::setupScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen.o(i._ZN8touchgfx6Screen11setupScreenEv))
<BR>[Address Reference Count : 1]<UL><LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[408]"></a>touchgfx::Screen::bindTransition(touchgfx::Transition&)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, screen.o(i._ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE))
<BR><BR>[Called By]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)
</UL>

<P><STRONG><a name="[167]"></a>touchgfx::Screen::handleKeyEvent(unsigned char)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, aboutview.o(i._ZN8touchgfx6Screen14handleKeyEventEh))
<BR>[Address Reference Count : 9]<UL><LI> aboutview.o(.constdata__ZTV9AboutView)
<LI> screensaverview.o(.constdata__ZTV15ScreenSaverView)
<LI> videoview.o(.constdata__ZTV9VideoView)
<LI> mainview.o(.constdata__ZTV8MainView)
<LI> aboutviewbase.o(.constdata__ZTV13AboutViewBase)
<LI> mainviewbase.o(.constdata__ZTV12MainViewBase)
<LI> screensaverviewbase.o(.constdata__ZTV19ScreenSaverViewBase)
<LI> videoviewbase.o(.constdata__ZTV13VideoViewBase)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[162]"></a>touchgfx::Screen::tearDownScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, aboutviewbase.o(i._ZN8touchgfx6Screen14tearDownScreenEv))
<BR>[Address Reference Count : 5]<UL><LI> aboutviewbase.o(.constdata__ZTV13AboutViewBase)
<LI> mainviewbase.o(.constdata__ZTV12MainViewBase)
<LI> screensaverviewbase.o(.constdata__ZTV19ScreenSaverViewBase)
<LI> videoviewbase.o(.constdata__ZTV13VideoViewBase)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[161]"></a>touchgfx::Screen::afterTransition()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, aboutview.o(i._ZN8touchgfx6Screen15afterTransitionEv))
<BR>[Address Reference Count : 7]<UL><LI> aboutview.o(.constdata__ZTV9AboutView)
<LI> videoview.o(.constdata__ZTV9VideoView)
<LI> mainview.o(.constdata__ZTV8MainView)
<LI> aboutviewbase.o(.constdata__ZTV13AboutViewBase)
<LI> mainviewbase.o(.constdata__ZTV12MainViewBase)
<LI> videoviewbase.o(.constdata__ZTV13VideoViewBase)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[164]"></a>touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</STRONG> (Thumb, 184 bytes, Stack size 72 bytes, screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&) &rArr; touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ClickEvent::ClickEvent(touchgfx::ClickEvent::ClickEventType, short, short, short)
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::intersect(short, short) const
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::handleDragEvent(const touchgfx::DragEvent&)
</UL>
<BR>[Address Reference Count : 8]<UL><LI> aboutview.o(.constdata__ZTV9AboutView)
<LI> screensaverview.o(.constdata__ZTV15ScreenSaverView)
<LI> videoview.o(.constdata__ZTV9VideoView)
<LI> aboutviewbase.o(.constdata__ZTV13AboutViewBase)
<LI> mainviewbase.o(.constdata__ZTV12MainViewBase)
<LI> screensaverviewbase.o(.constdata__ZTV19ScreenSaverViewBase)
<LI> videoviewbase.o(.constdata__ZTV13VideoViewBase)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[166]"></a>touchgfx::Screen::handleTickEvent()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, aboutview.o(i._ZN8touchgfx6Screen15handleTickEventEv))
<BR>[Address Reference Count : 5]<UL><LI> aboutview.o(.constdata__ZTV9AboutView)
<LI> aboutviewbase.o(.constdata__ZTV13AboutViewBase)
<LI> mainviewbase.o(.constdata__ZTV12MainViewBase)
<LI> videoviewbase.o(.constdata__ZTV13VideoViewBase)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[163]"></a>touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</STRONG> (Thumb, 420 bytes, Stack size 144 bytes, screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&) &rArr; touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ClickEvent::ClickEvent(touchgfx::ClickEvent::ClickEventType, short, short, short)
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::intersect(short, short) const
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VideoView::handleClickEvent(const touchgfx::ClickEvent&)
</UL>
<BR>[Address Reference Count : 8]<UL><LI> aboutview.o(.constdata__ZTV9AboutView)
<LI> screensaverview.o(.constdata__ZTV15ScreenSaverView)
<LI> mainview.o(.constdata__ZTV8MainView)
<LI> aboutviewbase.o(.constdata__ZTV13AboutViewBase)
<LI> mainviewbase.o(.constdata__ZTV12MainViewBase)
<LI> screensaverviewbase.o(.constdata__ZTV19ScreenSaverViewBase)
<LI> videoviewbase.o(.constdata__ZTV13VideoViewBase)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[165]"></a>touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&) &rArr; touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Address Reference Count : 9]<UL><LI> aboutview.o(.constdata__ZTV9AboutView)
<LI> screensaverview.o(.constdata__ZTV15ScreenSaverView)
<LI> videoview.o(.constdata__ZTV9VideoView)
<LI> mainview.o(.constdata__ZTV8MainView)
<LI> aboutviewbase.o(.constdata__ZTV13AboutViewBase)
<LI> mainviewbase.o(.constdata__ZTV12MainViewBase)
<LI> screensaverviewbase.o(.constdata__ZTV19ScreenSaverViewBase)
<LI> videoviewbase.o(.constdata__ZTV13VideoViewBase)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[355]"></a>touchgfx::Screen::add(touchgfx::Drawable&)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mainview.o(i._ZN8touchgfx6Screen3addERNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::Screen::add(touchgfx::Drawable&) &rArr; touchgfx::Container::add(touchgfx::Drawable&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
</UL>
<BR>[Called By]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AboutViewBase::AboutViewBase()
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VideoViewBase::VideoViewBase()
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainViewBase::MainViewBase()
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::setupScreen()
</UL>

<P><STRONG><a name="[15f]"></a>touchgfx::Screen::draw(touchgfx::Rect&)</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = touchgfx::Screen::draw(touchgfx::Rect&) &rArr; touchgfx::Screen::startSMOC(const touchgfx::Rect&) &rArr; touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*) &rArr;  touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::draw(const touchgfx::Rect&) const
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::startSMOC(const touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 9]<UL><LI> aboutview.o(.constdata__ZTV9AboutView)
<LI> screensaverview.o(.constdata__ZTV15ScreenSaverView)
<LI> videoview.o(.constdata__ZTV9VideoView)
<LI> mainview.o(.constdata__ZTV8MainView)
<LI> aboutviewbase.o(.constdata__ZTV13AboutViewBase)
<LI> mainviewbase.o(.constdata__ZTV12MainViewBase)
<LI> screensaverviewbase.o(.constdata__ZTV19ScreenSaverViewBase)
<LI> videoviewbase.o(.constdata__ZTV13VideoViewBase)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[3cf]"></a>touchgfx::Screen::draw()</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, screen.o(i._ZN8touchgfx6Screen4drawEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Screen::draw() &rArr; touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::Application()
</UL>

<P><STRONG><a name="[449]"></a>touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)</STRONG> (Thumb, 540 bytes, Stack size 72 bytes, screen.o(i._ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + In Cycle
<LI>Call Chain = touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*) &rArr;  touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::bottom() const
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::right() const
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect()
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::intersect(const touchgfx::Rect&) const
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::isEmpty() const
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getCachedVisibleRect()
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getCachedAbsY()
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getCachedAbsX()
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::startSMOC(const touchgfx::Rect&)
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[448]"></a>touchgfx::Screen::startSMOC(const touchgfx::Rect&)</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, screen.o(i._ZN8touchgfx6Screen9startSMOCERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = touchgfx::Screen::startSMOC(const touchgfx::Rect&) &rArr; touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*) &rArr;  touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw(touchgfx::Rect&)
</UL>

<P><STRONG><a name="[34b]"></a>touchgfx::Screen::Screen()</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, screen.o(i._ZN8touchgfx6ScreenC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::Screen::Screen() &rArr; touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect()
</UL>
<BR>[Called By]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AboutViewBase::AboutViewBase()
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScreenSaverViewBase::ScreenSaverViewBase()
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VideoViewBase::VideoViewBase()
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainViewBase::MainViewBase()
</UL>

<P><STRONG><a name="[5c5]"></a>touchgfx::Screen::Screen__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, screen.o(i._ZN8touchgfx6ScreenC1Ev), UNUSED)

<P><STRONG><a name="[22f]"></a>touchgfx::Screen::~Screen()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, screen.o(i._ZN8touchgfx6ScreenD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[5c6]"></a>touchgfx::Screen::~Screen__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, screen.o(i._ZN8touchgfx6ScreenD1Ev), UNUSED)

<P><STRONG><a name="[19b]"></a>touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, mainview.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE))
<BR>[Address Reference Count : 21]<UL><LI> touchforwarder.o(.constdata__ZTV14TouchForwarder)
<LI> particleeffect.o(.constdata__ZTV14ParticleEffect)
<LI> particleeffect.o(.constdata__ZTV8Particle)
<LI> mainview.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> mainview.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
<LI> mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_13AnimatedImageEEE)
<LI> mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6CircleEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_6ButtonEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
<LI> mjpegwidget.o(.constdata__ZTVN8touchgfx11MJPEGWidgetE)
<LI> animatedimage.o(.constdata__ZTVN8touchgfx13AnimatedImageE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> circle.o(.constdata__ZTVN8touchgfx6CircleE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> pixeldatawidget.o(.constdata__ZTVN8touchgfx15PixelDataWidgetE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[359]"></a>touchgfx::Widget::Widget__sub_object()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, mainview.o(i._ZN8touchgfx6WidgetC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::Widget::Widget__sub_object() &rArr; touchgfx::Drawable::Drawable__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::Drawable__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AboutViewBase::AboutViewBase()
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScreenSaverViewBase::ScreenSaverViewBase()
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::Box()
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VideoViewBase::VideoViewBase()
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Particle::Particle()
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParticleEffect::ParticleEffect()
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::Image(const touchgfx::Bitmap&)
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::MainView()
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea()
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::Button()
</UL>

<P><STRONG><a name="[486]"></a>touchgfx::memset(void*, unsigned char, unsigned)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, utils.o(i._ZN8touchgfx6memsetEPvhj))
<BR><BR>[Called By]<UL><LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Scanline::addSpan(int, int, unsigned, unsigned)
</UL>

<P><STRONG><a name="[44d]"></a>touchgfx::muldiv(int, int, int, int&)</STRONG> (Thumb, 112 bytes, Stack size 20 bytes, utils.o(i._ZN8touchgfx6muldivEiiiRi))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::muldiv(int, int, int, int&)
</UL>
<BR>[Calls]<UL><LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::clz(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator *(const touchgfx::CWRUtil::Q15&) const
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5)
</UL>

<P><STRONG><a name="[44f]"></a>touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5)</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, circle.o(i._ZN8touchgfx7CWRUtil4sineENS0_2Q5E))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::muldiv(int, int, int, int&)
</UL>
<BR>[Calls]<UL><LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldiv(int, int, int, int&)
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1 touchgfx::CWRUtil::Q5::to&lang;int&rang;() const
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::sine(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::drawCanvasWidget(const touchgfx::Rect&) const
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::moveToAR2(touchgfx::Canvas&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&) const
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::calculateMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::updateMinMaxAR(const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::lineToXYAR2(touchgfx::Canvas&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&) const
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5)
</UL>

<P><STRONG><a name="[451]"></a>touchgfx::CWRUtil::sine(int)</STRONG> (Thumb, 86 bytes, Stack size 12 bytes, circle.o(i._ZN8touchgfx7CWRUtil4sineEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::CWRUtil::sine(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::drawCanvasWidget(const touchgfx::Rect&) const
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5)
</UL>

<P><STRONG><a name="[452]"></a>touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5)</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, circle.o(i._ZN8touchgfx7CWRUtil6cosineENS0_2Q5E))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::muldiv(int, int, int, int&)
</UL>
<BR>[Calls]<UL><LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator -(const touchgfx::CWRUtil::Q5&) const
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5)
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::drawCanvasWidget(const touchgfx::Rect&) const
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::moveToAR2(touchgfx::Canvas&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&) const
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::calculateMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::updateMinMaxAR(const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::lineToXYAR2(touchgfx::Canvas&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&) const
</UL>

<P><STRONG><a name="[45a]"></a>touchgfx::Outline::qsortCells(touchgfx::Cell*, unsigned)</STRONG> (Thumb, 368 bytes, Stack size 340 bytes, outline.o(i._ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = touchgfx::Outline::qsortCells(touchgfx::Cell*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::sortCells()
</UL>

<P><STRONG><a name="[453]"></a>touchgfx::Outline::renderLine(int, int, int, int)</STRONG> (Thumb, 2942 bytes, Stack size 136 bytes, outline.o(i._ZN8touchgfx7Outline10renderLineEiiii))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Cell::set(int, int, int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Cell::addCover(int, int)
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Cell::set(int, int, int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::lineTo(int, int)
</UL>

<P><STRONG><a name="[444]"></a>touchgfx::Outline::reset()</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, outline.o(i._ZN8touchgfx7Outline5resetEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Outline::reset() &rArr; touchgfx::Cell::set(int, int, int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::getOutlineBufferSize()
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::getOutlineBuffer()
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Cell::set(int, int, int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(const touchgfx::CanvasWidget*, const touchgfx::Rect&)
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::Outline()
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::moveTo(int, int)
</UL>

<P><STRONG><a name="[3be]"></a>touchgfx::Outline::lineTo(int, int)</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, outline.o(i._ZN8touchgfx7Outline6lineToEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = touchgfx::Outline::lineTo(int, int) &rArr; touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Cell::set(int, int, int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::renderLine(int, int, int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::getCells()
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::moveTo(int, int)
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rasterizer::lineTo(int, int)
</UL>

<P><STRONG><a name="[3c0]"></a>touchgfx::Outline::moveTo(int, int)</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, outline.o(i._ZN8touchgfx7Outline6moveToEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = touchgfx::Outline::moveTo(int, int) &rArr; touchgfx::Outline::lineTo(int, int) &rArr; touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Cell::set(int, int, int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Cell::set(int, int, int, int)
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::lineTo(int, int)
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::reset()
</UL>
<BR>[Called By]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rasterizer::moveTo(int, int)
</UL>

<P><STRONG><a name="[458]"></a>touchgfx::Outline::getCells()</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, outline.o(i._ZN8touchgfx7Outline8getCellsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = touchgfx::Outline::getCells() &rArr; touchgfx::Outline::sortCells() &rArr; touchgfx::Outline::qsortCells(touchgfx::Cell*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::sortCells()
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::lineTo(int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool touchgfx::Rasterizer::render&lang;touchgfx::Renderer&rang;(T1&)
</UL>

<P><STRONG><a name="[459]"></a>touchgfx::Outline::sortCells()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, outline.o(i._ZN8touchgfx7Outline9sortCellsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = touchgfx::Outline::sortCells() &rArr; touchgfx::Outline::qsortCells(touchgfx::Cell*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::qsortCells(touchgfx::Cell*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::getCells()
</UL>

<P><STRONG><a name="[441]"></a>touchgfx::Outline::Outline()</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, outline.o(i._ZN8touchgfx7OutlineC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Outline::Outline() &rArr; touchgfx::Outline::reset() &rArr; touchgfx::Cell::set(int, int, int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::reset()
</UL>
<BR>[Called By]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(const touchgfx::CanvasWidget*, const touchgfx::Rect&)
</UL>

<P><STRONG><a name="[5c7]"></a>touchgfx::Outline::Outline__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, outline.o(i._ZN8touchgfx7OutlineC1Ev), UNUSED)

<P><STRONG><a name="[231]"></a>touchgfx::Outline::~Outline()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, outline.o(i._ZN8touchgfx7OutlineD1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::~Canvas()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> outline.o(.constdata__ZTVN8touchgfx7OutlineE)
</UL>
<P><STRONG><a name="[5c8]"></a>touchgfx::Outline::~Outline__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, outline.o(i._ZN8touchgfx7OutlineD1Ev), UNUSED)

<P><STRONG><a name="[3a3]"></a>touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, unicode.o(i._ZN8touchgfx7Unicode7strncpyEPtPKct))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::updateProgramTexts()
</UL>

<P><STRONG><a name="[45b]"></a>touchgfx::hw_init()</STRONG> (Thumb, 412 bytes, Stack size 104 bytes, boardconfiguration.o(i._ZN8touchgfx7hw_initEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = touchgfx::hw_init() &rArr; BSP_QSPI_Init &rArr; QSPI_DummyCyclesCfg &rArr; QSPI_WriteEnable &rArr; HAL_QSPI_Command &rArr; QSPI_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::init()
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_DisableIRQ
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MPU_ConfigRegion
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ConfigLayer
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_Init
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_QSPI_Init
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_QSPI_EnableMemoryMappedMode
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_Init
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_GetYSize
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_GetXSize
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_DisplayOn
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[383]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::operator =(const touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;&)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSERKS2_))
<BR><BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoScreenSaverScreenNoTransition()
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoMainScreenNoTransition()
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoVideoScreenNoTransition()
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoAboutScreenNoTransition()
</UL>

<P><STRONG><a name="[17d]"></a>touchgfx::Drawable::setPosition(short, short, short, short)</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, clickablecontainer.o(i._ZN8touchgfx8Drawable11setPositionEssss))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Drawable::setPosition(short, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AboutViewBase::AboutViewBase()
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VideoViewBase::VideoViewBase()
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainViewBase::MainViewBase()
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::setupScreen()
</UL>
<BR>[Address Reference Count : 27]<UL><LI> sparsecontainerlist.o(.constdata__ZTV19SparseContainerList)
<LI> touchforwarder.o(.constdata__ZTV14TouchForwarder)
<LI> clickablecontainer.o(.constdata__ZTVN8touchgfx18ClickableContainerE)
<LI> particleeffect.o(.constdata__ZTV14ParticleEffect)
<LI> scrollingmenu.o(.constdata__ZTV13ScrollingMenu)
<LI> particleeffect.o(.constdata__ZTV8Particle)
<LI> mainview.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> mainview.o(.constdata__ZTV14ImageContainer)
<LI> mainview.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
<LI> mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_13AnimatedImageEEE)
<LI> mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6CircleEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_6ButtonEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
<LI> mjpegwidget.o(.constdata__ZTVN8touchgfx11MJPEGWidgetE)
<LI> animatedimage.o(.constdata__ZTVN8touchgfx13AnimatedImageE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> circle.o(.constdata__ZTVN8touchgfx6CircleE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> pixeldatawidget.o(.constdata__ZTVN8touchgfx15PixelDataWidgetE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[187]"></a>touchgfx::Drawable::moveRelative(short, short)</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Drawable::moveRelative(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
</UL>
<BR>[Address Reference Count : 27]<UL><LI> sparsecontainerlist.o(.constdata__ZTV19SparseContainerList)
<LI> touchforwarder.o(.constdata__ZTV14TouchForwarder)
<LI> clickablecontainer.o(.constdata__ZTVN8touchgfx18ClickableContainerE)
<LI> particleeffect.o(.constdata__ZTV14ParticleEffect)
<LI> scrollingmenu.o(.constdata__ZTV13ScrollingMenu)
<LI> particleeffect.o(.constdata__ZTV8Particle)
<LI> mainview.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> mainview.o(.constdata__ZTV14ImageContainer)
<LI> mainview.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
<LI> mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_13AnimatedImageEEE)
<LI> mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6CircleEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_6ButtonEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
<LI> mjpegwidget.o(.constdata__ZTVN8touchgfx11MJPEGWidgetE)
<LI> animatedimage.o(.constdata__ZTVN8touchgfx13AnimatedImageE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> circle.o(.constdata__ZTVN8touchgfx6CircleE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> pixeldatawidget.o(.constdata__ZTVN8touchgfx15PixelDataWidgetE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[44c]"></a>touchgfx::Drawable::getCachedAbsX()</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, screen.o(i._ZN8touchgfx8Drawable13getCachedAbsXEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::Drawable::getCachedAbsX() &rArr; touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Called By]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[44b]"></a>touchgfx::Drawable::getCachedAbsY()</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, screen.o(i._ZN8touchgfx8Drawable13getCachedAbsYEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::Drawable::getCachedAbsY() &rArr; touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Called By]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[19f]"></a>touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, mainview.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_))
<BR>[Address Reference Count : 22]<UL><LI> touchforwarder.o(.constdata__ZTV14TouchForwarder)
<LI> particleeffect.o(.constdata__ZTV14ParticleEffect)
<LI> particleeffect.o(.constdata__ZTV8Particle)
<LI> mainview.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> mainview.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
<LI> mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_13AnimatedImageEEE)
<LI> mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6CircleEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_6ButtonEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
<LI> mjpegwidget.o(.constdata__ZTVN8touchgfx11MJPEGWidgetE)
<LI> animatedimage.o(.constdata__ZTVN8touchgfx13AnimatedImageE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> circle.o(.constdata__ZTVN8touchgfx6CircleE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> pixeldatawidget.o(.constdata__ZTVN8touchgfx15PixelDataWidgetE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[196]"></a>touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mainview.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE))
<BR>[Address Reference Count : 23]<UL><LI> sparsecontainerlist.o(.constdata__ZTV19SparseContainerList)
<LI> particleeffect.o(.constdata__ZTV8Particle)
<LI> mainview.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> mainview.o(.constdata__ZTV14ImageContainer)
<LI> mainview.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
<LI> mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_13AnimatedImageEEE)
<LI> mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6CircleEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_6ButtonEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
<LI> mjpegwidget.o(.constdata__ZTVN8touchgfx11MJPEGWidgetE)
<LI> animatedimage.o(.constdata__ZTVN8touchgfx13AnimatedImageE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> circle.o(.constdata__ZTVN8touchgfx6CircleE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> pixeldatawidget.o(.constdata__ZTVN8touchgfx15PixelDataWidgetE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[197]"></a>touchgfx::Drawable::handleTickEvent()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, clickablecontainer.o(i._ZN8touchgfx8Drawable15handleTickEventEv))
<BR>[Address Reference Count : 16]<UL><LI> sparsecontainerlist.o(.constdata__ZTV19SparseContainerList)
<LI> touchforwarder.o(.constdata__ZTV14TouchForwarder)
<LI> clickablecontainer.o(.constdata__ZTVN8touchgfx18ClickableContainerE)
<LI> particleeffect.o(.constdata__ZTV8Particle)
<LI> mainview.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> mainview.o(.constdata__ZTV14ImageContainer)
<LI> mjpegwidget.o(.constdata__ZTVN8touchgfx11MJPEGWidgetE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> circle.o(.constdata__ZTVN8touchgfx6CircleE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> pixeldatawidget.o(.constdata__ZTVN8touchgfx15PixelDataWidgetE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[194]"></a>touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mainview.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE))
<BR>[Address Reference Count : 20]<UL><LI> sparsecontainerlist.o(.constdata__ZTV19SparseContainerList)
<LI> particleeffect.o(.constdata__ZTV8Particle)
<LI> mainview.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> mainview.o(.constdata__ZTV14ImageContainer)
<LI> mainview.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
<LI> mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_13AnimatedImageEEE)
<LI> mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6CircleEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> mjpegwidget.o(.constdata__ZTVN8touchgfx11MJPEGWidgetE)
<LI> animatedimage.o(.constdata__ZTVN8touchgfx13AnimatedImageE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> circle.o(.constdata__ZTVN8touchgfx6CircleE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> pixeldatawidget.o(.constdata__ZTVN8touchgfx15PixelDataWidgetE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[195]"></a>touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mainview.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE))
<BR>[Address Reference Count : 24]<UL><LI> sparsecontainerlist.o(.constdata__ZTV19SparseContainerList)
<LI> particleeffect.o(.constdata__ZTV14ParticleEffect)
<LI> particleeffect.o(.constdata__ZTV8Particle)
<LI> mainview.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> mainview.o(.constdata__ZTV14ImageContainer)
<LI> mainview.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
<LI> mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_13AnimatedImageEEE)
<LI> mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6CircleEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_6ButtonEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
<LI> mjpegwidget.o(.constdata__ZTVN8touchgfx11MJPEGWidgetE)
<LI> animatedimage.o(.constdata__ZTVN8touchgfx13AnimatedImageE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> circle.o(.constdata__ZTVN8touchgfx6CircleE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> pixeldatawidget.o(.constdata__ZTVN8touchgfx15PixelDataWidgetE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[44a]"></a>touchgfx::Drawable::getCachedVisibleRect()</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, screen.o(i._ZN8touchgfx8Drawable20getCachedVisibleRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Drawable::getCachedVisibleRect() &rArr; touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[17e]"></a>touchgfx::Drawable::setX(short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, clickablecontainer.o(i._ZN8touchgfx8Drawable4setXEs))
<BR>[Address Reference Count : 27]<UL><LI> sparsecontainerlist.o(.constdata__ZTV19SparseContainerList)
<LI> touchforwarder.o(.constdata__ZTV14TouchForwarder)
<LI> clickablecontainer.o(.constdata__ZTVN8touchgfx18ClickableContainerE)
<LI> particleeffect.o(.constdata__ZTV14ParticleEffect)
<LI> scrollingmenu.o(.constdata__ZTV13ScrollingMenu)
<LI> particleeffect.o(.constdata__ZTV8Particle)
<LI> mainview.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> mainview.o(.constdata__ZTV14ImageContainer)
<LI> mainview.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
<LI> mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_13AnimatedImageEEE)
<LI> mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6CircleEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_6ButtonEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
<LI> mjpegwidget.o(.constdata__ZTVN8touchgfx11MJPEGWidgetE)
<LI> animatedimage.o(.constdata__ZTVN8touchgfx13AnimatedImageE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> circle.o(.constdata__ZTVN8touchgfx6CircleE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> pixeldatawidget.o(.constdata__ZTVN8touchgfx15PixelDataWidgetE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[17f]"></a>touchgfx::Drawable::setY(short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, clickablecontainer.o(i._ZN8touchgfx8Drawable4setYEs))
<BR>[Address Reference Count : 27]<UL><LI> sparsecontainerlist.o(.constdata__ZTV19SparseContainerList)
<LI> touchforwarder.o(.constdata__ZTV14TouchForwarder)
<LI> clickablecontainer.o(.constdata__ZTVN8touchgfx18ClickableContainerE)
<LI> particleeffect.o(.constdata__ZTV14ParticleEffect)
<LI> scrollingmenu.o(.constdata__ZTV13ScrollingMenu)
<LI> particleeffect.o(.constdata__ZTV8Particle)
<LI> mainview.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> mainview.o(.constdata__ZTV14ImageContainer)
<LI> mainview.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
<LI> mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_13AnimatedImageEEE)
<LI> mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6CircleEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_6ButtonEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
<LI> mjpegwidget.o(.constdata__ZTVN8touchgfx11MJPEGWidgetE)
<LI> animatedimage.o(.constdata__ZTVN8touchgfx13AnimatedImageE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> circle.o(.constdata__ZTVN8touchgfx6CircleE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> pixeldatawidget.o(.constdata__ZTVN8touchgfx15PixelDataWidgetE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[180]"></a>touchgfx::Drawable::setXY(short, short)</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, aboutview.o(i._ZN8touchgfx8Drawable5setXYEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AboutViewBase::AboutViewBase()
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AboutView::setupScreen()
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScreenSaverViewBase::ScreenSaverViewBase()
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VideoViewBase::VideoViewBase()
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::setup(bool, bool, short, short, short, short, short, short, short, touchgfx::GenericCallback&lang;int, touchgfx::Container**, void&rang;&, touchgfx::GenericCallback&lang;int, int, void&rang;&)
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainViewBase::MainViewBase()
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::gotoStarting()
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::setupScreen()
</UL>
<BR>[Address Reference Count : 27]<UL><LI> sparsecontainerlist.o(.constdata__ZTV19SparseContainerList)
<LI> touchforwarder.o(.constdata__ZTV14TouchForwarder)
<LI> clickablecontainer.o(.constdata__ZTVN8touchgfx18ClickableContainerE)
<LI> particleeffect.o(.constdata__ZTV14ParticleEffect)
<LI> scrollingmenu.o(.constdata__ZTV13ScrollingMenu)
<LI> particleeffect.o(.constdata__ZTV8Particle)
<LI> mainview.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> mainview.o(.constdata__ZTV14ImageContainer)
<LI> mainview.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
<LI> mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_13AnimatedImageEEE)
<LI> mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6CircleEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_6ButtonEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
<LI> mjpegwidget.o(.constdata__ZTVN8touchgfx11MJPEGWidgetE)
<LI> animatedimage.o(.constdata__ZTVN8touchgfx13AnimatedImageE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> circle.o(.constdata__ZTVN8touchgfx6CircleE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> pixeldatawidget.o(.constdata__ZTVN8touchgfx15PixelDataWidgetE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[188]"></a>touchgfx::Drawable::moveTo(short, short)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, abstractbutton.o(i._ZN8touchgfx8Drawable6moveToEss))
<BR><BR>[Called By]<UL><LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AboutView::setStateTGFX()
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MoveAnimator&lang;touchgfx::Button&rang;::nextMoveAnimationStep()
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MoveAnimator&lang;touchgfx::Image&rang;::nextMoveAnimationStep()
</UL>
<BR>[Address Reference Count : 27]<UL><LI> sparsecontainerlist.o(.constdata__ZTV19SparseContainerList)
<LI> touchforwarder.o(.constdata__ZTV14TouchForwarder)
<LI> clickablecontainer.o(.constdata__ZTVN8touchgfx18ClickableContainerE)
<LI> particleeffect.o(.constdata__ZTV14ParticleEffect)
<LI> scrollingmenu.o(.constdata__ZTV13ScrollingMenu)
<LI> particleeffect.o(.constdata__ZTV8Particle)
<LI> mainview.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> mainview.o(.constdata__ZTV14ImageContainer)
<LI> mainview.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
<LI> mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_13AnimatedImageEEE)
<LI> mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6CircleEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_6ButtonEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
<LI> mjpegwidget.o(.constdata__ZTVN8touchgfx11MJPEGWidgetE)
<LI> animatedimage.o(.constdata__ZTVN8touchgfx13AnimatedImageE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> circle.o(.constdata__ZTVN8touchgfx6CircleE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> pixeldatawidget.o(.constdata__ZTVN8touchgfx15PixelDataWidgetE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[181]"></a>touchgfx::Drawable::setWidth(short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, clickablecontainer.o(i._ZN8touchgfx8Drawable8setWidthEs))
<BR>[Address Reference Count : 27]<UL><LI> sparsecontainerlist.o(.constdata__ZTV19SparseContainerList)
<LI> touchforwarder.o(.constdata__ZTV14TouchForwarder)
<LI> clickablecontainer.o(.constdata__ZTVN8touchgfx18ClickableContainerE)
<LI> particleeffect.o(.constdata__ZTV14ParticleEffect)
<LI> scrollingmenu.o(.constdata__ZTV13ScrollingMenu)
<LI> particleeffect.o(.constdata__ZTV8Particle)
<LI> mainview.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> mainview.o(.constdata__ZTV14ImageContainer)
<LI> mainview.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
<LI> mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_13AnimatedImageEEE)
<LI> mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6CircleEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_6ButtonEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
<LI> mjpegwidget.o(.constdata__ZTVN8touchgfx11MJPEGWidgetE)
<LI> animatedimage.o(.constdata__ZTVN8touchgfx13AnimatedImageE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> circle.o(.constdata__ZTVN8touchgfx6CircleE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> pixeldatawidget.o(.constdata__ZTVN8touchgfx15PixelDataWidgetE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[182]"></a>touchgfx::Drawable::setHeight(short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, clickablecontainer.o(i._ZN8touchgfx8Drawable9setHeightEs))
<BR>[Address Reference Count : 27]<UL><LI> sparsecontainerlist.o(.constdata__ZTV19SparseContainerList)
<LI> touchforwarder.o(.constdata__ZTV14TouchForwarder)
<LI> clickablecontainer.o(.constdata__ZTVN8touchgfx18ClickableContainerE)
<LI> particleeffect.o(.constdata__ZTV14ParticleEffect)
<LI> scrollingmenu.o(.constdata__ZTV13ScrollingMenu)
<LI> particleeffect.o(.constdata__ZTV8Particle)
<LI> mainview.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> mainview.o(.constdata__ZTV14ImageContainer)
<LI> mainview.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
<LI> mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_13AnimatedImageEEE)
<LI> mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6CircleEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_6ButtonEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
<LI> mjpegwidget.o(.constdata__ZTVN8touchgfx11MJPEGWidgetE)
<LI> animatedimage.o(.constdata__ZTVN8touchgfx13AnimatedImageE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> circle.o(.constdata__ZTVN8touchgfx6CircleE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> pixeldatawidget.o(.constdata__ZTVN8touchgfx15PixelDataWidgetE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[36f]"></a>touchgfx::Drawable::Drawable__sub_object()</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, mainview.o(i._ZN8touchgfx8DrawableC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::Drawable::Drawable__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageContainer::ImageContainer()
</UL>

<P><STRONG><a name="[41d]"></a>touchgfx::Gestures::registerDragEvent(unsigned short, unsigned short, unsigned short, unsigned short)</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, gestures.o(i._ZN8touchgfx8Gestures17registerDragEventEtttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::Gestures::registerDragEvent(unsigned short, unsigned short, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1 touchgfx::abs&lang;short&rang;(T1)
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::touch(int, int)
</UL>

<P><STRONG><a name="[41e]"></a>touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short)</STRONG> (Thumb, 142 bytes, Stack size 48 bytes, gestures.o(i._ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short) &rArr; touchgfx::GestureEvent::GestureEvent(touchgfx::GestureEvent::GestureType, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GestureEvent::GestureEvent(touchgfx::GestureEvent::GestureType, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::noTouch()
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::touch(int, int)
</UL>

<P><STRONG><a name="[41a]"></a>touchgfx::Gestures::registerEventListener(touchgfx::UIEventListener&)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gestures.o(i._ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE))
<BR><BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::registerEventListener(touchgfx::UIEventListener&)
</UL>

<P><STRONG><a name="[41b]"></a>touchgfx::Gestures::tick()</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gestures.o(i._ZN8touchgfx8Gestures4tickEv))
<BR><BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::tick()
</UL>

<P><STRONG><a name="[460]"></a>touchgfx::LCD16bpp::blitCopyL8(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::blitCopyL8(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char) &rArr; touchgfx::LCD16bpp::blitCopyL8_RGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char) &rArr; touchgfx::HAL::blitCopy(const unsigned short*, const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat) &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const &rArr; touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[464]"></a>touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 428 bytes, Stack size 72 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKjRKNS_4RectES5_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&, const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopy(const unsigned char*, touchgfx::Bitmap::BitmapFormat, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[461]"></a>touchgfx::LCD16bpp::blitCopyL8_RGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 488 bytes, Stack size 88 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::blitCopyL8_RGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char) &rArr; touchgfx::HAL::blitCopy(const unsigned short*, const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat) &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const &rArr; touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopy(const unsigned short*, const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat)
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[463]"></a>touchgfx::LCD16bpp::blitCopyL8_RGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 442 bytes, Stack size 104 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::blitCopyL8_RGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char) &rArr; touchgfx::HAL::blitCopy(const unsigned short*, const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat) &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const &rArr; touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopy(const unsigned short*, const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat)
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[247]"></a>touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)</STRONG> (Thumb, 456 bytes, Stack size 64 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb))
<BR><BR>[Stack]<UL><LI>Max Depth = 360 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool) &rArr; touchgfx::LCD16bpp::blitCopyL8(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char) &rArr; touchgfx::LCD16bpp::blitCopyL8_RGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char) &rArr; touchgfx::HAL::blitCopy(const unsigned short*, const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat) &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const &rArr; touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::bottom() const
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::right() const
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getFormat() const
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getData() const
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::hasTransparentPixels() const
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getSolidRect() const
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getExtraData() const
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::isEmpty() const
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyAlphaPerPixel(const unsigned short*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[462]"></a>touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 476 bytes, Stack size 88 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char) &rArr; touchgfx::HAL::blitCopy(const unsigned short*, const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat) &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const &rArr; touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopy(const unsigned short*, const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat)
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[469]"></a>touchgfx::LCD16bpp::blitCopyAlphaPerPixel(const unsigned short*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 562 bytes, Stack size 64 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::LCD16bpp::blitCopyAlphaPerPixel(const unsigned short*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&, const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[46a]"></a>touchgfx::LCD16bpp::enableTextureMapperA4()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperA4() &rArr; touchgfx::LCD16bpp::enableTextureMapperA4_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4_BilinearInterpolation()
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4_NearestNeighbor()
</UL>
<BR>[Called By]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[38a]"></a>touchgfx::LCD16bpp::enableTextureMapperAll()</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperAll() &rArr; touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888() &rArr; touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888()
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888()
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565()
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888()
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4()
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)
</UL>

<P><STRONG><a name="[471]"></a>touchgfx::LCD16bpp::enableTextureMapperRGB565()</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_BilinearInterpolation()
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_BilinearInterpolation()
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_NearestNeighbor()
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_NearestNeighbor()
</UL>

<P><STRONG><a name="[46d]"></a>touchgfx::LCD16bpp::enableTextureMapperARGB8888()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperARGB8888() &rArr; touchgfx::LCD16bpp::enableTextureMapperARGB8888_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888_BilinearInterpolation()
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888_NearestNeighbor()
</UL>
<BR>[Called By]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[46f]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_RGB565()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperL8_RGB565() &rArr; touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_BilinearInterpolation()
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_NearestNeighbor()
</UL>
<BR>[Called By]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[470]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_RGB888()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperL8_RGB888() &rArr; touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_BilinearInterpolation()
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_NearestNeighbor()
</UL>
<BR>[Called By]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[46e]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888() &rArr; touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_BilinearInterpolation()
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_NearestNeighbor()
</UL>
<BR>[Called By]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[93]"></a>touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::~TextureMapper_A4_NearestNeighbor_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[5c9]"></a>touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::~TextureMapper_A4_NearestNeighbor_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev), UNUSED)

<P><STRONG><a name="[94]"></a>touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::~TextureMapper_A4_NearestNeighbor_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[5ca]"></a>touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::~TextureMapper_A4_NearestNeighbor_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[46c]"></a>touchgfx::LCD16bpp::enableTextureMapperA4_NearestNeighbor()</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperA4_NearestNeighbor() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4()
</UL>

<P><STRONG><a name="[95]"></a>touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::~TextureMapper_A4_BilinearInterpolation_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[5cb]"></a>touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::~TextureMapper_A4_BilinearInterpolation_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev), UNUSED)

<P><STRONG><a name="[96]"></a>touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::~TextureMapper_A4_BilinearInterpolation_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[5cc]"></a>touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::~TextureMapper_A4_BilinearInterpolation_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[46b]"></a>touchgfx::LCD16bpp::enableTextureMapperA4_BilinearInterpolation()</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperA4_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4()
</UL>

<P><STRONG><a name="[477]"></a>touchgfx::LCD16bpp::enableTextureMapperARGB8888_NearestNeighbor()</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperARGB8888_NearestNeighbor() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888()
</UL>

<P><STRONG><a name="[479]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_NearestNeighbor()</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_NearestNeighbor() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565()
</UL>

<P><STRONG><a name="[47b]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_NearestNeighbor()</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_NearestNeighbor() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888()
</UL>

<P><STRONG><a name="[9f]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_RGB565_Opaque_NearestNeighbor_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[5cd]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_RGB565_Opaque_NearestNeighbor_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev), UNUSED)

<P><STRONG><a name="[47d]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_NearestNeighbor()</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_NearestNeighbor() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888()
</UL>

<P><STRONG><a name="[a0]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[5ce]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[473]"></a>touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_NearestNeighbor()</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565()
</UL>

<P><STRONG><a name="[99]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[5cf]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev), UNUSED)

<P><STRONG><a name="[9b]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[5d0]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev), UNUSED)

<P><STRONG><a name="[a7]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[5d1]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev), UNUSED)

<P><STRONG><a name="[476]"></a>touchgfx::LCD16bpp::enableTextureMapperARGB8888_BilinearInterpolation()</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperARGB8888_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888()
</UL>

<P><STRONG><a name="[478]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_BilinearInterpolation()</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565()
</UL>

<P><STRONG><a name="[47a]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_BilinearInterpolation()</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888()
</UL>

<P><STRONG><a name="[97]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[5d2]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev), UNUSED)

<P><STRONG><a name="[9a]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[5d3]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[9c]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[5d4]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[a8]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[5d5]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[475]"></a>touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_NearestNeighbor()</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565()
</UL>

<P><STRONG><a name="[ab]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[5d6]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev), UNUSED)

<P><STRONG><a name="[47c]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_BilinearInterpolation()</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888()
</UL>

<P><STRONG><a name="[98]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[5d7]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[9d]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[5d8]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev), UNUSED)

<P><STRONG><a name="[ac]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[5d9]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[472]"></a>touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_BilinearInterpolation()</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565()
</UL>

<P><STRONG><a name="[a3]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[5da]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev), UNUSED)

<P><STRONG><a name="[a5]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[5db]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev), UNUSED)

<P><STRONG><a name="[ad]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[5dc]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev), UNUSED)

<P><STRONG><a name="[9e]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[5dd]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[a1]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[5de]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev), UNUSED)

<P><STRONG><a name="[a4]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[5df]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[a6]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[5e0]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[ae]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[5e1]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[474]"></a>touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_BilinearInterpolation()</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565()
</UL>

<P><STRONG><a name="[a2]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[5e2]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[a9]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[5e3]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev), UNUSED)

<P><STRONG><a name="[aa]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[5e4]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[249]"></a>touchgfx::LCD16bpp::blitCopy(const unsigned char*, touchgfx::Bitmap::BitmapFormat, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool)</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::blitCopy(const unsigned char*, touchgfx::Bitmap::BitmapFormat, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool) &rArr; touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&, const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[248]"></a>touchgfx::LCD16bpp::blitCopy(const unsigned short*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool)</STRONG> (Thumb, 462 bytes, Stack size 72 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = touchgfx::LCD16bpp::blitCopy(const unsigned short*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&, const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[24a]"></a>touchgfx::LCD16bpp::fillRect(const touchgfx::Rect&, touchgfx::colortype, unsigned char)</STRONG> (Thumb, 362 bytes, Stack size 56 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::LCD16bpp::fillRect(const touchgfx::Rect&, touchgfx::colortype, unsigned char) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&, const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::isEmpty() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[47e]"></a>touchgfx::LCD16bpp::nextLine(bool, touchgfx::TextRotation)</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::nextLine(bool, touchgfx::TextRotation) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[24f]"></a>touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)</STRONG> (Thumb, 890 bytes, Stack size 104 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation) &rArr; touchgfx::LCD16bpp::nextPixel(bool, touchgfx::TextRotation) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::bottom() const
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::right() const
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::realY(const touchgfx::Rect&, short, short, touchgfx::TextRotation)
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::realX(const touchgfx::Rect&, short, short, touchgfx::TextRotation)
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&)
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::nextPixel(bool, touchgfx::TextRotation)
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::nextLine(bool, touchgfx::TextRotation)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[47f]"></a>touchgfx::LCD16bpp::nextPixel(bool, touchgfx::TextRotation)</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::nextPixel(bool, touchgfx::TextRotation) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[4a9]"></a>touchgfx::LCD16bpp::LCD16bpp()</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bppC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___22_BoardConfiguration_cpp_dceb80ee
</UL>

<P><STRONG><a name="[5e5]"></a>touchgfx::LCD16bpp::LCD16bpp__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bppC1Ev), UNUSED)

<P><STRONG><a name="[b3]"></a>touchgfx::LCD16bpp::~LCD16bpp()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, boardconfiguration.o(i._ZN8touchgfx8LCD16bppD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> boardconfiguration.o(i.__sti___22_BoardConfiguration_cpp_dceb80ee)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[5e6]"></a>touchgfx::LCD16bpp::~LCD16bpp__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, boardconfiguration.o(i._ZN8touchgfx8LCD16bppD1Ev), UNUSED)

<P><STRONG><a name="[52b]"></a>touchgfx::Renderer::render(const touchgfx::Scanline&)</STRONG> (Thumb, 136 bytes, Stack size 56 bytes, canvas.o(i._ZN8touchgfx8Renderer6renderERKNS_8ScanlineE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::Renderer::render(const touchgfx::Scanline&)
</UL>
<BR>[Called By]<UL><LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool touchgfx::Rasterizer::render&lang;touchgfx::Renderer&rang;(T1&)
</UL>

<P><STRONG><a name="[480]"></a>touchgfx::Scanline::reset()</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, scanline.o(i._ZN8touchgfx8Scanline5resetEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Scanline::reset()
</UL>
<BR>[Calls]<UL><LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::getScanlineStartIndices()
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::getScanlineCovers()
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::getScanlineCounts()
</UL>
<BR>[Called By]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Scanline::Scanline()
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool touchgfx::Rasterizer::render&lang;touchgfx::Renderer&rang;(T1&)
</UL>

<P><STRONG><a name="[484]"></a>touchgfx::Scanline::addSpan(int, int, unsigned, unsigned)</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, scanline.o(i._ZN8touchgfx8Scanline7addSpanEiijj))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Scanline::addSpan(int, int, unsigned, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::memset(void*, unsigned char, unsigned)
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::getScanlineWidth()
</UL>
<BR>[Called By]<UL><LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool touchgfx::Rasterizer::render&lang;touchgfx::Renderer&rang;(T1&)
</UL>

<P><STRONG><a name="[442]"></a>touchgfx::Scanline::Scanline()</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, scanline.o(i._ZN8touchgfx8ScanlineC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Scanline::Scanline() &rArr; touchgfx::Scanline::reset()
</UL>
<BR>[Calls]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Scanline::reset()
</UL>
<BR>[Called By]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(const touchgfx::CanvasWidget*, const touchgfx::Rect&)
</UL>

<P><STRONG><a name="[5e7]"></a>touchgfx::Scanline::Scanline__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, scanline.o(i._ZN8touchgfx8ScanlineC1Ev), UNUSED)

<P><STRONG><a name="[354]"></a>touchgfx::TextArea::setTypedText(touchgfx::TypedText)</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, textarea.o(i._ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::TextArea::setTypedText(touchgfx::TypedText) &rArr; touchgfx::TextArea::resizeToCurrentText()
</UL>
<BR>[Calls]<UL><LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
</UL>
<BR>[Called By]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AboutViewBase::AboutViewBase()
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VideoViewBase::VideoViewBase()
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VideoView::handleTickEvent()
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainViewBase::MainViewBase()
</UL>

<P><STRONG><a name="[1fb]"></a>touchgfx::TextArea::getTextHeight()</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, textarea.o(i._ZN8touchgfx8TextArea13getTextHeightEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextArea::getTextHeight() &rArr; touchgfx::TypedText::getText() const &rArr; touchgfx::TypedText::assertValid() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::hasValidId() const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[487]"></a>touchgfx::TextArea::resizeToCurrentText()</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, textarea.o(i._ZN8touchgfx8TextArea19resizeToCurrentTextEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::TextArea::resizeToCurrentText()
</UL>
<BR>[Calls]<UL><LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::hasValidId() const
</UL>
<BR>[Called By]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setTypedText(touchgfx::TypedText)
</UL>

<P><STRONG><a name="[350]"></a>touchgfx::TextArea::TextArea()</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, mainviewbase.o(i._ZN8touchgfx8TextAreaC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = touchgfx::TextArea::TextArea() &rArr; touchgfx::Widget::Widget__sub_object() &rArr; touchgfx::Drawable::Drawable__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VideoViewBase::VideoViewBase()
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainViewBase::MainViewBase()
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::FadeAnimator()
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithOneWildcard&rang;::FadeAnimator()
</UL>

<P><STRONG><a name="[5e8]"></a>touchgfx::TextArea::TextArea__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, mainviewbase.o(i._ZN8touchgfx8TextAreaC1Ev), UNUSED)

<P><STRONG><a name="[3fd]"></a>touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, constfont.o(i._ZN8touchgfx9ConstFontC2EPKNS_9GlyphNodeEtthhhhhtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*)
</UL>

<P><STRONG><a name="[193]"></a>touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, container.o(i._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)
</UL>
<BR>[Calls]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::bottom() const
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::right() const
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ClickableContainer::handleClickEvent(const touchgfx::ClickEvent&)
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ClickableContainer::getLastChild(short, short, touchgfx::Drawable**)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> sparsecontainerlist.o(.constdata__ZTV19SparseContainerList)
<LI> mainview.o(.constdata__ZTV14ImageContainer)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
</UL>
<P><STRONG><a name="[189]"></a>touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**) &rArr; touchgfx::Rect::operator &(const touchgfx::Rect&) const &rArr; touchgfx::Rect::operator &=(const touchgfx::Rect&) &rArr; touchgfx::Rect::intersect(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::isEmpty() const
</UL>
<BR>[Called By]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::startSMOC(const touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 5]<UL><LI> sparsecontainerlist.o(.constdata__ZTV19SparseContainerList)
<LI> clickablecontainer.o(.constdata__ZTVN8touchgfx18ClickableContainerE)
<LI> scrollingmenu.o(.constdata__ZTV13ScrollingMenu)
<LI> mainview.o(.constdata__ZTV14ImageContainer)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
</UL>
<P><STRONG><a name="[18a]"></a>touchgfx::Container::add(touchgfx::Drawable&)</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, container.o(i._ZN8touchgfx9Container3addERNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::Container::add(touchgfx::Drawable&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AboutView::setupScreen()
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SparseContainerList::setup(bool, bool, short, short, short, short, short, short, short, touchgfx::GenericCallback&lang;int, touchgfx::Container**, void&rang;&, touchgfx::GenericCallback&lang;int, int, void&rang;&)
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScreenSaverViewBase::ScreenSaverViewBase()
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VideoView::setupScreen()
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::setup(bool, bool, short, short, short, short, short, short, short, touchgfx::GenericCallback&lang;int, touchgfx::Container**, void&rang;&, touchgfx::GenericCallback&lang;int, int, void&rang;&)
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::add(touchgfx::Drawable&)
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageContainer::ImageContainer()
</UL>
<BR>[Address Reference Count : 5]<UL><LI> sparsecontainerlist.o(.constdata__ZTV19SparseContainerList)
<LI> clickablecontainer.o(.constdata__ZTVN8touchgfx18ClickableContainerE)
<LI> scrollingmenu.o(.constdata__ZTV13ScrollingMenu)
<LI> mainview.o(.constdata__ZTV14ImageContainer)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
</UL>
<P><STRONG><a name="[18d]"></a>touchgfx::Container::insert(touchgfx::Drawable*, touchgfx::Drawable&)</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, container.o(i._ZN8touchgfx9Container6insertEPNS_8DrawableERS1_))
<BR><BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScreenSaverView::setupScreen()
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::setupScreen()
</UL>
<BR>[Address Reference Count : 5]<UL><LI> sparsecontainerlist.o(.constdata__ZTV19SparseContainerList)
<LI> clickablecontainer.o(.constdata__ZTVN8touchgfx18ClickableContainerE)
<LI> scrollingmenu.o(.constdata__ZTV13ScrollingMenu)
<LI> mainview.o(.constdata__ZTV14ImageContainer)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
</UL>
<P><STRONG><a name="[18b]"></a>touchgfx::Container::remove(touchgfx::Drawable&)</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, container.o(i._ZN8touchgfx9Container6removeERNS_8DrawableE))
<BR><BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AboutView::setupScreen()
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VideoView::setupScreen()
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::setupScreen()
</UL>
<BR>[Address Reference Count : 5]<UL><LI> sparsecontainerlist.o(.constdata__ZTV19SparseContainerList)
<LI> clickablecontainer.o(.constdata__ZTVN8touchgfx18ClickableContainerE)
<LI> scrollingmenu.o(.constdata__ZTV13ScrollingMenu)
<LI> mainview.o(.constdata__ZTV14ImageContainer)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
</UL>
<P><STRONG><a name="[18c]"></a>touchgfx::Container::removeAll()</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, container.o(i._ZN8touchgfx9Container9removeAllEv))
<BR><BR>[Called By]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SparseContainerList::setup(bool, bool, short, short, short, short, short, short, short, touchgfx::GenericCallback&lang;int, touchgfx::Container**, void&rang;&, touchgfx::GenericCallback&lang;int, int, void&rang;&)
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::setup(bool, bool, short, short, short, short, short, short, short, touchgfx::GenericCallback&lang;int, touchgfx::Container**, void&rang;&, touchgfx::GenericCallback&lang;int, int, void&rang;&)
</UL>
<BR>[Address Reference Count : 5]<UL><LI> sparsecontainerlist.o(.constdata__ZTV19SparseContainerList)
<LI> clickablecontainer.o(.constdata__ZTVN8touchgfx18ClickableContainerE)
<LI> scrollingmenu.o(.constdata__ZTV13ScrollingMenu)
<LI> mainview.o(.constdata__ZTV14ImageContainer)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
</UL>
<P><STRONG><a name="[3ee]"></a>touchgfx::GlyphNode::setTop(short)</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, textprovider.o(i._ZN8touchgfx9GlyphNode6setTopEs))
<BR><BR>[Called By]<UL><LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustThaiGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*)
</UL>

<P><STRONG><a name="[1d2]"></a>AboutView::setupScreen()</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, aboutview.o(i._ZN9AboutView11setupScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = AboutView::setupScreen() &rArr; AboutView::setStateTGFX() &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::remove(touchgfx::Drawable&)
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AboutView::setStateTGFX()
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> aboutview.o(.constdata__ZTV9AboutView)
</UL>
<P><STRONG><a name="[488]"></a>AboutView::setStateTGFX()</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, aboutview.o(i._ZN9AboutView12setStateTGFXEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = AboutView::setStateTGFX() &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::moveTo(short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AboutView::setupScreen()
</UL>

<P><STRONG><a name="[1d3]"></a>AboutView::tearDownScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, aboutview.o(i._ZN9AboutView14tearDownScreenEv))
<BR>[Address Reference Count : 1]<UL><LI> aboutview.o(.constdata__ZTV9AboutView)
</UL>
<P><STRONG><a name="[489]"></a>AboutView::AboutView()</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, aboutview.o(i._ZN9AboutViewC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = AboutView::AboutView() &rArr; AboutViewBase::AboutViewBase() &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AboutViewBase::AboutViewBase()
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::Image(const touchgfx::Bitmap&)
</UL>
<BR>[Called By]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;AboutView, AboutPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[5e9]"></a>AboutView::AboutView__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, aboutview.o(i._ZN9AboutViewC1Ev), UNUSED)

<P><STRONG><a name="[1d1]"></a>AboutView::~AboutView()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, aboutview.o(i._ZN9AboutViewD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> aboutview.o(.constdata__ZTV9AboutView)
</UL>
<P><STRONG><a name="[5ea]"></a>AboutView::~AboutView__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aboutview.o(i._ZN9AboutViewD1Ev), UNUSED)

<P><STRONG><a name="[1d5]"></a>VideoView::setupScreen()</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, videoview.o(i._ZN9VideoView11setupScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 856 + Unknown Stack Size
<LI>Call Chain = VideoView::setupScreen() &rArr; touchgfx::MJPEGWidget::gotoFrame(unsigned) &rArr; touchgfx::MJPEGWidget::decodeMJPEGFrame(const unsigned char*, unsigned) &rArr; jpeg_start_decompress &rArr; jinit_master_decompress &rArr; master_selection &rArr; jinit_1pass_quantizer &rArr; create_colormap &rArr; select_ncolors
</UL>
<BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::remove(touchgfx::Drawable&)
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PixelDataWidget::setBitmapFormat(touchgfx::Bitmap::BitmapFormat)
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PixelDataWidget::setPixelData(unsigned char*)
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MJPEGWidget::gotoFrame(unsigned)
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MJPEGWidget::setMovie(const unsigned char*, unsigned)
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MJPEGWidget::setLineBuffer(unsigned char*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> videoview.o(.constdata__ZTV9VideoView)
</UL>
<P><STRONG><a name="[48d]"></a>VideoView::getVideoTexts(int, touchgfx::TypedText&, touchgfx::TypedText&)</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, videoview.o(i._ZN9VideoView13getVideoTextsEiRN8touchgfx9TypedTextES2_))
<BR><BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VideoView::handleTickEvent()
</UL>

<P><STRONG><a name="[123]"></a>VideoView::buttonFadeDone(const touchgfx::FadeAnimator&lang;touchgfx::Image&rang;&)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, videoview.o(i._ZN9VideoView14buttonFadeDoneERKN8touchgfx12FadeAnimatorINS0_5ImageEEE))
<BR>[Address Reference Count : 1]<UL><LI> videoview.o(.constdata)
</UL>
<P><STRONG><a name="[1d6]"></a>VideoView::tearDownScreen()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, videoview.o(i._ZN9VideoView14tearDownScreenEv))
<BR>[Address Reference Count : 1]<UL><LI> videoview.o(.constdata__ZTV9VideoView)
</UL>
<P><STRONG><a name="[1d8]"></a>VideoView::handleTickEvent()</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, videoview.o(i._ZN9VideoView15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = VideoView::handleTickEvent() &rArr; touchgfx::MJPEGWidget::tick() &rArr; touchgfx::MJPEGWidget::decodeMJPEGFrame(const unsigned char*, unsigned) &rArr; jpeg_start_decompress &rArr; jinit_master_decompress &rArr; master_selection &rArr; jinit_1pass_quantizer &rArr; create_colormap &rArr; select_ncolors
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setTypedText(touchgfx::TypedText)
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MJPEGWidget::tick()
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VideoView::getVideoTexts(int, touchgfx::TypedText&, touchgfx::TypedText&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> videoview.o(.constdata__ZTV9VideoView)
</UL>
<P><STRONG><a name="[1d7]"></a>VideoView::handleClickEvent(const touchgfx::ClickEvent&)</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, videoview.o(i._ZN9VideoView16handleClickEventERKN8touchgfx10ClickEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = VideoView::handleClickEvent(const touchgfx::ClickEvent&) &rArr; touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&) &rArr; touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
</UL>
<BR>[Address Reference Count : 1]<UL><LI> videoview.o(.constdata__ZTV9VideoView)
</UL>
<P><STRONG><a name="[48e]"></a>VideoView::VideoView()</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, videoview.o(i._ZN9VideoViewC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = VideoView::VideoView() &rArr; VideoViewBase::VideoViewBase() &rArr; touchgfx::Image::Image(const touchgfx::Bitmap&) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MJPEGWidget::MJPEGWidget()
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VideoViewBase::VideoViewBase()
</UL>
<BR>[Called By]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;VideoView, VideoPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[5eb]"></a>VideoView::VideoView__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, videoview.o(i._ZN9VideoViewC1Ev), UNUSED)

<P><STRONG><a name="[1d4]"></a>VideoView::~VideoView()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, videoview.o(i._ZN9VideoViewD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> videoview.o(.constdata__ZTV9VideoView)
</UL>
<P><STRONG><a name="[5ec]"></a>VideoView::~VideoView__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, videoview.o(i._ZN9VideoViewD1Ev), UNUSED)

<P><STRONG><a name="[143]"></a>STM32F7HAL::getTFTFrameBuffer() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f7hal.o(i._ZNK10STM32F7HAL17getTFTFrameBufferEv))
<BR>[Address Reference Count : 1]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
</UL>
<P><STRONG><a name="[35f]"></a>ScrollingMenu::getSelectedItem() const</STRONG> (Thumb, 84 bytes, Stack size 12 bytes, scrollingmenu.o(i._ZNK13ScrollingMenu15getSelectedItemEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ScrollingMenu::getSelectedItem() const &rArr; ScrollingMenu::getNormalizedOffset(int) const
</UL>
<BR>[Calls]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::getNormalizedOffset(int) const
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::handleTickEvent()
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::rightButtonClicked()
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::leftButtonClicked()
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::handleTickEvent()
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::gotoStarting()
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::setupScreen()
</UL>

<P><STRONG><a name="[35e]"></a>ScrollingMenu::getNormalizedOffset(int) const</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, scrollingmenu.o(i._ZNK13ScrollingMenu19getNormalizedOffsetEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ScrollingMenu::getNormalizedOffset(int) const
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::handleTickEvent()
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::getSelectedItem() const
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::setSelectedItem(int)
</UL>

<P><STRONG><a name="[35b]"></a>ScrollingMenu::keepOffsetInsideLimits(int, short) const</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, scrollingmenu.o(i._ZNK13ScrollingMenu22keepOffsetInsideLimitsEis))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ScrollingMenu::keepOffsetInsideLimits(int, short) const
</UL>
<BR>[Called By]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::getNearestAlignedOffset(int) const
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::handleGestureEvent(const touchgfx::GestureEvent&)
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::handleDragEvent(const touchgfx::DragEvent&)
</UL>

<P><STRONG><a name="[367]"></a>ScrollingMenu::getNearestAlignedOffset(int) const</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, scrollingmenu.o(i._ZNK13ScrollingMenu23getNearestAlignedOffsetEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ScrollingMenu::getNearestAlignedOffset(int) const &rArr; ScrollingMenu::keepOffsetInsideLimits(int, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::keepOffsetInsideLimits(int, short) const
</UL>
<BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::animateTo(int)
</UL>

<P><STRONG><a name="[19a]"></a>ParticleEffect::getSolidRect() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, particleeffect.o(i._ZNK14ParticleEffect12getSolidRectEv))
<BR><BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> particleeffect.o(.constdata__ZTV14ParticleEffect)
</UL>
<P><STRONG><a name="[199]"></a>ParticleEffect::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 232 bytes, Stack size 72 bytes, particleeffect.o(i._ZNK14ParticleEffect4drawERKN8touchgfx4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = ParticleEffect::draw(const touchgfx::Rect&) const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect()
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 1]<UL><LI> particleeffect.o(.constdata__ZTV14ParticleEffect)
</UL>
<P><STRONG><a name="[1cf]"></a>Particle::getSolidRect() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, particleeffect.o(i._ZNK8Particle12getSolidRectEv))
<BR><BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> particleeffect.o(.constdata__ZTV8Particle)
</UL>
<P><STRONG><a name="[52a]"></a>touchgfx::Rasterizer::calculateAlpha(int) const</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, canvas.o(i._ZNK8touchgfx10Rasterizer14calculateAlphaEi))
<BR><BR>[Called By]<UL><LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool touchgfx::Rasterizer::render&lang;touchgfx::Renderer&rang;(T1&)
</UL>

<P><STRONG><a name="[1e1]"></a>touchgfx::CanvasWidget::getPainter() const</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, canvaswidget.o(i._ZNK8touchgfx12CanvasWidget10getPainterEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::CanvasWidget::getPainter() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 3]<UL><LI> mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6CircleEEE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> circle.o(.constdata__ZTVN8touchgfx6CircleE)
</UL>
<P><STRONG><a name="[1df]"></a>touchgfx::CanvasWidget::invalidate() const</STRONG> (Thumb, 54 bytes, Stack size 32 bytes, canvaswidget.o(i._ZNK8touchgfx12CanvasWidget10invalidateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::CanvasWidget::invalidate() const &rArr; touchgfx::CanvasWidget::getMinimalRect() const &rArr; touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::intersect(const touchgfx::Rect&) const
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::getMinimalRect() const
</UL>
<BR>[Called By]<UL><LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Circle&rang;::nextFadeAnimationStep()
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::gotoWashingPrewash()
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::handleTickEvent()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6CircleEEE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> circle.o(.constdata__ZTVN8touchgfx6CircleE)
</UL>
<P><STRONG><a name="[1de]"></a>touchgfx::CanvasWidget::getSolidRect() const</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, canvaswidget.o(i._ZNK8touchgfx12CanvasWidget12getSolidRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::CanvasWidget::getSolidRect() const &rArr; touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6CircleEEE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> circle.o(.constdata__ZTVN8touchgfx6CircleE)
</UL>
<P><STRONG><a name="[1e3]"></a>touchgfx::CanvasWidget::getMinimalRect() const</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, canvaswidget.o(i._ZNK8touchgfx12CanvasWidget14getMinimalRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::CanvasWidget::getMinimalRect() const &rArr; touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::invalidate() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
</UL>
<P><STRONG><a name="[1dd]"></a>touchgfx::CanvasWidget::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 226 bytes, Stack size 64 bytes, canvaswidget.o(i._ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = touchgfx::CanvasWidget::draw(const touchgfx::Rect&) const &rArr; touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::intersect(const touchgfx::Rect&) const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6CircleEEE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> circle.o(.constdata__ZTVN8touchgfx6CircleE)
</UL>
<P><STRONG><a name="[1e2]"></a>touchgfx::CanvasWidget::getAlpha() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mainview.o(i._ZNK8touchgfx12CanvasWidget8getAlphaEv))
<BR>[Address Reference Count : 3]<UL><LI> mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6CircleEEE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> circle.o(.constdata__ZTVN8touchgfx6CircleE)
</UL>
<P><STRONG><a name="[3ef]"></a>touchgfx::TextProvider::thaiLookupGlyph(const touchgfx::GlyphNode*, const touchgfx::Font*, unsigned short) const</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, textprovider.o(i._ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::TextProvider::thaiLookupGlyph(const touchgfx::GlyphNode*, const touchgfx::Font*, unsigned short) const
</UL>
<BR>[Called By]<UL><LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustThaiGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*)
</UL>

<P><STRONG><a name="[3fa]"></a>touchgfx::TextProvider::gsubTableBinarySearch(unsigned short, const unsigned short*, unsigned short) const</STRONG> (Thumb, 64 bytes, Stack size 12 bytes, textprovider.o(i._ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::TextProvider::gsubTableBinarySearch(unsigned short, const unsigned short*, unsigned short) const
</UL>
<BR>[Called By]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::substituteGlyphs()
</UL>

<P><STRONG><a name="[20f]"></a>touchgfx::GeneratedFont::getKerning(unsigned short, const touchgfx::GlyphNode*) const</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, generatedfont.o(i._ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::GeneratedFont::getKerning(unsigned short, const touchgfx::GlyphNode*) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
</UL>
<P><STRONG><a name="[210]"></a>touchgfx::GeneratedFont::getGSUBTable() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, generatedfont.o(i._ZNK8touchgfx13GeneratedFont12getGSUBTableEv))
<BR>[Address Reference Count : 1]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
</UL>
<P><STRONG><a name="[211]"></a>touchgfx::GeneratedFont::getPixelData(const touchgfx::GlyphNode*) const</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, generatedfont.o(i._ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE))
<BR>[Address Reference Count : 1]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
</UL>
<P><STRONG><a name="[1db]"></a>touchgfx::PixelDataWidget::getSolidRect() const</STRONG> (Thumb, 70 bytes, Stack size 20 bytes, pixeldatawidget.o(i._ZNK8touchgfx15PixelDataWidget12getSolidRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::PixelDataWidget::getSolidRect() const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> mjpegwidget.o(.constdata__ZTVN8touchgfx11MJPEGWidgetE)
<LI> pixeldatawidget.o(.constdata__ZTVN8touchgfx15PixelDataWidgetE)
</UL>
<P><STRONG><a name="[1da]"></a>touchgfx::PixelDataWidget::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, pixeldatawidget.o(i._ZNK8touchgfx15PixelDataWidget4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::PixelDataWidget::draw(const touchgfx::Rect&) const &rArr; touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> mjpegwidget.o(.constdata__ZTVN8touchgfx11MJPEGWidgetE)
<LI> pixeldatawidget.o(.constdata__ZTVN8touchgfx15PixelDataWidgetE)
</UL>
<P><STRONG><a name="[1ee]"></a>touchgfx::TextAreaWithOneWildcard::getTextWidth() const</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, textareawithwildcard.o(i._ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextAreaWithOneWildcard::getTextWidth() const &rArr; touchgfx::TypedText::getText() const &rArr; touchgfx::TypedText::assertValid() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getFont() const
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::hasValidId() const
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getTextDirection() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEEE)
</UL>
<P><STRONG><a name="[1ea]"></a>touchgfx::TextAreaWithOneWildcard::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 138 bytes, Stack size 72 bytes, textareawithwildcard.o(i._ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextAreaWithOneWildcard::draw(const touchgfx::Rect&) const &rArr; touchgfx::TypedText::getText() const &rArr; touchgfx::TypedText::assertValid() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getFont() const
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::hasValidId() const
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, ...)
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::StringVisuals::StringVisuals(const touchgfx::Font*, touchgfx::colortype, unsigned char, unsigned char, short, touchgfx::TextRotation, unsigned char, unsigned char, touchgfx::WideTextAction)
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getTextDirection() const
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getAlignment() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEEE)
</UL>
<P><STRONG><a name="[229]"></a>touchgfx::Box::getSolidRect() const</STRONG> (Thumb, 56 bytes, Stack size 20 bytes, box.o(i._ZNK8touchgfx3Box12getSolidRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::Box::getSolidRect() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
</UL>
<P><STRONG><a name="[228]"></a>touchgfx::Box::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, box.o(i._ZNK8touchgfx3Box4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Box::draw(const touchgfx::Rect&) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
</UL>
<P><STRONG><a name="[494]"></a>touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, hal.o(i._ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const
</UL>

<P><STRONG><a name="[416]"></a>touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, hal.o(i._ZNK8touchgfx3HAL13getDstAddressEttPt))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const &rArr; touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations)
</UL>

<P><STRONG><a name="[41f]"></a>touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, hal.o(i._ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const &rArr; touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat)
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopy(const unsigned short*, const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat)
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const
</UL>

<P><STRONG><a name="[22c]"></a>touchgfx::Font::getKerning(unsigned short, const touchgfx::GlyphNode*) const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, font.o(i._ZNK8touchgfx4Font10getKerningEtPKNS_9GlyphNodeE))
<BR>[Address Reference Count : 1]<UL><LI> font.o(.constdata__ZTVN8touchgfx4FontE)
</UL>
<P><STRONG><a name="[22d]"></a>touchgfx::Font::getGSUBTable() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, constfont.o(i._ZNK8touchgfx4Font12getGSUBTableEv))
<BR>[Address Reference Count : 2]<UL><LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
<LI> font.o(.constdata__ZTVN8touchgfx4FontE)
</UL>
<P><STRONG><a name="[20b]"></a>touchgfx::Font::getFontHeight() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cachedfont.o(i._ZNK8touchgfx4Font13getFontHeightEv))
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
<LI> font.o(.constdata__ZTVN8touchgfx4FontE)
</UL>
<P><STRONG><a name="[20a]"></a>touchgfx::Font::getStringWidth(unsigned char, const unsigned short*, ...) const</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, font.o(i._ZNK8touchgfx4Font14getStringWidthEhPKtz))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Font::getStringWidth(unsigned char, const unsigned short*, ...) const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
<LI> font.o(.constdata__ZTVN8touchgfx4FontE)
</UL>
<P><STRONG><a name="[20d]"></a>touchgfx::Font::getBitsPerPixel() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cachedfont.o(i._ZNK8touchgfx4Font15getBitsPerPixelEv))
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
<LI> font.o(.constdata__ZTVN8touchgfx4FontE)
</UL>
<P><STRONG><a name="[20e]"></a>touchgfx::Font::getDataFormatA4() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cachedfont.o(i._ZNK8touchgfx4Font15getDataFormatA4Ev))
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
<LI> font.o(.constdata__ZTVN8touchgfx4FontE)
</UL>
<P><STRONG><a name="[209]"></a>touchgfx::Font::getEllipsisChar() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cachedfont.o(i._ZNK8touchgfx4Font15getEllipsisCharEv))
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
<LI> font.o(.constdata__ZTVN8touchgfx4FontE)
</UL>
<P><STRONG><a name="[208]"></a>touchgfx::Font::getFallbackChar() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cachedfont.o(i._ZNK8touchgfx4Font15getFallbackCharEv))
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
<LI> font.o(.constdata__ZTVN8touchgfx4FontE)
</UL>
<P><STRONG><a name="[1a]"></a>touchgfx::Font::getStringWidthLTR(unsigned char, const unsigned short*, std::__va_list) const</STRONG> (Thumb, 132 bytes, Stack size 128 bytes, font.o(i._ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 352 + Unknown Stack Size
<LI>Call Chain = touchgfx::Font::getStringWidthLTR(unsigned char, const unsigned short*, std::__va_list) const &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list, const unsigned short*)
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&)
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::advance() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> texts.o(.data)
</UL>
<P><STRONG><a name="[20c]"></a>touchgfx::Font::getMinimumTextHeight() const</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, cachedfont.o(i._ZNK8touchgfx4Font20getMinimumTextHeightEv))
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
<LI> font.o(.constdata__ZTVN8touchgfx4FontE)
</UL>
<P><STRONG><a name="[207]"></a>touchgfx::Font::getGlyph(unsigned short) const</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, cachedfont.o(i._ZNK8touchgfx4Font8getGlyphEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Font::getGlyph(unsigned short) const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
<LI> font.o(.constdata__ZTVN8touchgfx4FontE)
</UL>
<P><STRONG><a name="[426]"></a>touchgfx::Rect::right() const</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, particleeffect.o(i._ZNK8touchgfx4Rect5rightEv))
<BR><BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::includes(const touchgfx::Rect&) const
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::expandToFit(const touchgfx::Rect&)
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::realX(const touchgfx::Rect&, short, short, touchgfx::TextRotation)
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool)
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::intersect(short, short) const
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[3cb]"></a>touchgfx::Rect::bottom() const</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, particleeffect.o(i._ZNK8touchgfx4Rect6bottomEv))
<BR><BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::cacheDrawOperations(bool)
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::includes(const touchgfx::Rect&) const
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::expandToFit(const touchgfx::Rect&)
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::realY(const touchgfx::Rect&, short, short, touchgfx::TextRotation)
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::intersect(short, short) const
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[3c2]"></a>touchgfx::Rect::isEmpty() const</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZNK8touchgfx4Rect7isEmptyEv))
<BR><BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::cacheDrawOperations(bool)
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::draw(const touchgfx::Rect&) const
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::expandToFit(const touchgfx::Rect&)
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::fillRect(const touchgfx::Rect&, touchgfx::colortype, unsigned char)
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[3c3]"></a>touchgfx::Rect::includes(const touchgfx::Rect&) const</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, application.o(i._ZNK8touchgfx4Rect8includesERKS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Rect::includes(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::bottom() const
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::right() const
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
</UL>

<P><STRONG><a name="[3c5]"></a>touchgfx::Rect::intersect(const touchgfx::Rect&) const</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, canvaswidget.o(i._ZNK8touchgfx4Rect9intersectERKS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Rect::intersect(const touchgfx::Rect&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::draw(const touchgfx::Rect&) const
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::invalidate() const
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[447]"></a>touchgfx::Rect::intersect(short, short) const</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, screen.o(i._ZNK8touchgfx4Rect9intersectEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Rect::intersect(short, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::bottom() const
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::right() const
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)
</UL>

<P><STRONG><a name="[3cc]"></a>touchgfx::Rect::operator &(const touchgfx::Rect&) const</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, application.o(i._ZNK8touchgfx4RectanERKS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::Rect::operator &(const touchgfx::Rect&) const &rArr; touchgfx::Rect::operator &=(const touchgfx::Rect&) &rArr; touchgfx::Rect::intersect(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::draw(touchgfx::Rect&)
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::cacheDrawOperations(bool)
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw(touchgfx::Rect&)
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::draw(const touchgfx::Rect&) const
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[1e5]"></a>touchgfx::Image::getSolidRect() const</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, image.o(i._ZNK8touchgfx5Image12getSolidRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::Image::getSolidRect() const &rArr; touchgfx::Bitmap::getSolidRect() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getSolidRect() const
</UL>
<BR>[Address Reference Count : 5]<UL><LI> mainview.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
<LI> mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_13AnimatedImageEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> animatedimage.o(.constdata__ZTVN8touchgfx13AnimatedImageE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[1ce]"></a>touchgfx::Image::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 162 bytes, Stack size 64 bytes, image.o(i._ZNK8touchgfx5Image4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = touchgfx::Image::draw(const touchgfx::Rect&) const &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
</UL>
<BR>[Address Reference Count : 6]<UL><LI> particleeffect.o(.constdata__ZTV8Particle)
<LI> mainview.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
<LI> mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_13AnimatedImageEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> animatedimage.o(.constdata__ZTVN8touchgfx13AnimatedImageE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[396]"></a>touchgfx::Image::getBitmap() const</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, mainview.o(i._ZNK8touchgfx5Image9getBitmapEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::Image::getBitmap() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::gotoStarting()
</UL>

<P><STRONG><a name="[4a3]"></a>touchgfx::Texts::getText(unsigned short) const</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, texts.o(i._ZNK8touchgfx5Texts7getTextEt))
<BR><BR>[Called By]<UL><LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
</UL>

<P><STRONG><a name="[495]"></a>touchgfx::Bitmap::BitmapData::getFormat() const</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, bitmap.o(i._ZNK8touchgfx6Bitmap10BitmapData9getFormatEv))
<BR><BR>[Called By]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getFormat() const
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getExtraData() const
</UL>

<P><STRONG><a name="[467]"></a>touchgfx::Bitmap::getExtraData() const</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, bitmap.o(i._ZNK8touchgfx6Bitmap12getExtraDataEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Bitmap::getExtraData() const
</UL>
<BR>[Calls]<UL><LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::BitmapData::getFormat() const
</UL>
<BR>[Called By]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[468]"></a>touchgfx::Bitmap::getSolidRect() const</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, bitmap.o(i._ZNK8touchgfx6Bitmap12getSolidRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::getSolidRect() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::getSolidRect() const
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::getSolidRect() const
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[42f]"></a>touchgfx::Bitmap::hasTransparentPixels() const</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, bitmap.o(i._ZNK8touchgfx6Bitmap20hasTransparentPixelsEv))
<BR><BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[466]"></a>touchgfx::Bitmap::getData() const</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, bitmap.o(i._ZNK8touchgfx6Bitmap7getDataEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::getData() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[42d]"></a>touchgfx::Bitmap::getWidth() const</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, bitmap.o(i._ZNK8touchgfx6Bitmap8getWidthEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::getWidth() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::draw(const touchgfx::Rect&) const
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::draw(const touchgfx::Rect&) const
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[465]"></a>touchgfx::Bitmap::getFormat() const</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, bitmap.o(i._ZNK8touchgfx6Bitmap9getFormatEv))
<BR><BR>[Calls]<UL><LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::BitmapData::getFormat() const
</UL>
<BR>[Called By]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[42e]"></a>touchgfx::Bitmap::getHeight() const</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, bitmap.o(i._ZNK8touchgfx6Bitmap9getHeightEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::draw(const touchgfx::Rect&) const
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::draw(const touchgfx::Rect&) const
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[1f2]"></a>touchgfx::Button::getSolidRect() const</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, button.o(i._ZNK8touchgfx6Button12getSolidRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::Button::getSolidRect() const &rArr; touchgfx::Bitmap::getSolidRect() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getSolidRect() const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> mainviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_6ButtonEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
</UL>
<P><STRONG><a name="[1f1]"></a>touchgfx::Button::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 188 bytes, Stack size 56 bytes, button.o(i._ZNK8touchgfx6Button4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = touchgfx::Button::draw(const touchgfx::Rect&) const &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 3]<UL><LI> mainviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_6ButtonEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
</UL>
<P><STRONG><a name="[437]"></a>touchgfx::Canvas::transformFrameBufferToDisplay(touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, canvas.o(i._ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Canvas::transformFrameBufferToDisplay(touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::CWRUtil::Q5::operator -(const touchgfx::CWRUtil::Q5&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator -(const touchgfx::CWRUtil::Q5&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::moveTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::lineTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
</UL>

<P><STRONG><a name="[439]"></a>touchgfx::Canvas::isOutside(const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&) const</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, canvas.o(i._ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Canvas::isOutside(const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::moveTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::lineTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
</UL>

<P><STRONG><a name="[496]"></a>touchgfx::Circle::lineToXYAR2(touchgfx::Canvas&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&) const</STRONG> (Thumb, 106 bytes, Stack size 48 bytes, circle.o(i._ZNK8touchgfx6Circle11lineToXYAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_S6_S6_))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = touchgfx::Circle::lineToXYAR2(touchgfx::Canvas&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::Canvas::lineTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) &rArr; touchgfx::Rasterizer::moveTo(int, int) &rArr; touchgfx::Outline::moveTo(int, int) &rArr; touchgfx::Outline::lineTo(int, int) &rArr; touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Cell::set(int, int, int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::lineTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator +(const touchgfx::CWRUtil::Q5&) const
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator *(const touchgfx::CWRUtil::Q15&) const
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator -(const touchgfx::CWRUtil::Q5&) const
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator /(int) const
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5)
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5)
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::drawCanvasWidget(const touchgfx::Rect&) const
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::lineToAR2(touchgfx::Canvas&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&) const
</UL>

<P><STRONG><a name="[49a]"></a>touchgfx::Circle::getMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const</STRONG> (Thumb, 134 bytes, Stack size 56 bytes, circle.o(i._ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 412<LI>Call Chain = touchgfx::Circle::getMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const &rArr; touchgfx::Circle::calculateMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::Circle::updateMinMaxAR(const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::muldiv(int, int, int, int&)
</UL>
<BR>[Calls]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1 touchgfx::CWRUtil::Q5::to&lang;int&rang;() const
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::calculateMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::getMinimalRect() const
</UL>

<P><STRONG><a name="[1f7]"></a>touchgfx::Circle::getMinimalRect() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, circle.o(i._ZNK8touchgfx6Circle14getMinimalRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 412<LI>Call Chain = touchgfx::Circle::getMinimalRect() const &rArr; touchgfx::Circle::getMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const &rArr; touchgfx::Circle::calculateMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::Circle::updateMinMaxAR(const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::muldiv(int, int, int, int&)
</UL>
<BR>[Calls]<UL><LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::getMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6CircleEEE)
<LI> circle.o(.constdata__ZTVN8touchgfx6CircleE)
</UL>
<P><STRONG><a name="[49c]"></a>touchgfx::Circle::updateMinMaxAR(const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const</STRONG> (Thumb, 122 bytes, Stack size 80 bytes, circle.o(i._ZNK8touchgfx6Circle14updateMinMaxARERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = touchgfx::Circle::updateMinMaxAR(const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::muldiv(int, int, int, int&)
</UL>
<BR>[Calls]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator +(const touchgfx::CWRUtil::Q5&) const
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator *(const touchgfx::CWRUtil::Q15&) const
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator -(const touchgfx::CWRUtil::Q5&) const
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator /(int) const
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::updateMinMaxXY(const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5)
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5)
</UL>
<BR>[Called By]<UL><LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::calculateMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
</UL>

<P><STRONG><a name="[49d]"></a>touchgfx::Circle::updateMinMaxXY(const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const</STRONG> (Thumb, 50 bytes, Stack size 20 bytes, circle.o(i._ZNK8touchgfx6Circle14updateMinMaxXYERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::Circle::updateMinMaxXY(const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::calculateMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::updateMinMaxAR(const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
</UL>

<P><STRONG><a name="[1f8]"></a>touchgfx::Circle::drawCanvasWidget(const touchgfx::Rect&) const</STRONG> (Thumb, 1010 bytes, Stack size 320 bytes, circle.o(i._ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 748 + Unknown Stack Size
<LI>Call Chain = touchgfx::Circle::drawCanvasWidget(const touchgfx::Rect&) const &rArr; touchgfx::Canvas::render() &rArr; bool touchgfx::Rasterizer::render&lang;touchgfx::Renderer&rang;(T1&) &rArr; touchgfx::Outline::getCells() &rArr; touchgfx::Outline::sortCells() &rArr; touchgfx::Outline::qsortCells(touchgfx::Cell*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1 touchgfx::abs&lang;int&rang;(T1)
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::~Canvas()
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(const touchgfx::CanvasWidget*, const touchgfx::Rect&)
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::render()
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::lineTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1 touchgfx::CWRUtil::Q5::to&lang;int&rang;() const
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator +(const touchgfx::CWRUtil::Q5&) const
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator *(int) const
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator *(const touchgfx::CWRUtil::Q15&) const
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator -(const touchgfx::CWRUtil::Q5&) const
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator /(int) const
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::moveToAR2(touchgfx::Canvas&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&) const
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::lineToAR2(touchgfx::Canvas&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&) const
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::lineToXYAR2(touchgfx::Canvas&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&) const
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5)
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::sine(int)
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6CircleEEE)
<LI> circle.o(.constdata__ZTVN8touchgfx6CircleE)
</UL>
<P><STRONG><a name="[49b]"></a>touchgfx::Circle::calculateMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const</STRONG> (Thumb, 832 bytes, Stack size 208 bytes, circle.o(i._ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = touchgfx::Circle::calculateMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::Circle::updateMinMaxAR(const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::muldiv(int, int, int, int&)
</UL>
<BR>[Calls]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1 touchgfx::abs&lang;int&rang;(T1)
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator +(const touchgfx::CWRUtil::Q5&) const
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator *(int) const
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator *(const touchgfx::CWRUtil::Q15&) const
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator -(const touchgfx::CWRUtil::Q5&) const
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator /(int) const
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::updateMinMaxXY(const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::updateMinMaxAR(const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5)
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5)
</UL>
<BR>[Called By]<UL><LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::getMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const
</UL>

<P><STRONG><a name="[4a0]"></a>touchgfx::Circle::lineToAR2(touchgfx::Canvas&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&) const</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, circle.o(i._ZNK8touchgfx6Circle9lineToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = touchgfx::Circle::lineToAR2(touchgfx::Canvas&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::Circle::lineToXYAR2(touchgfx::Canvas&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::Canvas::lineTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) &rArr; touchgfx::Rasterizer::moveTo(int, int) &rArr; touchgfx::Outline::moveTo(int, int) &rArr; touchgfx::Outline::lineTo(int, int) &rArr; touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Cell::set(int, int, int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::lineToXYAR2(touchgfx::Canvas&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::drawCanvasWidget(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[49f]"></a>touchgfx::Circle::moveToAR2(touchgfx::Canvas&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&) const</STRONG> (Thumb, 108 bytes, Stack size 48 bytes, circle.o(i._ZNK8touchgfx6Circle9moveToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = touchgfx::Circle::moveToAR2(touchgfx::Canvas&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::Canvas::moveTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) &rArr; touchgfx::Rasterizer::moveTo(int, int) &rArr; touchgfx::Outline::moveTo(int, int) &rArr; touchgfx::Outline::lineTo(int, int) &rArr; touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Cell::set(int, int, int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::moveTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator +(const touchgfx::CWRUtil::Q5&) const
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator *(const touchgfx::CWRUtil::Q15&) const
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator -(const touchgfx::CWRUtil::Q5&) const
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator /(int) const
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5)
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5)
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::drawCanvasWidget(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[498]"></a>touchgfx::CWRUtil::Q5::operator /(int) const</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, circle.o(i._ZNK8touchgfx7CWRUtil2Q5dvEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::CWRUtil::Q5::operator /(int) const
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::drawCanvasWidget(const touchgfx::Rect&) const
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::moveToAR2(touchgfx::Canvas&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&) const
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::calculateMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::updateMinMaxAR(const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::lineToXYAR2(touchgfx::Canvas&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&) const
</UL>

<P><STRONG><a name="[438]"></a>touchgfx::CWRUtil::Q5::operator -(const touchgfx::CWRUtil::Q5&) const</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, circle.o(i._ZNK8touchgfx7CWRUtil2Q5miERKS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::CWRUtil::Q5::operator -(const touchgfx::CWRUtil::Q5&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::drawCanvasWidget(const touchgfx::Rect&) const
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::moveTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::lineTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::moveToAR2(touchgfx::Canvas&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&) const
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::calculateMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::updateMinMaxAR(const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::lineToXYAR2(touchgfx::Canvas&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&) const
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5)
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::transformFrameBufferToDisplay(touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
</UL>

<P><STRONG><a name="[497]"></a>touchgfx::CWRUtil::Q5::operator *(const touchgfx::CWRUtil::Q15&) const</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, circle.o(i._ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = touchgfx::CWRUtil::Q5::operator *(const touchgfx::CWRUtil::Q15&) const &rArr; touchgfx::muldiv(int, int, int, int&)
</UL>
<BR>[Calls]<UL><LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldiv(int, int, int, int&)
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::drawCanvasWidget(const touchgfx::Rect&) const
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::moveToAR2(touchgfx::Canvas&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&) const
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::calculateMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::updateMinMaxAR(const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::lineToXYAR2(touchgfx::Canvas&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&) const
</UL>

<P><STRONG><a name="[49e]"></a>touchgfx::CWRUtil::Q5::operator *(int) const</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, circle.o(i._ZNK8touchgfx7CWRUtil2Q5mlEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::CWRUtil::Q5::operator *(int) const
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::drawCanvasWidget(const touchgfx::Rect&) const
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::calculateMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
</UL>

<P><STRONG><a name="[499]"></a>touchgfx::CWRUtil::Q5::operator +(const touchgfx::CWRUtil::Q5&) const</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, circle.o(i._ZNK8touchgfx7CWRUtil2Q5plERKS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::CWRUtil::Q5::operator +(const touchgfx::CWRUtil::Q5&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::drawCanvasWidget(const touchgfx::Rect&) const
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::moveToAR2(touchgfx::Canvas&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&) const
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::calculateMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::updateMinMaxAR(const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::lineToXYAR2(touchgfx::Canvas&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&) const
</UL>

<P><STRONG><a name="[179]"></a>touchgfx::Drawable::invalidate() const</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Drawable::invalidate() const
</UL>
<BR>[Called By]<UL><LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AboutView::setStateTGFX()
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::setVirtualOffset(int)
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VideoView::handleClickEvent(const touchgfx::ClickEvent&)
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VideoView::handleTickEvent()
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::nextFadeAnimationStep()
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::nextFadeAnimationStep()
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::nextFadeAnimationStep()
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithOneWildcard&rang;::nextFadeAnimationStep()
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::AnimatedImage&rang;::nextFadeAnimationStep()
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::centerAnimatedImageDone(const touchgfx::AnimatedImage&)
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::gotoWashingSpinning()
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::updateProgramTexts()
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::gotoWashingWashing()
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::gotoWashingRinsing()
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::gotoWashingPrewash()
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::textDashFadeDone(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::gotoWashingDone()
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::gotoStarting()
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::gotoWaiting()
</UL>
<BR>[Address Reference Count : 24]<UL><LI> sparsecontainerlist.o(.constdata__ZTV19SparseContainerList)
<LI> touchforwarder.o(.constdata__ZTV14TouchForwarder)
<LI> clickablecontainer.o(.constdata__ZTVN8touchgfx18ClickableContainerE)
<LI> particleeffect.o(.constdata__ZTV14ParticleEffect)
<LI> scrollingmenu.o(.constdata__ZTV13ScrollingMenu)
<LI> particleeffect.o(.constdata__ZTV8Particle)
<LI> mainview.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> mainview.o(.constdata__ZTV14ImageContainer)
<LI> mainview.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
<LI> mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_13AnimatedImageEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_6ButtonEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
<LI> mjpegwidget.o(.constdata__ZTVN8touchgfx11MJPEGWidgetE)
<LI> animatedimage.o(.constdata__ZTVN8touchgfx13AnimatedImageE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> pixeldatawidget.o(.constdata__ZTVN8touchgfx15PixelDataWidgetE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[17b]"></a>touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const &rArr; touchgfx::Rect::operator &=(const touchgfx::Rect&) &rArr; touchgfx::Rect::intersect(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 27]<UL><LI> sparsecontainerlist.o(.constdata__ZTV19SparseContainerList)
<LI> touchforwarder.o(.constdata__ZTV14TouchForwarder)
<LI> clickablecontainer.o(.constdata__ZTVN8touchgfx18ClickableContainerE)
<LI> particleeffect.o(.constdata__ZTV14ParticleEffect)
<LI> scrollingmenu.o(.constdata__ZTV13ScrollingMenu)
<LI> particleeffect.o(.constdata__ZTV8Particle)
<LI> mainview.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> mainview.o(.constdata__ZTV14ImageContainer)
<LI> mainview.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
<LI> mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_13AnimatedImageEEE)
<LI> mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6CircleEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_6ButtonEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
<LI> mjpegwidget.o(.constdata__ZTVN8touchgfx11MJPEGWidgetE)
<LI> animatedimage.o(.constdata__ZTVN8touchgfx13AnimatedImageE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> circle.o(.constdata__ZTVN8touchgfx6CircleE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> pixeldatawidget.o(.constdata__ZTVN8touchgfx15PixelDataWidgetE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[178]"></a>touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const &rArr; touchgfx::Rect::operator &=(const touchgfx::Rect&) &rArr; touchgfx::Rect::intersect(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 27]<UL><LI> sparsecontainerlist.o(.constdata__ZTV19SparseContainerList)
<LI> touchforwarder.o(.constdata__ZTV14TouchForwarder)
<LI> clickablecontainer.o(.constdata__ZTVN8touchgfx18ClickableContainerE)
<LI> particleeffect.o(.constdata__ZTV14ParticleEffect)
<LI> scrollingmenu.o(.constdata__ZTV13ScrollingMenu)
<LI> particleeffect.o(.constdata__ZTV8Particle)
<LI> mainview.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> mainview.o(.constdata__ZTV14ImageContainer)
<LI> mainview.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
<LI> mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_13AnimatedImageEEE)
<LI> mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6CircleEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_6ButtonEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
<LI> mjpegwidget.o(.constdata__ZTVN8touchgfx11MJPEGWidgetE)
<LI> animatedimage.o(.constdata__ZTVN8touchgfx13AnimatedImageE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> circle.o(.constdata__ZTVN8touchgfx6CircleE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> pixeldatawidget.o(.constdata__ZTVN8touchgfx15PixelDataWidgetE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[405]"></a>touchgfx::Drawable::getAbsoluteRect() const</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, drawable.o(i._ZNK8touchgfx8Drawable15getAbsoluteRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ClickableContainer::handleClickEvent(const touchgfx::ClickEvent&)
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ClickableContainer::handleDragEvent(const touchgfx::DragEvent&)
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PixelDataWidget::draw(const touchgfx::Rect&) const
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(const touchgfx::Rect&) const
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::draw(const touchgfx::Rect&) const
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getCachedAbsY()
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getCachedAbsX()
</UL>

<P><STRONG><a name="[17c]"></a>touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE))
<BR>[Address Reference Count : 27]<UL><LI> sparsecontainerlist.o(.constdata__ZTV19SparseContainerList)
<LI> touchforwarder.o(.constdata__ZTV14TouchForwarder)
<LI> clickablecontainer.o(.constdata__ZTVN8touchgfx18ClickableContainerE)
<LI> particleeffect.o(.constdata__ZTV14ParticleEffect)
<LI> scrollingmenu.o(.constdata__ZTV13ScrollingMenu)
<LI> particleeffect.o(.constdata__ZTV8Particle)
<LI> mainview.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> mainview.o(.constdata__ZTV14ImageContainer)
<LI> mainview.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
<LI> mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_13AnimatedImageEEE)
<LI> mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6CircleEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_6ButtonEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
<LI> mjpegwidget.o(.constdata__ZTVN8touchgfx11MJPEGWidgetE)
<LI> animatedimage.o(.constdata__ZTVN8touchgfx13AnimatedImageE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> circle.o(.constdata__ZTVN8touchgfx6CircleE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> pixeldatawidget.o(.constdata__ZTVN8touchgfx15PixelDataWidgetE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[24c]"></a>touchgfx::LCD16bpp::framebufferFormat() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp17framebufferFormatEv))
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[24d]"></a>touchgfx::LCD16bpp::framebufferStride() const</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp17framebufferStrideEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::framebufferStride() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[24e]"></a>touchgfx::LCD16bpp::getColorFrom24BitRGB(unsigned char, unsigned char, unsigned char) const</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp20getColorFrom24BitRGBEhhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::LCD16bpp::getColorFrom24BitRGB(unsigned char, unsigned char, unsigned char) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[24b]"></a>touchgfx::LCD16bpp::bitDepth() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp8bitDepthEv))
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[1eb]"></a>touchgfx::TextArea::getSolidRect() const</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, mainviewbase.o(i._ZNK8touchgfx8TextArea12getSolidRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::TextArea::getSolidRect() const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[1fc]"></a>touchgfx::TextArea::getTextWidth() const</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, textarea.o(i._ZNK8touchgfx8TextArea12getTextWidthEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextArea::getTextWidth() const &rArr; touchgfx::TypedText::getText() const &rArr; touchgfx::TypedText::assertValid() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getFont() const
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::hasValidId() const
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getTextDirection() const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[1ef]"></a>touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const</STRONG> (Thumb, 144 bytes, Stack size 136 bytes, textarea.o(i._ZNK8touchgfx8TextArea19calculateTextHeightEPKtz))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const &rArr; touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, const touchgfx::Font*, short) &rArr; touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list, const unsigned short*)
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getFont() const
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::hasValidId() const
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, const touchgfx::Font*, short)
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getTextDirection() const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEEE)
<LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[1f9]"></a>touchgfx::TextArea::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 164 bytes, Stack size 88 bytes, textarea.o(i._ZNK8touchgfx8TextArea4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextArea::draw(const touchgfx::Rect&) const &rArr; touchgfx::TypedText::getText() const &rArr; touchgfx::TypedText::assertValid() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getFont() const
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::hasValidId() const
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, ...)
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getTextDirection() const
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getAlignment() const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[4a1]"></a>touchgfx::ConstFont::find(unsigned short) const</STRONG> (Thumb, 68 bytes, Stack size 20 bytes, constfont.o(i._ZNK8touchgfx9ConstFont4findEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::ConstFont::find(unsigned short) const
</UL>
<BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ConstFont::getGlyph(unsigned short, const unsigned char*&, unsigned char&) const
</UL>

<P><STRONG><a name="[206]"></a>touchgfx::ConstFont::getGlyph(unsigned short, const unsigned char*&, unsigned char&) const</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, constfont.o(i._ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = touchgfx::ConstFont::getGlyph(unsigned short, const unsigned char*&, unsigned char&) const &rArr; touchgfx::ConstFont::find(unsigned short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ConstFont::find(unsigned short) const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[177]"></a>touchgfx::Container::getSolidRect() const</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, container.o(i._ZNK8touchgfx9Container12getSolidRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Container::getSolidRect() const
</UL>
<BR>[Address Reference Count : 5]<UL><LI> sparsecontainerlist.o(.constdata__ZTV19SparseContainerList)
<LI> clickablecontainer.o(.constdata__ZTVN8touchgfx18ClickableContainerE)
<LI> scrollingmenu.o(.constdata__ZTV13ScrollingMenu)
<LI> mainview.o(.constdata__ZTV14ImageContainer)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
</UL>
<P><STRONG><a name="[176]"></a>touchgfx::Container::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = touchgfx::Container::draw(const touchgfx::Rect&) const &rArr; touchgfx::Rect::operator &(const touchgfx::Rect&) const &rArr; touchgfx::Rect::operator &=(const touchgfx::Rect&) &rArr; touchgfx::Rect::intersect(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::isEmpty() const
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw(touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 5]<UL><LI> sparsecontainerlist.o(.constdata__ZTV19SparseContainerList)
<LI> clickablecontainer.o(.constdata__ZTVN8touchgfx18ClickableContainerE)
<LI> scrollingmenu.o(.constdata__ZTV13ScrollingMenu)
<LI> mainview.o(.constdata__ZTV14ImageContainer)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
</UL>
<P><STRONG><a name="[3ed]"></a>touchgfx::GlyphNode::top() const</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, font.o(i._ZNK8touchgfx9GlyphNode3topEv))
<BR><BR>[Called By]<UL><LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustThaiGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*)
</UL>

<P><STRONG><a name="[3f0]"></a>touchgfx::GlyphNode::advance() const</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, font.o(i._ZNK8touchgfx9GlyphNode7advanceEv))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidthLTR(unsigned char, const unsigned short*, std::__va_list) const
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&)
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&)
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::WideTextInternalStruct(touchgfx::TextProvider&, unsigned short, unsigned char, const touchgfx::Font*, touchgfx::WideTextAction)
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool)
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool)
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::stringWidth(touchgfx::TextProvider&, const touchgfx::Font&, int, unsigned char)
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustThaiGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*)
</UL>

<P><STRONG><a name="[1a1]"></a>touchgfx::TouchArea::getSolidRect() const</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, touchforwarder.o(i._ZNK8touchgfx9TouchArea12getSolidRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::TouchArea::getSolidRect() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchforwarder.o(.constdata__ZTV14TouchForwarder)
</UL>
<P><STRONG><a name="[1a0]"></a>touchgfx::TouchArea::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, touchforwarder.o(i._ZNK8touchgfx9TouchArea4drawERKNS_4RectE))
<BR>[Address Reference Count : 1]<UL><LI> touchforwarder.o(.constdata__ZTV14TouchForwarder)
</UL>
<P><STRONG><a name="[40f]"></a>touchgfx::TypedText::hasValidId() const</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, mainviewbase.o(i._ZNK8touchgfx9TypedText10hasValidIdEv))
<BR><BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(const touchgfx::Rect&) const
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextWidth() const
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::draw(const touchgfx::Rect&) const
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextHeight()
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::getTextHeight()
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::getTextWidth() const
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
</UL>

<P><STRONG><a name="[4a2]"></a>touchgfx::TypedText::assertValid() const</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fontcache.o(i._ZNK8touchgfx9TypedText11assertValidEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::TypedText::assertValid() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getFont() const
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getTextDirection() const
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getAlignment() const
</UL>

<P><STRONG><a name="[491]"></a>touchgfx::TypedText::getAlignment() const</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, textarea.o(i._ZNK8touchgfx9TypedText12getAlignmentEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::TypedText::getAlignment() const &rArr; touchgfx::TypedText::assertValid() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::assertValid() const
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(const touchgfx::Rect&) const
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::draw(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[490]"></a>touchgfx::TypedText::getTextDirection() const</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, textarea.o(i._ZNK8touchgfx9TypedText16getTextDirectionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::TypedText::getTextDirection() const &rArr; touchgfx::TypedText::assertValid() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::assertValid() const
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(const touchgfx::Rect&) const
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextWidth() const
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::draw(const touchgfx::Rect&) const
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::getTextWidth() const
</UL>

<P><STRONG><a name="[48f]"></a>touchgfx::TypedText::getFont() const</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, mainviewbase.o(i._ZNK8touchgfx9TypedText7getFontEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::TypedText::getFont() const &rArr; touchgfx::TypedText::assertValid() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::assertValid() const
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(const touchgfx::Rect&) const
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextWidth() const
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::draw(const touchgfx::Rect&) const
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::getTextWidth() const
</UL>

<P><STRONG><a name="[410]"></a>touchgfx::TypedText::getText() const</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, mainviewbase.o(i._ZNK8touchgfx9TypedText7getTextEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::TypedText::getText() const &rArr; touchgfx::TypedText::assertValid() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::assertValid() const
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::getText(unsigned short) const
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(const touchgfx::Rect&) const
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextWidth() const
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::draw(const touchgfx::Rect&) const
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextHeight()
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::getTextHeight()
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::getTextWidth() const
</UL>

<P><STRONG><a name="[1bd]"></a>thunk{-4} to ScreenSaverPresenter::gotoScreenSaverMode()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screensaverpresenter.o(i._ZThn4_N20ScreenSaverPresenter19gotoScreenSaverModeEv))
<BR>[Address Reference Count : 1]<UL><LI> screensaverpresenter.o(.constdata__ZTV20ScreenSaverPresenter)
</UL>
<P><STRONG><a name="[4a7]"></a>__ARM_fpclassifyf</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, fpclassifyf.o(i.__ARM_fpclassifyf))
<BR><BR>[Called By]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
</UL>

<P><STRONG><a name="[33e]"></a>__aeabi_vec_ctor_nocookie_nodtor</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, aeabi_vec_ctor_nocookie_nodtor.o(i.__aeabi_vec_ctor_nocookie_nodtor))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7DMA::STM32F7DMA()
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParticleEffect::ParticleEffect()
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SparseContainerItems&lang;ImageContainer, (int)5&rang;::SparseContainerItems()
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::Vector()
</UL>

<P><STRONG><a name="[330]"></a>__cxa_guard_acquire</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, cxa_guard_acquire.o(i.__cxa_guard_acquire))
<BR><BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL& touchgfx::touchgfx_generic_init&lang;STM32F7HAL&rang;(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, short, short, unsigned short*, unsigned, unsigned)
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_40_4bpp()
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_20_4bpp()
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_10_4bpp()
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_SairaCondensed_Medium_22_4bpp()
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_SairaCondensed_Medium_16_4bpp()
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_SairaCondensed_Medium_14_4bpp()
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_BilinearInterpolation()
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_BilinearInterpolation()
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_BilinearInterpolation()
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_NearestNeighbor()
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_BilinearInterpolation()
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_BilinearInterpolation()
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888_BilinearInterpolation()
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_NearestNeighbor()
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_NearestNeighbor()
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_NearestNeighbor()
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_NearestNeighbor()
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888_NearestNeighbor()
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4_BilinearInterpolation()
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4_NearestNeighbor()
</UL>

<P><STRONG><a name="[1e4]"></a>__cxa_pure_virtual</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, pure_virt.o(i.__cxa_pure_virtual))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __cxa_pure_virtual &rArr; __rt_SIGPVFN &rArr; __rt_SIGPVFN_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGPVFN
</UL>
<BR>[Address Reference Count : 9]<UL><LI> mainview.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> abstractpartition.o(.constdata__ZTVN8touchgfx17AbstractPartitionE)
<LI> abstractpainter.o(.constdata__ZTVN8touchgfx15AbstractPainterE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> font.o(.constdata__ZTVN8touchgfx4FontE)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
<LI> abstractpainterrgb565.o(.constdata__ZTVN8touchgfx21AbstractPainterRGB565E)
</UL>
<P><STRONG><a name="[3b0]"></a>__hardfp_cosf</STRONG> (Thumb, 280 bytes, Stack size 8 bytes, cosf.o(i.__hardfp_cosf))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __hardfp_cosf &rArr; __mathlib_rredf2
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_rredf2
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_invalid
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Particle::init(int, int, int, bool, unsigned short)
</UL>

<P><STRONG><a name="[3b1]"></a>__hardfp_sinf</STRONG> (Thumb, 344 bytes, Stack size 16 bytes, sinf.o(i.__hardfp_sinf))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __hardfp_sinf &rArr; __mathlib_rredf2
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_rredf2
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_underflow
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_invalid
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_infnan
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassifyf
</UL>
<BR>[Called By]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Particle::init(int, int, int, bool, unsigned short)
</UL>

<P><STRONG><a name="[4a6]"></a>__mathlib_flt_infnan</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_infnan))
<BR><BR>[Called By]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosf
</UL>

<P><STRONG><a name="[4a5]"></a>__mathlib_flt_invalid</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_invalid))
<BR><BR>[Called By]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosf
</UL>

<P><STRONG><a name="[4a8]"></a>__mathlib_flt_underflow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_underflow))
<BR><BR>[Called By]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
</UL>

<P><STRONG><a name="[4a4]"></a>__mathlib_rredf2</STRONG> (Thumb, 316 bytes, Stack size 20 bytes, rredf.o(i.__mathlib_rredf2))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __mathlib_rredf2
</UL>
<BR>[Called By]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosf
</UL>

<P><STRONG><a name="[299]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, __printf_wp.o(i._is_digit))
<BR><BR>[Called By]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[10]"></a>ft5336_Init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, ft5336.o(i.ft5336_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = ft5336_Init &rArr; ft5336_I2C_InitializeIfRequired &rArr; TS_IO_Init &rArr; I2Cx_Init &rArr; I2Cx_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_IO_Delay
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft5336_I2C_InitializeIfRequired
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ft5336.o(.data)
</UL>
<P><STRONG><a name="[11]"></a>ft5336_ReadID</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, ft5336.o(i.ft5336_ReadID))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = ft5336_ReadID &rArr; TS_IO_Read &rArr; I2Cx_ReadMultiple &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_IO_Read
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft5336_I2C_InitializeIfRequired
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ft5336.o(.data)
</UL>
<P><STRONG><a name="[12]"></a>ft5336_Reset</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ft5336.o(i.ft5336_Reset))
<BR>[Address Reference Count : 1]<UL><LI> ft5336.o(.data)
</UL>
<P><STRONG><a name="[17]"></a>ft5336_TS_ClearIT</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ft5336.o(i.ft5336_TS_ClearIT))
<BR>[Address Reference Count : 1]<UL><LI> ft5336.o(.data)
</UL>
<P><STRONG><a name="[14]"></a>ft5336_TS_DetectTouch</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, ft5336.o(i.ft5336_TS_DetectTouch))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = ft5336_TS_DetectTouch &rArr; TS_IO_Read &rArr; I2Cx_ReadMultiple &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_IO_Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ft5336.o(.data)
</UL>
<P><STRONG><a name="[19]"></a>ft5336_TS_DisableIT</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ft5336.o(i.ft5336_TS_DisableIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = ft5336_TS_DisableIT &rArr; TS_IO_Write &rArr; I2Cx_WriteMultiple &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_IO_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft5336_TS_Start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ft5336.o(.data)
</UL>
<P><STRONG><a name="[16]"></a>ft5336_TS_EnableIT</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ft5336.o(i.ft5336_TS_EnableIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = ft5336_TS_EnableIT &rArr; TS_IO_Write &rArr; I2Cx_WriteMultiple &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_IO_Write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ft5336.o(.data)
</UL>
<P><STRONG><a name="[2df]"></a>ft5336_TS_GetGestureID</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, ft5336.o(i.ft5336_TS_GetGestureID))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = ft5336_TS_GetGestureID &rArr; TS_IO_Read &rArr; I2Cx_ReadMultiple &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_IO_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_TS_Get_GestureId
</UL>

<P><STRONG><a name="[2dd]"></a>ft5336_TS_GetTouchInfo</STRONG> (Thumb, 200 bytes, Stack size 32 bytes, ft5336.o(i.ft5336_TS_GetTouchInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = ft5336_TS_GetTouchInfo &rArr; TS_IO_Read &rArr; I2Cx_ReadMultiple &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_IO_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_TS_GetState
</UL>

<P><STRONG><a name="[15]"></a>ft5336_TS_GetXY</STRONG> (Thumb, 282 bytes, Stack size 40 bytes, ft5336.o(i.ft5336_TS_GetXY))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = ft5336_TS_GetXY &rArr; TS_IO_Read &rArr; I2Cx_ReadMultiple &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_IO_Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ft5336.o(.data)
</UL>
<P><STRONG><a name="[18]"></a>ft5336_TS_ITStatus</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ft5336.o(i.ft5336_TS_ITStatus))
<BR>[Address Reference Count : 1]<UL><LI> ft5336.o(.data)
</UL>
<P><STRONG><a name="[13]"></a>ft5336_TS_Start</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ft5336.o(i.ft5336_TS_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = ft5336_TS_Start &rArr; ft5336_TS_DisableIT &rArr; TS_IO_Write &rArr; I2Cx_WriteMultiple &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft5336_TS_DisableIT
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ft5336.o(.data)
</UL>
<P><STRONG><a name="[4ca]"></a>jcopy_sample_rows</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, jutils.o(i.jcopy_sample_rows))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = jcopy_sample_rows
</UL>
<BR>[Calls]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int_upsample
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;h2v2_upsample
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;merged_2v_upsample
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grayscale_convert
</UL>

<P><STRONG><a name="[4cb]"></a>jdiv_round_up</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, jutils.o(i.jdiv_round_up))
<BR><BR>[Called By]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;per_scan_setup
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initial_setup
</UL>

<P><STRONG><a name="[4cc]"></a>jinit_1pass_quantizer</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, jquant1.o(i.jinit_1pass_quantizer))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = jinit_1pass_quantizer &rArr; create_colormap &rArr; select_ncolors
</UL>
<BR>[Calls]<UL><LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_colormap
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_colorindex
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_fs_workspace
</UL>
<BR>[Called By]<UL><LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;master_selection
</UL>

<P><STRONG><a name="[4ce]"></a>jinit_2pass_quantizer</STRONG> (Thumb, 234 bytes, Stack size 24 bytes, jquant2.o(i.jinit_2pass_quantizer))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = jinit_2pass_quantizer &rArr; init_error_limit
</UL>
<BR>[Calls]<UL><LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_error_limit
</UL>
<BR>[Called By]<UL><LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;master_selection
</UL>

<P><STRONG><a name="[4ef]"></a>jinit_arith_decoder</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, jdarith.o(i.jinit_arith_decoder))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = jinit_arith_decoder
</UL>
<BR>[Called By]<UL><LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;master_selection
</UL>

<P><STRONG><a name="[4d0]"></a>jinit_color_deconverter</STRONG> (Thumb, 358 bytes, Stack size 24 bytes, jdcolor.o(i.jinit_color_deconverter))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = jinit_color_deconverter &rArr; build_ycc_rgb_table
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;build_ycc_rgb_table
</UL>
<BR>[Called By]<UL><LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;master_selection
</UL>

<P><STRONG><a name="[4d2]"></a>jinit_d_coef_controller</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, jdcoefct.o(i.jinit_d_coef_controller))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = jinit_d_coef_controller
</UL>
<BR>[Calls]<UL><LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;master_selection
</UL>

<P><STRONG><a name="[4d3]"></a>jinit_d_main_controller</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, jdmainct.o(i.jinit_d_main_controller))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = jinit_d_main_controller &rArr; alloc_funny_pointers
</UL>
<BR>[Calls]<UL><LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_funny_pointers
</UL>
<BR>[Called By]<UL><LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;master_selection
</UL>

<P><STRONG><a name="[4d5]"></a>jinit_d_post_controller</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, jdpostct.o(i.jinit_d_post_controller))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = jinit_d_post_controller
</UL>
<BR>[Calls]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jround_up
</UL>
<BR>[Called By]<UL><LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;master_selection
</UL>

<P><STRONG><a name="[4f0]"></a>jinit_huff_decoder</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, jdhuff.o(i.jinit_huff_decoder))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = jinit_huff_decoder
</UL>
<BR>[Called By]<UL><LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;master_selection
</UL>

<P><STRONG><a name="[4e2]"></a>jinit_input_controller</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, jdinput.o(i.jinit_input_controller))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = jinit_input_controller
</UL>
<BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_CreateDecompress
</UL>

<P><STRONG><a name="[4d7]"></a>jinit_inverse_dct</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, jddctmgr.o(i.jinit_inverse_dct))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = jinit_inverse_dct
</UL>
<BR>[Calls]<UL><LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;master_selection
</UL>

<P><STRONG><a name="[4d8]"></a>jinit_marker_reader</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, jdmarker.o(i.jinit_marker_reader))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = jinit_marker_reader
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_marker_reader
</UL>
<BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_CreateDecompress
</UL>

<P><STRONG><a name="[4d9]"></a>jinit_master_decompress</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, jdmaster.o(i.jinit_master_decompress))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = jinit_master_decompress &rArr; master_selection &rArr; jinit_1pass_quantizer &rArr; create_colormap &rArr; select_ncolors
</UL>
<BR>[Calls]<UL><LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;master_selection
</UL>
<BR>[Called By]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_start_decompress
</UL>

<P><STRONG><a name="[4db]"></a>jinit_memory_mgr</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, jmemmgr.o(i.jinit_memory_mgr))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = jinit_memory_mgr &rArr; jpeg_get_small &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_mem_term
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_mem_init
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_get_small
</UL>
<BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_CreateDecompress
</UL>

<P><STRONG><a name="[4de]"></a>jinit_merged_upsampler</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, jdmerge.o(i.jinit_merged_upsampler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = jinit_merged_upsampler &rArr; build_ycc_rgb_table
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;build_ycc_rgb_table
</UL>
<BR>[Called By]<UL><LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;master_selection
</UL>

<P><STRONG><a name="[4e0]"></a>jinit_upsampler</STRONG> (Thumb, 266 bytes, Stack size 32 bytes, jdsample.o(i.jinit_upsampler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = jinit_upsampler
</UL>
<BR>[Calls]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jround_up
</UL>
<BR>[Called By]<UL><LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;master_selection
</UL>

<P><STRONG><a name="[3d3]"></a>jpeg_CreateDecompress</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, jdapimin.o(i.jpeg_CreateDecompress))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = jpeg_CreateDecompress &rArr; jinit_memory_mgr &rArr; jpeg_get_small &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_memory_mgr
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_marker_reader
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_input_controller
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MJPEGWidget::decodeMJPEGFrame(const unsigned char*, unsigned)
</UL>

<P><STRONG><a name="[4e8]"></a>jpeg_abort</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, jcomapi.o(i.jpeg_abort))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = jpeg_abort
</UL>
<BR>[Called By]<UL><LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_read_header
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_finish_decompress
</UL>

<P><STRONG><a name="[4c5]"></a>jpeg_alloc_huff_table</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, jcomapi.o(i.jpeg_alloc_huff_table))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = jpeg_alloc_huff_table
</UL>
<BR>[Called By]<UL><LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_dht
</UL>

<P><STRONG><a name="[4c7]"></a>jpeg_alloc_quant_table</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, jcomapi.o(i.jpeg_alloc_quant_table))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = jpeg_alloc_quant_table
</UL>
<BR>[Called By]<UL><LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_dqt
</UL>

<P><STRONG><a name="[4e3]"></a>jpeg_calc_output_dimensions</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, jdmaster.o(i.jpeg_calc_output_dimensions))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = jpeg_calc_output_dimensions
</UL>
<BR>[Calls]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;use_merged_upsample
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_core_output_dimensions
</UL>
<BR>[Called By]<UL><LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;master_selection
</UL>

<P><STRONG><a name="[4e6]"></a>jpeg_consume_input</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, jdapimin.o(i.jpeg_consume_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = jpeg_consume_input &rArr; default_decompress_parms
</UL>
<BR>[Calls]<UL><LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;default_decompress_parms
</UL>
<BR>[Called By]<UL><LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_read_header
</UL>

<P><STRONG><a name="[4e4]"></a>jpeg_core_output_dimensions</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, jdinput.o(i.jpeg_core_output_dimensions))
<BR><BR>[Called By]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_calc_output_dimensions
</UL>

<P><STRONG><a name="[4bc]"></a>jpeg_destroy</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, jcomapi.o(i.jpeg_destroy))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = jpeg_destroy
</UL>
<BR>[Called By]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_destroy_decompress
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_exit
</UL>

<P><STRONG><a name="[3d9]"></a>jpeg_destroy_decompress</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, jdapimin.o(i.jpeg_destroy_decompress))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = jpeg_destroy_decompress &rArr; jpeg_destroy
</UL>
<BR>[Calls]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_destroy
</UL>
<BR>[Called By]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MJPEGWidget::decodeMJPEGFrame(const unsigned char*, unsigned)
</UL>

<P><STRONG><a name="[3d8]"></a>jpeg_finish_decompress</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, jdapimin.o(i.jpeg_finish_decompress))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = jpeg_finish_decompress &rArr; jpeg_abort
</UL>
<BR>[Calls]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_abort
</UL>
<BR>[Called By]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MJPEGWidget::decodeMJPEGFrame(const unsigned char*, unsigned)
</UL>

<P><STRONG><a name="[4c1]"></a>jpeg_free_large</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, jmemnobs.o(i.jpeg_free_large))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = jpeg_free_large &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_pool
</UL>

<P><STRONG><a name="[4c2]"></a>jpeg_free_small</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, jmemnobs.o(i.jpeg_free_small))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = jpeg_free_small &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;self_destruct
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_pool
</UL>

<P><STRONG><a name="[4ae]"></a>jpeg_get_large</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, jmemnobs.o(i.jpeg_get_large))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = jpeg_get_large &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_large
</UL>

<P><STRONG><a name="[4af]"></a>jpeg_get_small</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, jmemnobs.o(i.jpeg_get_small))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = jpeg_get_small &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_memory_mgr
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_small
</UL>

<P><STRONG><a name="[ff]"></a>jpeg_idct_float</STRONG> (Thumb, 810 bytes, Stack size 296 bytes, jidctflt.o(i.jpeg_idct_float))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = jpeg_idct_float
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jddctmgr.o(i.start_pass)
</UL>
<P><STRONG><a name="[fe]"></a>jpeg_idct_ifast</STRONG> (Thumb, 748 bytes, Stack size 380 bytes, jidctfst.o(i.jpeg_idct_ifast))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = jpeg_idct_ifast
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jddctmgr.o(i.start_pass)
</UL>
<P><STRONG><a name="[fd]"></a>jpeg_idct_islow</STRONG> (Thumb, 900 bytes, Stack size 376 bytes, jidctint.o(i.jpeg_idct_islow))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = jpeg_idct_islow
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jddctmgr.o(i.start_pass)
</UL>
<P><STRONG><a name="[50c]"></a>jpeg_mem_available</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, jmemnobs.o(i.jpeg_mem_available))
<BR><BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realize_virt_arrays
</UL>

<P><STRONG><a name="[4dc]"></a>jpeg_mem_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, jmemnobs.o(i.jpeg_mem_init))
<BR><BR>[Called By]<UL><LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_memory_mgr
</UL>

<P><STRONG><a name="[3d4]"></a>jpeg_mem_src</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, jdatasrc.o(i.jpeg_mem_src))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = jpeg_mem_src
</UL>
<BR>[Called By]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MJPEGWidget::decodeMJPEGFrame(const unsigned char*, unsigned)
</UL>

<P><STRONG><a name="[4dd]"></a>jpeg_mem_term</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, jmemnobs.o(i.jpeg_mem_term))
<BR><BR>[Called By]<UL><LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_memory_mgr
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;self_destruct
</UL>

<P><STRONG><a name="[50d]"></a>jpeg_open_backing_store</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, jmemnobs.o(i.jpeg_open_backing_store))
<BR><BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realize_virt_arrays
</UL>

<P><STRONG><a name="[3d5]"></a>jpeg_read_header</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, jdapimin.o(i.jpeg_read_header))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = jpeg_read_header &rArr; jpeg_consume_input &rArr; default_decompress_parms
</UL>
<BR>[Calls]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_abort
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_consume_input
</UL>
<BR>[Called By]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MJPEGWidget::decodeMJPEGFrame(const unsigned char*, unsigned)
</UL>

<P><STRONG><a name="[3d7]"></a>jpeg_read_scanlines</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, jdapistd.o(i.jpeg_read_scanlines))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = jpeg_read_scanlines
</UL>
<BR>[Called By]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MJPEGWidget::decodeMJPEGFrame(const unsigned char*, unsigned)
</UL>

<P><STRONG><a name="[ef]"></a>jpeg_resync_to_restart</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, jdmarker.o(i.jpeg_resync_to_restart))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = jpeg_resync_to_restart &rArr; next_marker
</UL>
<BR>[Calls]<UL><LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;next_marker
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdatasrc.o(i.jpeg_mem_src)
</UL>
<P><STRONG><a name="[3d6]"></a>jpeg_start_decompress</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, jdapistd.o(i.jpeg_start_decompress))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = jpeg_start_decompress &rArr; jinit_master_decompress &rArr; master_selection &rArr; jinit_1pass_quantizer &rArr; create_colormap &rArr; select_ncolors
</UL>
<BR>[Calls]<UL><LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_pass_setup
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_master_decompress
</UL>
<BR>[Called By]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MJPEGWidget::decodeMJPEGFrame(const unsigned char*, unsigned)
</UL>

<P><STRONG><a name="[3d2]"></a>jpeg_std_error</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, jerror.o(i.jpeg_std_error))
<BR><BR>[Called By]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MJPEGWidget::decodeMJPEGFrame(const unsigned char*, unsigned)
</UL>

<P><STRONG><a name="[4d6]"></a>jround_up</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, jutils.o(i.jround_up))
<BR><BR>[Called By]<UL><LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_upsampler
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_d_post_controller
</UL>

<P><STRONG><a name="[282]"></a>main</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 388 + Unknown Stack Size
<LI>Call Chain = main &rArr; touchgfx::hw_init() &rArr; BSP_QSPI_Init &rArr; QSPI_DummyCyclesCfg &rArr; QSPI_WriteEnable &rArr; HAL_QSPI_Command &rArr; QSPI_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::hw_init()
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::setupBuffer(unsigned char*, unsigned)
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::touchgfx_init()
</UL>
<BR>[Called By]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[504]"></a>pvPortMalloc</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, heap_2.o(i.pvPortMalloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationMallocFailedHook
</UL>
<BR>[Called By]<UL><LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
</UL>

<P><STRONG><a name="[522]"></a>pvTaskIncrementMutexHeldCount</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, tasks.o(i.pvTaskIncrementMutexHeldCount))
<BR><BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[527]"></a>pxPortInitialiseStack</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, port.o(i.pxPortInitialiseStack))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pxPortInitialiseStack
</UL>
<BR>[Called By]<UL><LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
</UL>

<P><STRONG><a name="[4fa]"></a>uxListRemove</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, list.o(i.uxListRemove))
<BR><BR>[Called By]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityInherit
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
</UL>

<P><STRONG><a name="[500]"></a>vApplicationIdleHook</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, oswrappers.o(i.vApplicationIdleHook))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = vApplicationIdleHook &rArr; vTaskSetApplicationTaskTag
</UL>
<BR>[Calls]<UL><LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSetApplicationTaskTag
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
</UL>

<P><STRONG><a name="[505]"></a>vApplicationMallocFailedHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, oswrappers.o(i.vApplicationMallocFailedHook))
<BR><BR>[Calls]<UL><LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationMallocFailedHook
</UL>
<BR>[Called By]<UL><LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationMallocFailedHook
</UL>

<P><STRONG><a name="[515]"></a>vApplicationStackOverflowHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, oswrappers.o(i.vApplicationStackOverflowHook))
<BR><BR>[Calls]<UL><LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationStackOverflowHook
</UL>
<BR>[Called By]<UL><LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationStackOverflowHook
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
</UL>

<P><STRONG><a name="[525]"></a>vListInitialise</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, list.o(i.vListInitialise))
<BR><BR>[Called By]<UL><LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
</UL>

<P><STRONG><a name="[526]"></a>vListInitialiseItem</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, list.o(i.vListInitialiseItem))
<BR><BR>[Called By]<UL><LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
</UL>

<P><STRONG><a name="[4f5]"></a>vListInsert</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, list.o(i.vListInsert))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>

<P><STRONG><a name="[519]"></a>vListInsertEnd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, list.o(i.vListInsertEnd))
<BR><BR>[Called By]<UL><LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityInherit
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
</UL>

<P><STRONG><a name="[4f9]"></a>vPortEnterCritical</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, port.o(i.vPortEnterCritical))
<BR><BR>[Called By]<UL><LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSetApplicationTaskTag
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
</UL>

<P><STRONG><a name="[4fb]"></a>vPortExitCritical</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, port.o(i.vPortExitCritical))
<BR><BR>[Called By]<UL><LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSetApplicationTaskTag
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
</UL>

<P><STRONG><a name="[4fc]"></a>vPortFree</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, heap_2.o(i.vPortFree))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>
<BR>[Called By]<UL><LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
</UL>

<P><STRONG><a name="[51e]"></a>vPortSetupTimerInterrupt</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, port.o(i.vPortSetupTimerInterrupt))
<BR><BR>[Called By]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[516]"></a>vPortValidateInterruptPriority</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, port.o(i.vPortValidateInterruptPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vPortValidateInterruptPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortGetIPSR
</UL>
<BR>[Called By]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
</UL>

<P><STRONG><a name="[503]"></a>vTaskMissedYield</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tasks.o(i.vTaskMissedYield))
<BR><BR>[Called By]<UL><LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
</UL>

<P><STRONG><a name="[518]"></a>vTaskPlaceOnEventList</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, tasks.o(i.vTaskPlaceOnEventList))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>
<BR>[Called By]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[51a]"></a>vTaskPriorityInherit</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, tasks.o(i.vTaskPriorityInherit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = vTaskPriorityInherit
</UL>
<BR>[Calls]<UL><LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[514]"></a>vTaskSetApplicationTaskTag</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, tasks.o(i.vTaskSetApplicationTaskTag))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = vTaskSetApplicationTaskTag
</UL>
<BR>[Calls]<UL><LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationIdleHook
</UL>

<P><STRONG><a name="[523]"></a>vTaskSetTimeOutState</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, tasks.o(i.vTaskSetTimeOutState))
<BR><BR>[Called By]<UL><LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[4ee]"></a>vTaskStartScheduler</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, tasks.o(i.vTaskStartScheduler))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = vTaskStartScheduler &rArr; xTaskGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>
<BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4f7]"></a>vTaskSuspendAll</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, tasks.o(i.vTaskSuspendAll))
<BR><BR>[Called By]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
</UL>

<P><STRONG><a name="[288]"></a>vTaskSwitchContext</STRONG> (Thumb, 154 bytes, Stack size 8 bytes, tasks.o(i.vTaskSwitchContext))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = vTaskSwitchContext &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationStackOverflowHook
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCallApplicationTaskHook
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>

<P><STRONG><a name="[51b]"></a>xPortStartScheduler</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, port.o(i.xPortStartScheduler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xPortStartScheduler
</UL>
<BR>[Calls]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortSetupTimerInterrupt
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___6_port_c_39a90d8d__prvEnableVFP
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___6_port_c_39a90d8d__prvStartFirstTask
</UL>
<BR>[Called By]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[3b3]"></a>xQueueGenericCreate</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, queue.o(i.xQueueGenericCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>
<BR>[Called By]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::initialize()
</UL>

<P><STRONG><a name="[3b7]"></a>xQueueGenericReceive</STRONG> (Thumb, 342 bytes, Stack size 56 bytes, queue.o(i.xQueueGenericReceive))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSetTimeOutState
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityInherit
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvTaskIncrementMutexHeldCount
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::tryTakeFrameBufferSemaphore()
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::takeFrameBufferSemaphore()
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::waitForVSync()
</UL>

<P><STRONG><a name="[521]"></a>xQueueGenericReset</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, queue.o(i.xQueueGenericReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
</UL>

<P><STRONG><a name="[3b4]"></a>xQueueGenericSend</STRONG> (Thumb, 332 bytes, Stack size 56 bytes, queue.o(i.xQueueGenericSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSetTimeOutState
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::giveFrameBufferSemaphore()
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::initialize()
</UL>

<P><STRONG><a name="[3b5]"></a>xQueueGenericSendFromISR</STRONG> (Thumb, 194 bytes, Stack size 32 bytes, queue.o(i.xQueueGenericSendFromISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = xQueueGenericSendFromISR &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::signalVSync()
</UL>

<P><STRONG><a name="[3bc]"></a>xQueueGiveFromISR</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, queue.o(i.xQueueGiveFromISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = xQueueGiveFromISR &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::giveFrameBufferSemaphoreFromISR()
</UL>

<P><STRONG><a name="[51c]"></a>xTaskCallApplicationTaskHook</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, tasks.o(i.xTaskCallApplicationTaskHook))
<BR><BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
</UL>

<P><STRONG><a name="[524]"></a>xTaskCheckForTimeOut</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, tasks.o(i.xTaskCheckForTimeOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xTaskCheckForTimeOut
</UL>
<BR>[Calls]<UL><LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSetTimeOutState
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[4ed]"></a>xTaskGenericCreate</STRONG> (Thumb, 442 bytes, Stack size 56 bytes, tasks.o(i.xTaskGenericCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = xTaskGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialiseItem
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pxPortInitialiseStack
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[325]"></a>xTaskIncrementTick</STRONG> (Thumb, 200 bytes, Stack size 24 bytes, tasks.o(i.xTaskIncrementTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SysTick
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>

<P><STRONG><a name="[4ff]"></a>xTaskPriorityDisinherit</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, tasks.o(i.xTaskPriorityDisinherit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
</UL>

<P><STRONG><a name="[502]"></a>xTaskRemoveFromEventList</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, tasks.o(i.xTaskRemoveFromEventList))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
</UL>

<P><STRONG><a name="[4f8]"></a>xTaskResumeAll</STRONG> (Thumb, 188 bytes, Stack size 32 bytes, tasks.o(i.xTaskResumeAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
</UL>
<BR>[Called By]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
</UL>

<P><STRONG><a name="[8b]"></a>_get_lc_ctype</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_ctype_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _get_lc_ctype
</UL>
<BR>[Calls]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_ctype_2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_ctype_table.o(.text)
</UL>
<P><STRONG><a name="[11d]"></a>SparseContainerItems&lang;ImageContainer, (int)5&rang;::getElement(int, touchgfx::Container**)</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, mainview.o(t._ZN20SparseContainerItemsI14ImageContainerLi5EE10getElementEiPPN8touchgfx9ContainerE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = SparseContainerItems&lang;ImageContainer, (int)5&rang;::getElement(int, touchgfx::Container**) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::gotoStarting()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainview.o(.constdata)
</UL>
<P><STRONG><a name="[3a9]"></a>SparseContainerItems&lang;ImageContainer, (int)5&rang;::SparseContainerItems()</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, mainview.o(t._ZN20SparseContainerItemsI14ImageContainerLi5EEC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SparseContainerItems&lang;ImageContainer, (int)5&rang;::SparseContainerItems() &rArr; __aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::MainView()
</UL>

<P><STRONG><a name="[5ed]"></a>SparseContainerItems&lang;ImageContainer, (int)5&rang;::SparseContainerItems__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, mainview.o(t._ZN20SparseContainerItemsI14ImageContainerLi5EEC1Ev), UNUSED)

<P><STRONG><a name="[1be]"></a>SparseContainerItems&lang;ImageContainer, (int)5&rang;::~SparseContainerItems()</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, mainview.o(t._ZN20SparseContainerItemsI14ImageContainerLi5EED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SparseContainerItems&lang;ImageContainer, (int)5&rang;::~SparseContainerItems() &rArr; __aeabi_vec_dtor
</UL>
<BR>[Calls]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_dtor
</UL>
<BR>[Called By]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::~MainView()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainview.o(.constdata__ZTV20SparseContainerItemsI14ImageContainerLi5EE)
</UL>
<P><STRONG><a name="[5ee]"></a>SparseContainerItems&lang;ImageContainer, (int)5&rang;::~SparseContainerItems__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, mainview.o(t._ZN20SparseContainerItemsI14ImageContainerLi5EED1Ev), UNUSED)

<P><STRONG><a name="[43e]"></a>bool touchgfx::Rasterizer::render&lang;touchgfx::Renderer&rang;(T1&)</STRONG> (Thumb, 342 bytes, Stack size 56 bytes, canvas.o(t._ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 404<LI>Call Chain = bool touchgfx::Rasterizer::render&lang;touchgfx::Renderer&rang;(T1&) &rArr; touchgfx::Outline::getCells() &rArr; touchgfx::Outline::sortCells() &rArr; touchgfx::Outline::qsortCells(touchgfx::Cell*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::getScanlineWidth()
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Scanline::addSpan(int, int, unsigned, unsigned)
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Scanline::reset()
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::getCells()
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rasterizer::calculateAlpha(int) const
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Renderer::render(const touchgfx::Scanline&)
</UL>
<BR>[Called By]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::render()
</UL>

<P><STRONG><a name="[1e6]"></a>touchgfx::FadeAnimator&lang;touchgfx::AnimatedImage&rang;::handleTickEvent()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, mainview.o(t._ZN8touchgfx12FadeAnimatorINS_13AnimatedImageEE15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = touchgfx::FadeAnimator&lang;touchgfx::AnimatedImage&rang;::handleTickEvent() &rArr; touchgfx::AnimatedImage::handleTickEvent() &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimatedImage::handleTickEvent()
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::AnimatedImage&rang;::nextFadeAnimationStep()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_13AnimatedImageEEE)
</UL>
<P><STRONG><a name="[3a1]"></a>touchgfx::FadeAnimator&lang;touchgfx::AnimatedImage&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, mainview.o(t._ZN8touchgfx12FadeAnimatorINS_13AnimatedImageEE18startFadeAnimationEhtPFstsstE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::FadeAnimator&lang;touchgfx::AnimatedImage&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::registerTimerWidget(touchgfx::Drawable*)
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::AnimatedImage&rang;::nextFadeAnimationStep()
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::centerAnimatedImageDone(const touchgfx::AnimatedImage&)
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::gotoWashingPrewash()
</UL>

<P><STRONG><a name="[52c]"></a>touchgfx::FadeAnimator&lang;touchgfx::AnimatedImage&rang;::nextFadeAnimationStep()</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, mainview.o(t._ZN8touchgfx12FadeAnimatorINS_13AnimatedImageEE21nextFadeAnimationStepEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::FadeAnimator&lang;touchgfx::AnimatedImage&rang;::nextFadeAnimationStep() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::AnimatedImage&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::AnimatedImage&rang;::handleTickEvent()
</UL>

<P><STRONG><a name="[1ec]"></a>touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithOneWildcard&rang;::handleTickEvent()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, mainviewbase.o(t._ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithOneWildcard&rang;::handleTickEvent() &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithOneWildcard&rang;::nextFadeAnimationStep() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithOneWildcard&rang;::nextFadeAnimationStep()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEEE)
</UL>
<P><STRONG><a name="[3a5]"></a>touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithOneWildcard&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, mainview.o(t._ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE18startFadeAnimationEhtPFstsstE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithOneWildcard&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::registerTimerWidget(touchgfx::Drawable*)
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithOneWildcard&rang;::nextFadeAnimationStep()
</UL>
<BR>[Called By]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::fadeOutProgramTextsNow()
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::fadeOutProgramTexts()
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::updateProgramTexts()
</UL>

<P><STRONG><a name="[52d]"></a>touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithOneWildcard&rang;::nextFadeAnimationStep()</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, mainview.o(t._ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE21nextFadeAnimationStepEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithOneWildcard&rang;::nextFadeAnimationStep() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithOneWildcard&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithOneWildcard&rang;::handleTickEvent()
</UL>

<P><STRONG><a name="[34f]"></a>touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithOneWildcard&rang;::FadeAnimator()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, mainviewbase.o(t._ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEEC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithOneWildcard&rang;::FadeAnimator() &rArr; touchgfx::TextArea::TextArea() &rArr; touchgfx::Widget::Widget__sub_object() &rArr; touchgfx::Drawable::Drawable__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea()
</UL>
<BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainViewBase::MainViewBase()
</UL>

<P><STRONG><a name="[5ef]"></a>touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithOneWildcard&rang;::FadeAnimator__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, mainviewbase.o(t._ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEEC1Ev), UNUSED)

<P><STRONG><a name="[1f0]"></a>touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::handleTickEvent()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, mainviewbase.o(t._ZN8touchgfx12FadeAnimatorINS_5ImageEE15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::handleTickEvent() &rArr; touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::nextFadeAnimationStep() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::nextFadeAnimationStep()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
</UL>
<P><STRONG><a name="[399]"></a>touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, mainview.o(t._ZN8touchgfx12FadeAnimatorINS_5ImageEE18startFadeAnimationEhtPFstsstE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::registerTimerWidget(touchgfx::Drawable*)
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::nextFadeAnimationStep()
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VideoView::handleClickEvent(const touchgfx::ClickEvent&)
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::gotoStarting()
</UL>

<P><STRONG><a name="[52e]"></a>touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::nextFadeAnimationStep()</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, mainview.o(t._ZN8touchgfx12FadeAnimatorINS_5ImageEE21nextFadeAnimationStepEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::nextFadeAnimationStep() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::handleTickEvent()
</UL>

<P><STRONG><a name="[351]"></a>touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::FadeAnimator()</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, mainviewbase.o(t._ZN8touchgfx12FadeAnimatorINS_5ImageEEC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::FadeAnimator() &rArr; touchgfx::Image::Image(const touchgfx::Bitmap&) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::Image(const touchgfx::Bitmap&)
</UL>
<BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainViewBase::MainViewBase()
</UL>

<P><STRONG><a name="[5f0]"></a>touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::FadeAnimator__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, mainviewbase.o(t._ZN8touchgfx12FadeAnimatorINS_5ImageEEC1Ev), UNUSED)

<P><STRONG><a name="[1f4]"></a>touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::handleTickEvent()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, mainviewbase.o(t._ZN8touchgfx12FadeAnimatorINS_6ButtonEE15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::handleTickEvent() &rArr; touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::nextFadeAnimationStep() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::nextFadeAnimationStep()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
</UL>
<P><STRONG><a name="[38c]"></a>touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, mainview.o(t._ZN8touchgfx12FadeAnimatorINS_6ButtonEE18startFadeAnimationEhtPFstsstE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::registerTimerWidget(touchgfx::Drawable*)
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::nextFadeAnimationStep()
</UL>
<BR>[Called By]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::gotoWaitingStart()
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::gotoStarting()
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::gotoWaiting()
</UL>

<P><STRONG><a name="[52f]"></a>touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::nextFadeAnimationStep()</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, mainview.o(t._ZN8touchgfx12FadeAnimatorINS_6ButtonEE21nextFadeAnimationStepEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::nextFadeAnimationStep() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::handleTickEvent()
</UL>

<P><STRONG><a name="[352]"></a>touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::FadeAnimator()</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, mainviewbase.o(t._ZN8touchgfx12FadeAnimatorINS_6ButtonEEC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::FadeAnimator() &rArr; touchgfx::Button::Button() &rArr; touchgfx::Widget::Widget__sub_object() &rArr; touchgfx::Drawable::Drawable__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::Button()
</UL>
<BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainViewBase::MainViewBase()
</UL>

<P><STRONG><a name="[5f1]"></a>touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::FadeAnimator__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, mainviewbase.o(t._ZN8touchgfx12FadeAnimatorINS_6ButtonEEC1Ev), UNUSED)

<P><STRONG><a name="[1f6]"></a>touchgfx::FadeAnimator&lang;touchgfx::Circle&rang;::handleTickEvent()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, mainview.o(t._ZN8touchgfx12FadeAnimatorINS_6CircleEE15handleTickEventEv))
<BR>[Address Reference Count : 1]<UL><LI> mainview.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6CircleEEE)
</UL>
<P><STRONG><a name="[530]"></a>touchgfx::FadeAnimator&lang;touchgfx::Circle&rang;::nextFadeAnimationStep()</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, mainview.o(t._ZN8touchgfx12FadeAnimatorINS_6CircleEE21nextFadeAnimationStepEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::invalidate() const
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[1fa]"></a>touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::handleTickEvent()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, mainviewbase.o(t._ZN8touchgfx12FadeAnimatorINS_8TextAreaEE15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::handleTickEvent() &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::nextFadeAnimationStep() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::nextFadeAnimationStep()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
</UL>
<P><STRONG><a name="[3a6]"></a>touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, mainview.o(t._ZN8touchgfx12FadeAnimatorINS_8TextAreaEE18startFadeAnimationEhtPFstsstE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::registerTimerWidget(touchgfx::Drawable*)
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::nextFadeAnimationStep()
</UL>
<BR>[Called By]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::fadeOutProgramTextsNow()
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::fadeOutProgramTexts()
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::updateProgramTexts()
</UL>

<P><STRONG><a name="[531]"></a>touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::nextFadeAnimationStep()</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, mainview.o(t._ZN8touchgfx12FadeAnimatorINS_8TextAreaEE21nextFadeAnimationStepEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::nextFadeAnimationStep() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::handleTickEvent()
</UL>

<P><STRONG><a name="[36c]"></a>touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::FadeAnimator()</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, videoviewbase.o(t._ZN8touchgfx12FadeAnimatorINS_8TextAreaEEC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::FadeAnimator() &rArr; touchgfx::TextArea::TextArea() &rArr; touchgfx::Widget::Widget__sub_object() &rArr; touchgfx::Drawable::Drawable__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea()
</UL>
<BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VideoViewBase::VideoViewBase()
</UL>

<P><STRONG><a name="[5f2]"></a>touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::FadeAnimator__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, videoviewbase.o(t._ZN8touchgfx12FadeAnimatorINS_8TextAreaEEC1Ev), UNUSED)

<P><STRONG><a name="[1fe]"></a>touchgfx::MoveAnimator&lang;touchgfx::Image&rang;::handleTickEvent()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, mainview.o(t._ZN8touchgfx12MoveAnimatorINS_5ImageEE15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::MoveAnimator&lang;touchgfx::Image&rang;::handleTickEvent() &rArr; touchgfx::MoveAnimator&lang;touchgfx::Image&rang;::nextMoveAnimationStep() &rArr; touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*)
</UL>
<BR>[Calls]<UL><LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MoveAnimator&lang;touchgfx::Image&rang;::nextMoveAnimationStep()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainview.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
</UL>
<P><STRONG><a name="[397]"></a>touchgfx::MoveAnimator&lang;touchgfx::Image&rang;::startMoveAnimation(short, short, unsigned short, short(*)(unsigned short, short, short, unsigned short), short(*)(unsigned short, short, short, unsigned short))</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, mainview.o(t._ZN8touchgfx12MoveAnimatorINS_5ImageEE18startMoveAnimationEsstPFstsstES4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::MoveAnimator&lang;touchgfx::Image&rang;::startMoveAnimation(short, short, unsigned short, short(*)(unsigned short, short, short, unsigned short), short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::registerTimerWidget(touchgfx::Drawable*)
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MoveAnimator&lang;touchgfx::Image&rang;::nextMoveAnimationStep()
</UL>
<BR>[Called By]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::gotoStarting()
</UL>

<P><STRONG><a name="[532]"></a>touchgfx::MoveAnimator&lang;touchgfx::Image&rang;::nextMoveAnimationStep()</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, mainview.o(t._ZN8touchgfx12MoveAnimatorINS_5ImageEE21nextMoveAnimationStepEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::MoveAnimator&lang;touchgfx::Image&rang;::nextMoveAnimationStep() &rArr; touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*)
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*)
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::moveTo(short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MoveAnimator&lang;touchgfx::Image&rang;::startMoveAnimation(short, short, unsigned short, short(*)(unsigned short, short, short, unsigned short), short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MoveAnimator&lang;touchgfx::Image&rang;::handleTickEvent()
</UL>

<P><STRONG><a name="[3ab]"></a>touchgfx::MoveAnimator&lang;touchgfx::Image&rang;::MoveAnimator()</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, mainview.o(t._ZN8touchgfx12MoveAnimatorINS_5ImageEEC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = touchgfx::MoveAnimator&lang;touchgfx::Image&rang;::MoveAnimator() &rArr; touchgfx::Image::Image(const touchgfx::Bitmap&) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::Image(const touchgfx::Bitmap&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::MainView()
</UL>

<P><STRONG><a name="[5f3]"></a>touchgfx::MoveAnimator&lang;touchgfx::Image&rang;::MoveAnimator__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, mainview.o(t._ZN8touchgfx12MoveAnimatorINS_5ImageEEC1Ev), UNUSED)

<P><STRONG><a name="[1ff]"></a>touchgfx::MoveAnimator&lang;touchgfx::Button&rang;::handleTickEvent()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, mainviewbase.o(t._ZN8touchgfx12MoveAnimatorINS_6ButtonEE15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::MoveAnimator&lang;touchgfx::Button&rang;::handleTickEvent() &rArr; touchgfx::MoveAnimator&lang;touchgfx::Button&rang;::nextMoveAnimationStep() &rArr; touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*)
</UL>
<BR>[Calls]<UL><LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MoveAnimator&lang;touchgfx::Button&rang;::nextMoveAnimationStep()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_6ButtonEEE)
</UL>
<P><STRONG><a name="[398]"></a>touchgfx::MoveAnimator&lang;touchgfx::Button&rang;::startMoveAnimation(short, short, unsigned short, short(*)(unsigned short, short, short, unsigned short), short(*)(unsigned short, short, short, unsigned short))</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, mainview.o(t._ZN8touchgfx12MoveAnimatorINS_6ButtonEE18startMoveAnimationEsstPFstsstES4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::MoveAnimator&lang;touchgfx::Button&rang;::startMoveAnimation(short, short, unsigned short, short(*)(unsigned short, short, short, unsigned short), short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::registerTimerWidget(touchgfx::Drawable*)
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MoveAnimator&lang;touchgfx::Button&rang;::nextMoveAnimationStep()
</UL>
<BR>[Called By]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::gotoStarting()
</UL>

<P><STRONG><a name="[533]"></a>touchgfx::MoveAnimator&lang;touchgfx::Button&rang;::nextMoveAnimationStep()</STRONG> (Thumb, 158 bytes, Stack size 16 bytes, mainview.o(t._ZN8touchgfx12MoveAnimatorINS_6ButtonEE21nextMoveAnimationStepEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::MoveAnimator&lang;touchgfx::Button&rang;::nextMoveAnimationStep() &rArr; touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*)
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*)
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::moveTo(short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MoveAnimator&lang;touchgfx::Button&rang;::startMoveAnimation(short, short, unsigned short, short(*)(unsigned short, short, short, unsigned short), short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MoveAnimator&lang;touchgfx::Button&rang;::handleTickEvent()
</UL>

<P><STRONG><a name="[34d]"></a>touchgfx::MoveAnimator&lang;touchgfx::Button&rang;::MoveAnimator()</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, mainviewbase.o(t._ZN8touchgfx12MoveAnimatorINS_6ButtonEEC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = touchgfx::MoveAnimator&lang;touchgfx::Button&rang;::MoveAnimator() &rArr; touchgfx::Button::Button() &rArr; touchgfx::Widget::Widget__sub_object() &rArr; touchgfx::Drawable::Drawable__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::Button()
</UL>
<BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainViewBase::MainViewBase()
</UL>

<P><STRONG><a name="[5f4]"></a>touchgfx::MoveAnimator&lang;touchgfx::Button&rang;::MoveAnimator__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, mainviewbase.o(t._ZN8touchgfx12MoveAnimatorINS_6ButtonEEC1Ev), UNUSED)

<P><STRONG><a name="[3e8]"></a>touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar(unsigned short)</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, textprovider.o(t._ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::substituteGlyphs()
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustThaiGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*)
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::gsubRuleMatch(const unsigned short*, unsigned short, unsigned short, unsigned short)
</UL>

<P><STRONG><a name="[3f1]"></a>touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short)</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, textprovider.o(t._ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::fillInputBuffer()
</UL>

<P><STRONG><a name="[3fb]"></a>touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::dropFront(unsigned short)</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, textprovider.o(t._ZN8touchgfx12TextProvider14circularBufferILj10EE9dropFrontEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::dropFront(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*)
</UL>

<P><STRONG><a name="[3f5]"></a>touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::replaceAt(unsigned short, unsigned short)</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, textprovider.o(t._ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::replaceAt(unsigned short, unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*)
</UL>

<P><STRONG><a name="[3e6]"></a>touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::pushFront(unsigned short)</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, textprovider.o(t._ZN8touchgfx12TextProvider14circularBufferILj2EE9pushFrontEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::pushFront(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextChar()
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*)
</UL>

<P><STRONG><a name="[387]"></a>T2* touchgfx::makeTransition&lang;ScreenSaverView, ScreenSaverPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)</STRONG> (Thumb, 176 bytes, Stack size 32 bytes, frontendapplicationbase.o(t._ZN8touchgfx14makeTransitionI15ScreenSaverView20ScreenSaverPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = T2* touchgfx::makeTransition&lang;ScreenSaverView, ScreenSaverPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; ScreenSaverView::ScreenSaverView() &rArr; ScreenSaverViewBase::ScreenSaverViewBase() &rArr; touchgfx::Image::Image(const touchgfx::Bitmap&) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScreenSaverView::ScreenSaverView()
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScreenSaverPresenter::ScreenSaverPresenter(ScreenSaverView&)
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1& touchgfx::AbstractPartition::at&lang;touchgfx::NoTransition&rang;(unsigned short)
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::NoTransition::NoTransition()
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoScreenSaverScreenNoTransitionImpl()
</UL>

<P><STRONG><a name="[384]"></a>T2* touchgfx::makeTransition&lang;MainView, MainPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, frontendapplicationbase.o(t._ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = T2* touchgfx::makeTransition&lang;MainView, MainPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; MainView::MainView() &rArr; MainViewBase::MainViewBase() &rArr; touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::FadeAnimator() &rArr; touchgfx::Image::Image(const touchgfx::Bitmap&) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPresenter::MainPresenter(MainView&)
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::MainView()
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1& touchgfx::AbstractPartition::at&lang;touchgfx::NoTransition&rang;(unsigned short)
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::NoTransition::NoTransition()
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoMainScreenNoTransitionImpl()
</UL>

<P><STRONG><a name="[385]"></a>T2* touchgfx::makeTransition&lang;AboutView, AboutPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, frontendapplicationbase.o(t._ZN8touchgfx14makeTransitionI9AboutView14AboutPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = T2* touchgfx::makeTransition&lang;AboutView, AboutPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; AboutView::AboutView() &rArr; AboutViewBase::AboutViewBase() &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AboutView::AboutView()
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AboutPresenter::AboutPresenter(AboutView&)
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1& touchgfx::AbstractPartition::at&lang;touchgfx::NoTransition&rang;(unsigned short)
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::NoTransition::NoTransition()
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoAboutScreenNoTransitionImpl()
</UL>

<P><STRONG><a name="[386]"></a>T2* touchgfx::makeTransition&lang;VideoView, VideoPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, frontendapplicationbase.o(t._ZN8touchgfx14makeTransitionI9VideoView14VideoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = T2* touchgfx::makeTransition&lang;VideoView, VideoPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; VideoView::VideoView() &rArr; VideoViewBase::VideoViewBase() &rArr; touchgfx::Image::Image(const touchgfx::Bitmap&) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VideoView::VideoView()
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VideoPresenter::VideoPresenter(VideoView&)
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1& touchgfx::AbstractPartition::at&lang;touchgfx::NoTransition&rang;(unsigned short)
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::NoTransition::NoTransition()
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoVideoScreenNoTransitionImpl()
</UL>

<P><STRONG><a name="[534]"></a>T1& touchgfx::AbstractPartition::at&lang;touchgfx::NoTransition&rang;(unsigned short)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, frontendapplicationbase.o(t._ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t))
<BR><BR>[Called By]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;VideoView, VideoPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;AboutView, AboutPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;MainView, MainPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;ScreenSaverView, ScreenSaverPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[400]"></a>touchgfx::HAL& touchgfx::touchgfx_generic_init&lang;STM32F7HAL&rang;(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, short, short, unsigned short*, unsigned, unsigned)</STRONG> (Thumb, 184 bytes, Stack size 48 bytes, boardconfiguration.o(t._ZN8touchgfx21touchgfx_generic_initI10STM32F7HALEERNS_3HALERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEssPtjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL& touchgfx::touchgfx_generic_init&lang;STM32F7HAL&rang;(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, short, short, unsigned short*, unsigned, unsigned) &rArr; FrontendHeap::FrontendHeap() &rArr; FrontendApplication::FrontendApplication(Model&, FrontendHeap&) &rArr; FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&) &rArr; touchgfx::LCD16bpp::enableTextureMapperAll() &rArr; touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888() &rArr; touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::registerBitmapDatabase(const touchgfx::Bitmap::BitmapData*, unsigned short, unsigned short*, unsigned, unsigned)
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::setLanguage(unsigned short)
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::initialize()
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FontManager::setFontProvider(touchgfx::FontProvider*)
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BitmapDatabase::getInstanceSize()
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BitmapDatabase::getInstance()
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::HAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap()
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::touchgfx_init()
</UL>

<P><STRONG><a name="[361]"></a>T1 touchgfx::abs&lang;int&rang;(T1)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, scrollingmenu.o(t._ZN8touchgfx3absIiEET_S1_))
<BR><BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::drawCanvasWidget(const touchgfx::Rect&) const
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScrollingMenu::setSelectedItem(int)
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::calculateMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
</UL>

<P><STRONG><a name="[45e]"></a>T1 touchgfx::abs&lang;short&rang;(T1)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gestures.o(t._ZN8touchgfx3absIsEET_S1_))
<BR><BR>[Called By]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerDragEvent(unsigned short, unsigned short, unsigned short, unsigned short)
</UL>

<P><STRONG><a name="[392]"></a>void touchgfx::Circle::setArc&lang;int&rang;(T1, T1)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, mainview.o(t._ZN8touchgfx6Circle6setArcIiEEvT_S2_))
<BR><BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::handleTickEvent()
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::setupScreen()
</UL>

<P><STRONG><a name="[3c4]"></a>touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::quickRemoveAt(unsigned short)</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, application.o(t._ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::quickRemoveAt(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect()
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
</UL>

<P><STRONG><a name="[3c7]"></a>touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::add(touchgfx::Rect)</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, application.o(t._ZN8touchgfx6VectorINS_4RectELt8EE3addES1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::add(touchgfx::Rect) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::cacheDrawOperations(bool)
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
</UL>

<P><STRONG><a name="[3c8]"></a>touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::Vector()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, application.o(t._ZN8touchgfx6VectorINS_4RectELt8EEC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::Vector() &rArr; __aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::cacheDrawOperations(bool)
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::Application()
</UL>

<P><STRONG><a name="[5f5]"></a>touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::Vector__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, application.o(t._ZN8touchgfx6VectorINS_4RectELt8EEC1Ev), UNUSED)

<P><STRONG><a name="[232]"></a>touchgfx::Callback&lang;MainViewBase, const touchgfx::AbstractButton&, void, void&rang;::execute(const touchgfx::AbstractButton&)</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, mainviewbase.o(t._ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7executeES4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Callback&lang;MainViewBase, const touchgfx::AbstractButton&, void, void&rang;::execute(const touchgfx::AbstractButton&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainviewbase.o(.constdata__ZTVN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvEE)
</UL>
<P><STRONG><a name="[234]"></a>touchgfx::Callback&lang;AboutViewBase, const touchgfx::AbstractButton&, void, void&rang;::execute(const touchgfx::AbstractButton&)</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, aboutviewbase.o(t._ZN8touchgfx8CallbackI13AboutViewBaseRKNS_14AbstractButtonEvvE7executeES4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Callback&lang;AboutViewBase, const touchgfx::AbstractButton&, void, void&rang;::execute(const touchgfx::AbstractButton&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> aboutviewbase.o(.constdata__ZTVN8touchgfx8CallbackI13AboutViewBaseRKNS_14AbstractButtonEvvEE)
</UL>
<P><STRONG><a name="[236]"></a>touchgfx::Callback&lang;VideoViewBase, const touchgfx::AbstractButton&, void, void&rang;::execute(const touchgfx::AbstractButton&)</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, videoviewbase.o(t._ZN8touchgfx8CallbackI13VideoViewBaseRKNS_14AbstractButtonEvvE7executeES4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Callback&lang;VideoViewBase, const touchgfx::AbstractButton&, void, void&rang;::execute(const touchgfx::AbstractButton&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> videoviewbase.o(.constdata__ZTVN8touchgfx8CallbackI13VideoViewBaseRKNS_14AbstractButtonEvvEE)
</UL>
<P><STRONG><a name="[238]"></a>touchgfx::Callback&lang;ScreenSaverViewBase, const touchgfx::AbstractButton&, void, void&rang;::execute(const touchgfx::AbstractButton&)</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, screensaverviewbase.o(t._ZN8touchgfx8CallbackI19ScreenSaverViewBaseRKNS_14AbstractButtonEvvE7executeES4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Callback&lang;ScreenSaverViewBase, const touchgfx::AbstractButton&, void, void&rang;::execute(const touchgfx::AbstractButton&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screensaverviewbase.o(.constdata__ZTVN8touchgfx8CallbackI19ScreenSaverViewBaseRKNS_14AbstractButtonEvvEE)
</UL>
<P><STRONG><a name="[23a]"></a>touchgfx::Callback&lang;SparseContainerItems&lang;ImageContainer, (int)5&rang;, int, touchgfx::Container**, void&rang;::execute(int, touchgfx::Container**)</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, mainview.o(t._ZN8touchgfx8CallbackI20SparseContainerItemsI14ImageContainerLi5EEiPPNS_9ContainerEvE7executeEiS6_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Callback&lang;SparseContainerItems&lang;ImageContainer, (int)5&rang;, int, touchgfx::Container**, void&rang;::execute(int, touchgfx::Container**)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainview.o(.constdata__ZTVN8touchgfx8CallbackI20SparseContainerItemsI14ImageContainerLi5EEiPPNS_9ContainerEvEE)
</UL>
<P><STRONG><a name="[23b]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::execute()</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, frontendapplicationbase.o(t._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::execute()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
</UL>
<P><STRONG><a name="[382]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, frontendapplicationbase.o(t._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoScreenSaverScreenNoTransition()
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoMainScreenNoTransition()
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoVideoScreenNoTransition()
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoAboutScreenNoTransition()
</UL>

<P><STRONG><a name="[5f6]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback__sub_object(FrontendApplicationBase*, void(FrontendApplicationBase::*)())</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, frontendapplicationbase.o(t._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE), UNUSED)

<P><STRONG><a name="[23d]"></a>touchgfx::Callback&lang;MainView, const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&, void, void&rang;::execute(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, mainview.o(t._ZN8touchgfx8CallbackI8MainViewRKNS_12FadeAnimatorINS_8TextAreaEEEvvE7executeES6_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Callback&lang;MainView, const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&, void, void&rang;::execute(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainview.o(.constdata__ZTVN8touchgfx8CallbackI8MainViewRKNS_12FadeAnimatorINS_8TextAreaEEEvvEE)
</UL>
<P><STRONG><a name="[23f]"></a>touchgfx::Callback&lang;MainView, const touchgfx::AnimatedImage&, void, void&rang;::execute(const touchgfx::AnimatedImage&)</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, mainview.o(t._ZN8touchgfx8CallbackI8MainViewRKNS_13AnimatedImageEvvE7executeES4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Callback&lang;MainView, const touchgfx::AnimatedImage&, void, void&rang;::execute(const touchgfx::AnimatedImage&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainview.o(.constdata__ZTVN8touchgfx8CallbackI8MainViewRKNS_13AnimatedImageEvvEE)
</UL>
<P><STRONG><a name="[241]"></a>touchgfx::Callback&lang;MainView, int, int, void&rang;::execute(int, int)</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, mainview.o(t._ZN8touchgfx8CallbackI8MainViewiivE7executeEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Callback&lang;MainView, int, int, void&rang;::execute(int, int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainview.o(.constdata__ZTVN8touchgfx8CallbackI8MainViewiivEE)
</UL>
<P><STRONG><a name="[3aa]"></a>touchgfx::Callback&lang;MainView, int, int, void&rang;::Callback(MainView*, void(MainView::*)(int, int))</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, mainview.o(t._ZN8touchgfx8CallbackI8MainViewiivEC1EPS1_MS1_FviiE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Callback&lang;MainView, int, int, void&rang;::Callback(MainView*, void(MainView::*)(int, int))
</UL>
<BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainView::MainView()
</UL>

<P><STRONG><a name="[5f7]"></a>touchgfx::Callback&lang;MainView, int, int, void&rang;::Callback__sub_object(MainView*, void(MainView::*)(int, int))</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, mainview.o(t._ZN8touchgfx8CallbackI8MainViewiivEC1EPS1_MS1_FviiE), UNUSED)

<P><STRONG><a name="[243]"></a>touchgfx::Callback&lang;MainView, int, void, void&rang;::execute(int)</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, mainview.o(t._ZN8touchgfx8CallbackI8MainViewivvE7executeEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Callback&lang;MainView, int, void, void&rang;::execute(int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainview.o(.constdata__ZTVN8touchgfx8CallbackI8MainViewivvEE)
</UL>
<P><STRONG><a name="[245]"></a>touchgfx::Callback&lang;VideoView, const touchgfx::FadeAnimator&lang;touchgfx::Image&rang;&, void, void&rang;::execute(const touchgfx::FadeAnimator&lang;touchgfx::Image&rang;&)</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, videoview.o(t._ZN8touchgfx8CallbackI9VideoViewRKNS_12FadeAnimatorINS_5ImageEEEvvE7executeES6_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Callback&lang;VideoView, const touchgfx::FadeAnimator&lang;touchgfx::Image&rang;&, void, void&rang;::execute(const touchgfx::FadeAnimator&lang;touchgfx::Image&rang;&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> videoview.o(.constdata__ZTVN8touchgfx8CallbackI9VideoViewRKNS_12FadeAnimatorINS_5ImageEEEvvEE)
</UL>
<P><STRONG><a name="[250]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;ScreenSaverView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, boardconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenSaverViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv))
<BR>[Address Reference Count : 1]<UL><LI> boardconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI15ScreenSaverViewNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[251]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;ScreenSaverView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, boardconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenSaverViewNS2_INS1_3NilES4_EEEELt1EE7elementEt))
<BR>[Address Reference Count : 1]<UL><LI> boardconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI15ScreenSaverViewNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[252]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;ScreenSaverPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, boardconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenSaverPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv))
<BR>[Address Reference Count : 1]<UL><LI> boardconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI20ScreenSaverPresenterNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[253]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;ScreenSaverPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, boardconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenSaverPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt))
<BR>[Address Reference Count : 1]<UL><LI> boardconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI20ScreenSaverPresenterNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[254]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, boardconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv))
<BR>[Address Reference Count : 1]<UL><LI> boardconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[255]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, boardconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt))
<BR>[Address Reference Count : 1]<UL><LI> boardconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[1fd]"></a>touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::isFadeAnimationRunning() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mainviewbase.o(t._ZNK8touchgfx12FadeAnimatorINS_8TextAreaEE22isFadeAnimationRunningEv))
<BR>[Address Reference Count : 1]<UL><LI> mainviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
</UL>
<P><STRONG><a name="[3f2]"></a>touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::isFull() const</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, textprovider.o(t._ZNK8touchgfx12TextProvider14circularBufferILj10EE6isFullEv))
<BR><BR>[Called By]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::fillInputBuffer()
</UL>

<P><STRONG><a name="[450]"></a>T1 touchgfx::CWRUtil::Q5::to&lang;int&rang;() const</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, circle.o(t._ZNK8touchgfx7CWRUtil2Q52toIiEET_v))
<BR><BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::drawCanvasWidget(const touchgfx::Rect&) const
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::getMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5)
</UL>

<P><STRONG><a name="[233]"></a>touchgfx::Callback&lang;MainViewBase, const touchgfx::AbstractButton&, void, void&rang;::isValid() const</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, mainviewbase.o(t._ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv))
<BR>[Address Reference Count : 1]<UL><LI> mainviewbase.o(.constdata__ZTVN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvEE)
</UL>
<P><STRONG><a name="[235]"></a>touchgfx::Callback&lang;AboutViewBase, const touchgfx::AbstractButton&, void, void&rang;::isValid() const</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, aboutviewbase.o(t._ZNK8touchgfx8CallbackI13AboutViewBaseRKNS_14AbstractButtonEvvE7isValidEv))
<BR>[Address Reference Count : 1]<UL><LI> aboutviewbase.o(.constdata__ZTVN8touchgfx8CallbackI13AboutViewBaseRKNS_14AbstractButtonEvvEE)
</UL>
<P><STRONG><a name="[237]"></a>touchgfx::Callback&lang;VideoViewBase, const touchgfx::AbstractButton&, void, void&rang;::isValid() const</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, videoviewbase.o(t._ZNK8touchgfx8CallbackI13VideoViewBaseRKNS_14AbstractButtonEvvE7isValidEv))
<BR>[Address Reference Count : 1]<UL><LI> videoviewbase.o(.constdata__ZTVN8touchgfx8CallbackI13VideoViewBaseRKNS_14AbstractButtonEvvEE)
</UL>
<P><STRONG><a name="[239]"></a>touchgfx::Callback&lang;ScreenSaverViewBase, const touchgfx::AbstractButton&, void, void&rang;::isValid() const</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, screensaverviewbase.o(t._ZNK8touchgfx8CallbackI19ScreenSaverViewBaseRKNS_14AbstractButtonEvvE7isValidEv))
<BR>[Address Reference Count : 1]<UL><LI> screensaverviewbase.o(.constdata__ZTVN8touchgfx8CallbackI19ScreenSaverViewBaseRKNS_14AbstractButtonEvvEE)
</UL>
<P><STRONG><a name="[23c]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::isValid() const</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, frontendapplicationbase.o(t._ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
</UL>
<P><STRONG><a name="[23e]"></a>touchgfx::Callback&lang;MainView, const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&, void, void&rang;::isValid() const</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, mainview.o(t._ZNK8touchgfx8CallbackI8MainViewRKNS_12FadeAnimatorINS_8TextAreaEEEvvE7isValidEv))
<BR>[Address Reference Count : 1]<UL><LI> mainview.o(.constdata__ZTVN8touchgfx8CallbackI8MainViewRKNS_12FadeAnimatorINS_8TextAreaEEEvvEE)
</UL>
<P><STRONG><a name="[240]"></a>touchgfx::Callback&lang;MainView, const touchgfx::AnimatedImage&, void, void&rang;::isValid() const</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, mainview.o(t._ZNK8touchgfx8CallbackI8MainViewRKNS_13AnimatedImageEvvE7isValidEv))
<BR>[Address Reference Count : 1]<UL><LI> mainview.o(.constdata__ZTVN8touchgfx8CallbackI8MainViewRKNS_13AnimatedImageEvvEE)
</UL>
<P><STRONG><a name="[242]"></a>touchgfx::Callback&lang;MainView, int, int, void&rang;::isValid() const</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, mainview.o(t._ZNK8touchgfx8CallbackI8MainViewiivE7isValidEv))
<BR>[Address Reference Count : 1]<UL><LI> mainview.o(.constdata__ZTVN8touchgfx8CallbackI8MainViewiivEE)
</UL>
<P><STRONG><a name="[244]"></a>touchgfx::Callback&lang;MainView, int, void, void&rang;::isValid() const</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, mainview.o(t._ZNK8touchgfx8CallbackI8MainViewivvE7isValidEv))
<BR>[Address Reference Count : 1]<UL><LI> mainview.o(.constdata__ZTVN8touchgfx8CallbackI8MainViewivvEE)
</UL>
<P><STRONG><a name="[246]"></a>touchgfx::Callback&lang;VideoView, const touchgfx::FadeAnimator&lang;touchgfx::Image&rang;&, void, void&rang;::isValid() const</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, videoview.o(t._ZNK8touchgfx8CallbackI9VideoViewRKNS_12FadeAnimatorINS_5ImageEEEvvE7isValidEv))
<BR>[Address Reference Count : 1]<UL><LI> videoview.o(.constdata__ZTVN8touchgfx8CallbackI9VideoViewRKNS_12FadeAnimatorINS_5ImageEEEvvEE)
</UL>
<P><STRONG><a name="[511]"></a>__aeabi_d2f</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_pass
</UL>

<P><STRONG><a name="[53e]"></a>_d2f</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[50f]"></a>__aeabi_ui2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu))
<BR><BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_pass
</UL>

<P><STRONG><a name="[5f8]"></a>_dfltu</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu), UNUSED)

<P><STRONG><a name="[510]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_pass
</UL>

<P><STRONG><a name="[541]"></a>_dmul</STRONG> (Thumb, 332 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[540]"></a>__fpl_dnaninf</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, dnaninf.o(x$fpl$dnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>

<P><STRONG><a name="[542]"></a>__fpl_dretinf</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dretinf.o(x$fpl$dretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
</UL>

<P><STRONG><a name="[272]"></a>_fp_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[5f9]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[5fa]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[53f]"></a>__fpl_fretinf</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fretinf.o(x$fpl$fretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[f6]"></a>GUITask(void*)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, main.o(i._Z7GUITaskPv))
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[33a]"></a>NVIC_EnableIRQ(IRQn_Type)</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f7dma.o(i._Z14NVIC_EnableIRQ9IRQn_Type))
<BR><BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7DMA::setupFillWithAlpha(const touchgfx::BlitOp&)
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7DMA::setupDataFill(const touchgfx::BlitOp&)
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7DMA::setupDataCopy(const touchgfx::BlitOp&)
</UL>

<P><STRONG><a name="[338]"></a>NVIC_DisableIRQ(IRQn_Type)</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f7dma.o(i._Z15NVIC_DisableIRQ9IRQn_Type))
<BR><BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7DMA::setupFillWithAlpha(const touchgfx::BlitOp&)
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7DMA::setupDataFill(const touchgfx::BlitOp&)
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7DMA::setupDataCopy(const touchgfx::BlitOp&)
</UL>

<P><STRONG><a name="[33b]"></a>SCB_CleanInvalidateDCache()</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, stm32f7dma.o(i._Z25SCB_CleanInvalidateDCachev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SCB_CleanInvalidateDCache()
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7DMA::setupFillWithAlpha(const touchgfx::BlitOp&)
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7DMA::setupDataFill(const touchgfx::BlitOp&)
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7DMA::setupDataCopy(const touchgfx::BlitOp&)
</UL>

<P><STRONG><a name="[33f]"></a>NVIC_EnableIRQ(IRQn_Type)</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f7hal.o(i._Z14NVIC_EnableIRQ9IRQn_Type))
<BR><BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7HAL::enableInterrupts()
</UL>

<P><STRONG><a name="[340]"></a>NVIC_DisableIRQ(IRQn_Type)</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f7hal.o(i._Z15NVIC_DisableIRQ9IRQn_Type))
<BR><BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7HAL::disableInterrupts()
</UL>

<P><STRONG><a name="[341]"></a>NVIC_SetPriority(IRQn_Type, unsigned)</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f7hal.o(i._Z16NVIC_SetPriority9IRQn_Typej))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7HAL::configureInterrupts()
</UL>

<P><STRONG><a name="[2e0]"></a>SCB_CleanInvalidateDCache()</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, stm32f7hal.o(i._Z25SCB_CleanInvalidateDCachev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SCB_CleanInvalidateDCache()
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7HAL::flushFrameBuffer(const touchgfx::Rect&)
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_IRQHandler
</UL>

<P><STRONG><a name="[256]"></a>__sti___22_BoardConfiguration_cpp_dceb80ee</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, boardconfiguration.o(i.__sti___22_BoardConfiguration_cpp_dceb80ee))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = __sti___22_BoardConfiguration_cpp_dceb80ee &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7DMA::STM32F7DMA()
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::LCD16bpp()
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boardconfiguration.o(.init_array)
</UL>
<P><STRONG><a name="[31a]"></a>I2Cx_Error</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32746g_discovery.o(i.I2Cx_Error))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2Cx_Error &rArr; HAL_I2C_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_WriteMultiple
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_ReadMultiple
</UL>

<P><STRONG><a name="[31b]"></a>I2Cx_Init</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, stm32746g_discovery.o(i.I2Cx_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = I2Cx_Init &rArr; I2Cx_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_MspInit
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_GetState
</UL>
<BR>[Called By]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_IO_Init
</UL>

<P><STRONG><a name="[31d]"></a>I2Cx_MspInit</STRONG> (Thumb, 266 bytes, Stack size 48 bytes, stm32746g_discovery.o(i.I2Cx_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = I2Cx_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Init
</UL>

<P><STRONG><a name="[31e]"></a>I2Cx_ReadMultiple</STRONG> (Thumb, 42 bytes, Stack size 32 bytes, stm32746g_discovery.o(i.I2Cx_ReadMultiple))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = I2Cx_ReadMultiple &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Error
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_IO_Read
</UL>

<P><STRONG><a name="[31f]"></a>I2Cx_WriteMultiple</STRONG> (Thumb, 42 bytes, Stack size 32 bytes, stm32746g_discovery.o(i.I2Cx_WriteMultiple))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = I2Cx_WriteMultiple &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Error
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_IO_Write
</UL>

<P><STRONG><a name="[326]"></a>QSPI_AutoPollingMemReady</STRONG> (Thumb, 68 bytes, Stack size 96 bytes, stm32746g_discovery_qspi.o(i.QSPI_AutoPollingMemReady))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = QSPI_AutoPollingMemReady &rArr; HAL_QSPI_AutoPolling &rArr; QSPI_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_AutoPolling
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_ResetMemory
</UL>

<P><STRONG><a name="[2d1]"></a>QSPI_DummyCyclesCfg</STRONG> (Thumb, 138 bytes, Stack size 72 bytes, stm32746g_discovery_qspi.o(i.QSPI_DummyCyclesCfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = QSPI_DummyCyclesCfg &rArr; QSPI_WriteEnable &rArr; HAL_QSPI_Command &rArr; QSPI_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Transmit
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Receive
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Command
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WriteEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_QSPI_Init
</UL>

<P><STRONG><a name="[2d0]"></a>QSPI_ResetMemory</STRONG> (Thumb, 82 bytes, Stack size 72 bytes, stm32746g_discovery_qspi.o(i.QSPI_ResetMemory))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = QSPI_ResetMemory &rArr; QSPI_AutoPollingMemReady &rArr; HAL_QSPI_AutoPolling &rArr; QSPI_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Command
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_AutoPollingMemReady
</UL>
<BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_QSPI_Init
</UL>

<P><STRONG><a name="[327]"></a>QSPI_WriteEnable</STRONG> (Thumb, 102 bytes, Stack size 104 bytes, stm32746g_discovery_qspi.o(i.QSPI_WriteEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = QSPI_WriteEnable &rArr; HAL_QSPI_Command &rArr; QSPI_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Command
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_AutoPolling
</UL>
<BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_DummyCyclesCfg
</UL>

<P><STRONG><a name="[4fd]"></a>prvCopyDataFromQueue</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, queue.o(i.prvCopyDataFromQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = prvCopyDataFromQueue
</UL>
<BR>[Calls]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[4fe]"></a>prvCopyDataToQueue</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, queue.o(i.prvCopyDataToQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[501]"></a>prvUnlockQueue</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, queue.o(i.prvUnlockQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = prvUnlockQueue &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskMissedYield
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[4f4]"></a>prvAddCurrentTaskToDelayedList</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, tasks.o(i.prvAddCurrentTaskToDelayedList))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
</UL>

<P><STRONG><a name="[4f6]"></a>prvCheckTasksWaitingTermination</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, tasks.o(i.prvCheckTasksWaitingTermination))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = prvCheckTasksWaitingTermination &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
</UL>

<P><STRONG><a name="[117]"></a>prvIdleTask</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, tasks.o(i.prvIdleTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = prvIdleTask &rArr; prvCheckTasksWaitingTermination &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationIdleHook
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tasks.o(i.vTaskStartScheduler)
</UL>
<P><STRONG><a name="[528]"></a>prvResetNextTaskUnblockTime</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, tasks.o(i.prvResetNextTaskUnblockTime))
<BR><BR>[Called By]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
</UL>

<P><STRONG><a name="[116]"></a>IdleTaskHook(void*)</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, oswrappers.o(i._Z12IdleTaskHookPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IdleTaskHook(void*) &rArr; touchgfx::HAL::setMCUActive(bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::setMCUActive(bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> oswrappers.o(i.vApplicationIdleHook)
</UL>
<P><STRONG><a name="[f7]"></a>prvTaskExitError</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, port.o(i.prvTaskExitError))
<BR>[Address Reference Count : 1]<UL><LI> port.o(i.pxPortInitialiseStack)
</UL>
<P><STRONG><a name="[4c3]"></a>ft5336_I2C_InitializeIfRequired</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, ft5336.o(i.ft5336_I2C_InitializeIfRequired))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ft5336_I2C_InitializeIfRequired &rArr; TS_IO_Init &rArr; I2Cx_Init &rArr; I2Cx_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_IO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft5336_ReadID
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft5336_Init
</UL>

<P><STRONG><a name="[303]"></a>NVIC_SetPriority</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f7xx_hal_cortex.o(i.NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
</UL>

<P><STRONG><a name="[2ed]"></a>DMA_CalcBaseAndBitshift</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f7xx_hal_dma.o(i.DMA_CalcBaseAndBitshift))
<BR><BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_DeInit
</UL>

<P><STRONG><a name="[2ee]"></a>DMA_CheckFifoParam</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, stm32f7xx_hal_dma.o(i.DMA_CheckFifoParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA_CheckFifoParam
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
</UL>

<P><STRONG><a name="[2e5]"></a>DMA2D_SetConfig</STRONG> (Thumb, 156 bytes, Stack size 20 bytes, stm32f7xx_hal_dma2d.o(i.DMA2D_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = DMA2D_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Start_IT
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_BlendingStart_IT
</UL>

<P><STRONG><a name="[319]"></a>I2C_Flush_TXDR</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f7xx_hal_i2c.o(i.I2C_Flush_TXDR))
<BR><BR>[Called By]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsAcknowledgeFailed
</UL>

<P><STRONG><a name="[318]"></a>I2C_IsAcknowledgeFailed</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, stm32f7xx_hal_i2c.o(i.I2C_IsAcknowledgeFailed))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Flush_TXDR
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
</UL>

<P><STRONG><a name="[2f5]"></a>I2C_RequestMemoryRead</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, stm32f7xx_hal_i2c.o(i.I2C_RequestMemoryRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
</UL>

<P><STRONG><a name="[2f9]"></a>I2C_RequestMemoryWrite</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, stm32f7xx_hal_i2c.o(i.I2C_RequestMemoryWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
</UL>

<P><STRONG><a name="[2f6]"></a>I2C_TransferConfig</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, stm32f7xx_hal_i2c.o(i.I2C_TransferConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = I2C_TransferConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
</UL>

<P><STRONG><a name="[2f4]"></a>I2C_WaitOnFlagUntilTimeout</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, stm32f7xx_hal_i2c.o(i.I2C_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
</UL>

<P><STRONG><a name="[2f7]"></a>I2C_WaitOnSTOPFlagUntilTimeout</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, stm32f7xx_hal_i2c.o(i.I2C_WaitOnSTOPFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = I2C_WaitOnSTOPFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsAcknowledgeFailed
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
</UL>

<P><STRONG><a name="[2fa]"></a>I2C_WaitOnTXISFlagUntilTimeout</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, stm32f7xx_hal_i2c.o(i.I2C_WaitOnTXISFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsAcknowledgeFailed
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
</UL>

<P><STRONG><a name="[301]"></a>LTDC_SetConfig</STRONG> (Thumb, 464 bytes, Stack size 48 bytes, stm32f7xx_hal_ltdc.o(i.LTDC_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LTDC_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ConfigLayer
</UL>

<P><STRONG><a name="[308]"></a>QSPI_Config</STRONG> (Thumb, 424 bytes, Stack size 28 bytes, stm32f7xx_hal_qspi.o(i.QSPI_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = QSPI_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_MemoryMapped
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Command
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_AutoPolling
</UL>

<P><STRONG><a name="[306]"></a>QSPI_WaitFlagStateUntilTimeout</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, stm32f7xx_hal_qspi.o(i.QSPI_WaitFlagStateUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Transmit
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Receive
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_MemoryMapped
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Init
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Command
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_AutoPolling
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Abort
</UL>

<P><STRONG><a name="[404]"></a>touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, frontendapplicationbase.o(i._ZN8touchgfx17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::clearAllTimerWidgets()
</UL>
<BR>[Called By]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;VideoView, VideoPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;AboutView, AboutPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;MainView, MainPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;ScreenSaverView, ScreenSaverPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[407]"></a>touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, frontendapplicationbase.o(i._ZN8touchgfx18finalizeTransitionEPNS_6ScreenEPNS_9PresenterEPNS_10TransitionE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::bindTransition(touchgfx::Transition&)
</UL>
<BR>[Called By]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;VideoView, VideoPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;AboutView, AboutPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;MainView, MainPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;ScreenSaverView, ScreenSaverPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[257]"></a>__sti___21_typedtextdatabase_cpp__fonts</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, typedtextdatabase.o(i.__sti___21_typedtextdatabase_cpp__fonts))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = __sti___21_typedtextdatabase_cpp__fonts &rArr; getFont_verdana_40_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_40_4bpp()
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_20_4bpp()
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_10_4bpp()
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_SairaCondensed_Medium_22_4bpp()
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_SairaCondensed_Medium_16_4bpp()
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_SairaCondensed_Medium_14_4bpp()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> typedtextdatabase.o(.init_array)
</UL>
<P><STRONG><a name="[4e7]"></a>default_decompress_parms</STRONG> (Thumb, 292 bytes, Stack size 32 bytes, jdapimin.o(i.default_decompress_parms))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = default_decompress_parms
</UL>
<BR>[Called By]<UL><LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_consume_input
</UL>

<P><STRONG><a name="[4eb]"></a>output_pass_setup</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, jdapistd.o(i.output_pass_setup))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = output_pass_setup
</UL>
<BR>[Called By]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_start_decompress
</UL>

<P><STRONG><a name="[4b0]"></a>arith_decode</STRONG> (Thumb, 194 bytes, Stack size 24 bytes, jdarith.o(i.arith_decode))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = arith_decode &rArr; get_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu_DC_refine
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu_DC_first
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu_AC_refine
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu_AC_first
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu
</UL>

<P><STRONG><a name="[fc]"></a>decode_mcu</STRONG> (Thumb, 554 bytes, Stack size 88 bytes, jdarith.o(i.decode_mcu))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = decode_mcu &rArr; arith_decode &rArr; get_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_restart
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arith_decode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdarith.o(i.start_pass)
</UL>
<P><STRONG><a name="[f9]"></a>decode_mcu_AC_first</STRONG> (Thumb, 314 bytes, Stack size 56 bytes, jdarith.o(i.decode_mcu_AC_first))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = decode_mcu_AC_first &rArr; arith_decode &rArr; get_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_restart
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arith_decode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdarith.o(i.start_pass)
</UL>
<P><STRONG><a name="[f8]"></a>decode_mcu_AC_refine</STRONG> (Thumb, 270 bytes, Stack size 48 bytes, jdarith.o(i.decode_mcu_AC_refine))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = decode_mcu_AC_refine &rArr; arith_decode &rArr; get_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_restart
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arith_decode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdarith.o(i.start_pass)
</UL>
<P><STRONG><a name="[fa]"></a>decode_mcu_DC_first</STRONG> (Thumb, 328 bytes, Stack size 56 bytes, jdarith.o(i.decode_mcu_DC_first))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = decode_mcu_DC_first &rArr; arith_decode &rArr; get_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_restart
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arith_decode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdarith.o(i.start_pass)
</UL>
<P><STRONG><a name="[fb]"></a>decode_mcu_DC_refine</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, jdarith.o(i.decode_mcu_DC_refine))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = decode_mcu_DC_refine &rArr; arith_decode &rArr; get_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_restart
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arith_decode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdarith.o(i.start_pass)
</UL>
<P><STRONG><a name="[4b1]"></a>get_byte</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, jdarith.o(i.get_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = get_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arith_decode
</UL>

<P><STRONG><a name="[4b7]"></a>process_restart</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, jdarith.o(i.process_restart))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = process_restart
</UL>
<BR>[Calls]<UL><LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu_DC_refine
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu_DC_first
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu_AC_refine
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu_AC_first
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu
</UL>

<P><STRONG><a name="[ba]"></a>start_pass</STRONG> (Thumb, 588 bytes, Stack size 40 bytes, jdarith.o(i.start_pass))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = start_pass
</UL>
<BR>[Calls]<UL><LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdarith.o(i.jinit_arith_decoder)
</UL>
<P><STRONG><a name="[ed]"></a>fill_mem_input_buffer</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, jdatasrc.o(i.fill_mem_input_buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fill_mem_input_buffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdatasrc.o(i.jpeg_mem_src)
</UL>
<P><STRONG><a name="[ec]"></a>init_mem_source</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, jdatasrc.o(i.init_mem_source))
<BR>[Address Reference Count : 1]<UL><LI> jdatasrc.o(i.jpeg_mem_src)
</UL>
<P><STRONG><a name="[ee]"></a>skip_input_data</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, jdatasrc.o(i.skip_input_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = skip_input_data
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdatasrc.o(i.jpeg_mem_src)
</UL>
<P><STRONG><a name="[f0]"></a>term_source</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, jdatasrc.o(i.term_source))
<BR>[Address Reference Count : 1]<UL><LI> jdatasrc.o(i.jpeg_mem_src)
</UL>
<P><STRONG><a name="[c6]"></a>decompress_onepass</STRONG> (Thumb, 376 bytes, Stack size 80 bytes, jdcoefct.o(i.decompress_onepass))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = decompress_onepass
</UL>
<BR>[Calls]<UL><LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_iMCU_row
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdcoefct.o(i.jinit_d_coef_controller)
</UL>
<P><STRONG><a name="[c5]"></a>dummy_consume_data</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, jdcoefct.o(i.dummy_consume_data))
<BR>[Address Reference Count : 1]<UL><LI> jdcoefct.o(i.jinit_d_coef_controller)
</UL>
<P><STRONG><a name="[4bb]"></a>start_iMCU_row</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, jdcoefct.o(i.start_iMCU_row))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_input_pass
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decompress_onepass
</UL>

<P><STRONG><a name="[c3]"></a>start_input_pass</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, jdcoefct.o(i.start_input_pass))
<BR><BR>[Calls]<UL><LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_iMCU_row
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdcoefct.o(i.jinit_d_coef_controller)
</UL>
<P><STRONG><a name="[c4]"></a>start_output_pass</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, jdcoefct.o(i.start_output_pass))
<BR>[Address Reference Count : 1]<UL><LI> jdcoefct.o(i.jinit_d_coef_controller)
</UL>
<P><STRONG><a name="[4d1]"></a>build_ycc_rgb_table</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, jdcolor.o(i.build_ycc_rgb_table))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = build_ycc_rgb_table
</UL>
<BR>[Called By]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_color_deconverter
</UL>

<P><STRONG><a name="[c0]"></a>gray_rgb_convert</STRONG> (Thumb, 52 bytes, Stack size 20 bytes, jdcolor.o(i.gray_rgb_convert))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gray_rgb_convert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdcolor.o(i.jinit_color_deconverter)
</UL>
<P><STRONG><a name="[bd]"></a>grayscale_convert</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, jdcolor.o(i.grayscale_convert))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = grayscale_convert &rArr; jcopy_sample_rows
</UL>
<BR>[Calls]<UL><LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jcopy_sample_rows
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdcolor.o(i.jinit_color_deconverter)
</UL>
<P><STRONG><a name="[bc]"></a>null_convert</STRONG> (Thumb, 70 bytes, Stack size 28 bytes, jdcolor.o(i.null_convert))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = null_convert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdcolor.o(i.jinit_color_deconverter)
</UL>
<P><STRONG><a name="[c1]"></a>rgb_convert</STRONG> (Thumb, 84 bytes, Stack size 28 bytes, jdcolor.o(i.rgb_convert))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = rgb_convert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdcolor.o(i.jinit_color_deconverter)
</UL>
<P><STRONG><a name="[be]"></a>rgb_gray_convert</STRONG> (Thumb, 112 bytes, Stack size 36 bytes, jdcolor.o(i.rgb_gray_convert))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = rgb_gray_convert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdcolor.o(i.jinit_color_deconverter)
</UL>
<P><STRONG><a name="[bb]"></a>start_pass_dcolor</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, jdcolor.o(i.start_pass_dcolor))
<BR>[Address Reference Count : 1]<UL><LI> jdcolor.o(i.jinit_color_deconverter)
</UL>
<P><STRONG><a name="[bf]"></a>ycc_rgb_convert</STRONG> (Thumb, 146 bytes, Stack size 64 bytes, jdcolor.o(i.ycc_rgb_convert))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ycc_rgb_convert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdcolor.o(i.jinit_color_deconverter)
</UL>
<P><STRONG><a name="[c2]"></a>ycck_cmyk_convert</STRONG> (Thumb, 176 bytes, Stack size 68 bytes, jdcolor.o(i.ycck_cmyk_convert))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = ycck_cmyk_convert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdcolor.o(i.jinit_color_deconverter)
</UL>
<P><STRONG><a name="[cd]"></a>start_pass</STRONG> (Thumb, 400 bytes, Stack size 64 bytes, jddctmgr.o(i.start_pass))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = start_pass &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jddctmgr.o(i.jinit_inverse_dct)
</UL>
<P><STRONG><a name="[112]"></a>decode_mcu</STRONG> (Thumb, 724 bytes, Stack size 136 bytes, jdhuff.o(i.decode_mcu))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = decode_mcu &rArr; jpeg_huff_decode &rArr; jpeg_fill_bit_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_restart
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_huff_decode
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_fill_bit_buffer
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdhuff.o(i.start_pass_huff_decoder)
</UL>
<P><STRONG><a name="[10e]"></a>decode_mcu_AC_first</STRONG> (Thumb, 358 bytes, Stack size 72 bytes, jdhuff.o(i.decode_mcu_AC_first))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = decode_mcu_AC_first &rArr; jpeg_huff_decode &rArr; jpeg_fill_bit_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_restart
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_huff_decode
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_fill_bit_buffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdhuff.o(i.start_pass_huff_decoder)
</UL>
<P><STRONG><a name="[10d]"></a>decode_mcu_AC_refine</STRONG> (Thumb, 650 bytes, Stack size 376 bytes, jdhuff.o(i.decode_mcu_AC_refine))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = decode_mcu_AC_refine &rArr; jpeg_huff_decode &rArr; jpeg_fill_bit_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_restart
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_huff_decode
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_fill_bit_buffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdhuff.o(i.start_pass_huff_decoder)
</UL>
<P><STRONG><a name="[10f]"></a>decode_mcu_DC_first</STRONG> (Thumb, 342 bytes, Stack size 96 bytes, jdhuff.o(i.decode_mcu_DC_first))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = decode_mcu_DC_first &rArr; jpeg_huff_decode &rArr; jpeg_fill_bit_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_restart
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_huff_decode
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_fill_bit_buffer
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdhuff.o(i.start_pass_huff_decoder)
</UL>
<P><STRONG><a name="[110]"></a>decode_mcu_DC_refine</STRONG> (Thumb, 146 bytes, Stack size 48 bytes, jdhuff.o(i.decode_mcu_DC_refine))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = decode_mcu_DC_refine &rArr; jpeg_fill_bit_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_restart
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_fill_bit_buffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdhuff.o(i.start_pass_huff_decoder)
</UL>
<P><STRONG><a name="[111]"></a>decode_mcu_sub</STRONG> (Thumb, 748 bytes, Stack size 144 bytes, jdhuff.o(i.decode_mcu_sub))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = decode_mcu_sub &rArr; jpeg_huff_decode &rArr; jpeg_fill_bit_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_restart
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_huff_decode
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_fill_bit_buffer
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdhuff.o(i.start_pass_huff_decoder)
</UL>
<P><STRONG><a name="[4b9]"></a>jpeg_fill_bit_buffer</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, jdhuff.o(i.jpeg_fill_bit_buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = jpeg_fill_bit_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_huff_decode
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu_sub
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu_DC_refine
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu_DC_first
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu_AC_refine
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu_AC_first
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu
</UL>

<P><STRONG><a name="[4ba]"></a>jpeg_huff_decode</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, jdhuff.o(i.jpeg_huff_decode))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = jpeg_huff_decode &rArr; jpeg_fill_bit_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_fill_bit_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu_sub
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu_DC_first
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu_AC_refine
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu_AC_first
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu
</UL>

<P><STRONG><a name="[4e9]"></a>jpeg_make_d_derived_tbl</STRONG> (Thumb, 470 bytes, Stack size 1384 bytes, jdhuff.o(i.jpeg_make_d_derived_tbl))
<BR><BR>[Stack]<UL><LI>Max Depth = 1388<LI>Call Chain = jpeg_make_d_derived_tbl &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_pass_huff_decoder
</UL>

<P><STRONG><a name="[4b8]"></a>process_restart</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, jdhuff.o(i.process_restart))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = process_restart
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu_sub
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu_DC_refine
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu_DC_first
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu_AC_refine
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu_AC_first
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu
</UL>

<P><STRONG><a name="[c9]"></a>start_pass_huff_decoder</STRONG> (Thumb, 972 bytes, Stack size 40 bytes, jdhuff.o(i.start_pass_huff_decoder))
<BR><BR>[Stack]<UL><LI>Max Depth = 1428<LI>Call Chain = start_pass_huff_decoder &rArr; jpeg_make_d_derived_tbl &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_make_d_derived_tbl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdhuff.o(i.jinit_huff_decoder)
</UL>
<P><STRONG><a name="[b4]"></a>consume_markers</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, jdinput.o(i.consume_markers))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = consume_markers &rArr; start_input_pass &rArr; per_scan_setup
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_input_pass
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initial_setup
</UL>
<BR>[Address Reference Count : 3]<UL><LI> jdinput.o(i.finish_input_pass)
<LI> jdinput.o(i.jinit_input_controller)
<LI> jdinput.o(i.reset_input_controller)
</UL>
<P><STRONG><a name="[cc]"></a>finish_input_pass</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, jdinput.o(i.finish_input_pass))
<BR>[Address Reference Count : 1]<UL><LI> jdinput.o(i.jinit_input_controller)
</UL>
<P><STRONG><a name="[4b2]"></a>initial_setup</STRONG> (Thumb, 644 bytes, Stack size 32 bytes, jdinput.o(i.initial_setup))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = initial_setup
</UL>
<BR>[Calls]<UL><LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jdiv_round_up
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;consume_markers
</UL>

<P><STRONG><a name="[4f3]"></a>per_scan_setup</STRONG> (Thumb, 282 bytes, Stack size 24 bytes, jdinput.o(i.per_scan_setup))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = per_scan_setup
</UL>
<BR>[Calls]<UL><LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jdiv_round_up
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_input_pass
</UL>

<P><STRONG><a name="[ca]"></a>reset_input_controller</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, jdinput.o(i.reset_input_controller))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = reset_input_controller
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdinput.o(i.jinit_input_controller)
</UL>
<P><STRONG><a name="[cb]"></a>start_input_pass</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, jdinput.o(i.start_input_pass))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = start_input_pass &rArr; per_scan_setup
</UL>
<BR>[Calls]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;per_scan_setup
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;consume_markers
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdinput.o(i.jinit_input_controller)
</UL>
<P><STRONG><a name="[4d4]"></a>alloc_funny_pointers</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, jdmainct.o(i.alloc_funny_pointers))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = alloc_funny_pointers
</UL>
<BR>[Called By]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_d_main_controller
</UL>

<P><STRONG><a name="[513]"></a>make_funny_pointers</STRONG> (Thumb, 162 bytes, Stack size 36 bytes, jdmainct.o(i.make_funny_pointers))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = make_funny_pointers
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_pass_main
</UL>

<P><STRONG><a name="[113]"></a>process_data_context_main</STRONG> (Thumb, 470 bytes, Stack size 64 bytes, jdmainct.o(i.process_data_context_main))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = process_data_context_main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdmainct.o(i.start_pass_main)
</UL>
<P><STRONG><a name="[115]"></a>process_data_crank_post</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, jdmainct.o(i.process_data_crank_post))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = process_data_crank_post
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdmainct.o(i.start_pass_main)
</UL>
<P><STRONG><a name="[114]"></a>process_data_simple_main</STRONG> (Thumb, 90 bytes, Stack size 40 bytes, jdmainct.o(i.process_data_simple_main))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = process_data_simple_main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdmainct.o(i.start_pass_main)
</UL>
<P><STRONG><a name="[c7]"></a>start_pass_main</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, jdmainct.o(i.start_pass_main))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = start_pass_main &rArr; make_funny_pointers
</UL>
<BR>[Calls]<UL><LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;make_funny_pointers
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdmainct.o(i.jinit_d_main_controller)
</UL>
<P><STRONG><a name="[4c8]"></a>examine_app0</STRONG> (Thumb, 340 bytes, Stack size 16 bytes, jdmarker.o(i.examine_app0))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = examine_app0
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_interesting_appn
</UL>

<P><STRONG><a name="[4c9]"></a>examine_app14</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, jdmarker.o(i.examine_app14))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = examine_app14
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_interesting_appn
</UL>

<P><STRONG><a name="[506]"></a>first_marker</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, jdmarker.o(i.first_marker))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = first_marker
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_markers
</UL>

<P><STRONG><a name="[50a]"></a>get_dac</STRONG> (Thumb, 264 bytes, Stack size 32 bytes, jdmarker.o(i.get_dac))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = get_dac
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_markers
</UL>

<P><STRONG><a name="[4c4]"></a>get_dht</STRONG> (Thumb, 516 bytes, Stack size 344 bytes, jdmarker.o(i.get_dht))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = get_dht &rArr; jpeg_alloc_huff_table
</UL>
<BR>[Calls]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_alloc_huff_table
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_markers
</UL>

<P><STRONG><a name="[4c6]"></a>get_dqt</STRONG> (Thumb, 538 bytes, Stack size 48 bytes, jdmarker.o(i.get_dqt))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = get_dqt &rArr; jpeg_alloc_quant_table
</UL>
<BR>[Calls]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_alloc_quant_table
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_markers
</UL>

<P><STRONG><a name="[50b]"></a>get_dri</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, jdmarker.o(i.get_dri))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = get_dri
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_markers
</UL>

<P><STRONG><a name="[d2]"></a>get_interesting_appn</STRONG> (Thumb, 232 bytes, Stack size 48 bytes, jdmarker.o(i.get_interesting_appn))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = get_interesting_appn &rArr; examine_app14
</UL>
<BR>[Calls]<UL><LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;examine_app14
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;examine_app0
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdmarker.o(i.jinit_marker_reader)
</UL>
<P><STRONG><a name="[508]"></a>get_sof</STRONG> (Thumb, 542 bytes, Stack size 32 bytes, jdmarker.o(i.get_sof))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = get_sof
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_markers
</UL>

<P><STRONG><a name="[507]"></a>get_soi</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, jdmarker.o(i.get_soi))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = get_soi
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_markers
</UL>

<P><STRONG><a name="[509]"></a>get_sos</STRONG> (Thumb, 506 bytes, Stack size 40 bytes, jdmarker.o(i.get_sos))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = get_sos
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_markers
</UL>

<P><STRONG><a name="[4ea]"></a>next_marker</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, jdmarker.o(i.next_marker))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = next_marker
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_restart_marker
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_markers
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_resync_to_restart
</UL>

<P><STRONG><a name="[d0]"></a>read_markers</STRONG> (Thumb, 402 bytes, Stack size 16 bytes, jdmarker.o(i.read_markers))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = read_markers &rArr; get_dht &rArr; jpeg_alloc_huff_table
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;skip_variable
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;next_marker
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sos
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_soi
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sof
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_dri
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_dqt
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_dht
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_dac
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;first_marker
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdmarker.o(i.jinit_marker_reader)
</UL>
<P><STRONG><a name="[d1]"></a>read_restart_marker</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, jdmarker.o(i.read_restart_marker))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = read_restart_marker &rArr; next_marker
</UL>
<BR>[Calls]<UL><LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;next_marker
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdmarker.o(i.jinit_marker_reader)
</UL>
<P><STRONG><a name="[cf]"></a>reset_marker_reader</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, jdmarker.o(i.reset_marker_reader))
<BR><BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_marker_reader
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdmarker.o(i.jinit_marker_reader)
</UL>
<P><STRONG><a name="[ce]"></a>skip_variable</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, jdmarker.o(i.skip_variable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = skip_variable
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_markers
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdmarker.o(i.jinit_marker_reader)
</UL>
<P><STRONG><a name="[d4]"></a>finish_output_pass</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, jdmaster.o(i.finish_output_pass))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = finish_output_pass
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdmaster.o(i.jinit_master_decompress)
</UL>
<P><STRONG><a name="[4da]"></a>master_selection</STRONG> (Thumb, 342 bytes, Stack size 16 bytes, jdmaster.o(i.master_selection))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = master_selection &rArr; jinit_1pass_quantizer &rArr; create_colormap &rArr; select_ncolors
</UL>
<BR>[Calls]<UL><LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_upsampler
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_merged_upsampler
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_d_post_controller
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_2pass_quantizer
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_1pass_quantizer
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_calc_output_dimensions
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;use_merged_upsample
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_d_main_controller
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_huff_decoder
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_inverse_dct
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_color_deconverter
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_d_coef_controller
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_arith_decoder
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_master_decompress
</UL>

<P><STRONG><a name="[d3]"></a>prepare_for_output_pass</STRONG> (Thumb, 264 bytes, Stack size 16 bytes, jdmaster.o(i.prepare_for_output_pass))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prepare_for_output_pass
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdmaster.o(i.jinit_master_decompress)
</UL>
<P><STRONG><a name="[4e5]"></a>use_merged_upsample</STRONG> (Thumb, 144 bytes, Stack size 0 bytes, jdmaster.o(i.use_merged_upsample))
<BR><BR>[Called By]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_calc_output_dimensions
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;master_selection
</UL>

<P><STRONG><a name="[4df]"></a>build_ycc_rgb_table</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, jdmerge.o(i.build_ycc_rgb_table))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = build_ycc_rgb_table
</UL>
<BR>[Called By]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_merged_upsampler
</UL>

<P><STRONG><a name="[e2]"></a>h2v1_merged_upsample</STRONG> (Thumb, 240 bytes, Stack size 52 bytes, jdmerge.o(i.h2v1_merged_upsample))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = h2v1_merged_upsample
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdmerge.o(i.jinit_merged_upsampler)
</UL>
<P><STRONG><a name="[e4]"></a>h2v2_merged_upsample</STRONG> (Thumb, 374 bytes, Stack size 72 bytes, jdmerge.o(i.h2v2_merged_upsample))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = h2v2_merged_upsample
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdmerge.o(i.jinit_merged_upsampler)
</UL>
<P><STRONG><a name="[e1]"></a>merged_1v_upsample</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, jdmerge.o(i.merged_1v_upsample))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = merged_1v_upsample
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdmerge.o(i.jinit_merged_upsampler)
</UL>
<P><STRONG><a name="[e3]"></a>merged_2v_upsample</STRONG> (Thumb, 146 bytes, Stack size 40 bytes, jdmerge.o(i.merged_2v_upsample))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = merged_2v_upsample &rArr; jcopy_sample_rows
</UL>
<BR>[Calls]<UL><LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jcopy_sample_rows
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdmerge.o(i.jinit_merged_upsampler)
</UL>
<P><STRONG><a name="[e0]"></a>start_pass_merged_upsample</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, jdmerge.o(i.start_pass_merged_upsample))
<BR>[Address Reference Count : 1]<UL><LI> jdmerge.o(i.jinit_merged_upsampler)
</UL>
<P><STRONG><a name="[10a]"></a>post_process_1pass</STRONG> (Thumb, 88 bytes, Stack size 40 bytes, jdpostct.o(i.post_process_1pass))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = post_process_1pass
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdpostct.o(i.start_pass_dpost)
</UL>
<P><STRONG><a name="[10c]"></a>post_process_2pass</STRONG> (Thumb, 130 bytes, Stack size 40 bytes, jdpostct.o(i.post_process_2pass))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = post_process_2pass
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdpostct.o(i.start_pass_dpost)
</UL>
<P><STRONG><a name="[10b]"></a>post_process_prepass</STRONG> (Thumb, 138 bytes, Stack size 48 bytes, jdpostct.o(i.post_process_prepass))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = post_process_prepass
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdpostct.o(i.start_pass_dpost)
</UL>
<P><STRONG><a name="[c8]"></a>start_pass_dpost</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, jdpostct.o(i.start_pass_dpost))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = start_pass_dpost
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdpostct.o(i.jinit_d_post_controller)
</UL>
<P><STRONG><a name="[e7]"></a>fullsize_upsample</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, jdsample.o(i.fullsize_upsample))
<BR>[Address Reference Count : 1]<UL><LI> jdsample.o(i.jinit_upsampler)
</UL>
<P><STRONG><a name="[e9]"></a>h2v1_upsample</STRONG> (Thumb, 50 bytes, Stack size 20 bytes, jdsample.o(i.h2v1_upsample))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = h2v1_upsample
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdsample.o(i.jinit_upsampler)
</UL>
<P><STRONG><a name="[ea]"></a>h2v2_upsample</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, jdsample.o(i.h2v2_upsample))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = h2v2_upsample &rArr; jcopy_sample_rows
</UL>
<BR>[Calls]<UL><LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jcopy_sample_rows
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdsample.o(i.jinit_upsampler)
</UL>
<P><STRONG><a name="[eb]"></a>int_upsample</STRONG> (Thumb, 118 bytes, Stack size 40 bytes, jdsample.o(i.int_upsample))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = int_upsample &rArr; jcopy_sample_rows
</UL>
<BR>[Calls]<UL><LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jcopy_sample_rows
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdsample.o(i.jinit_upsampler)
</UL>
<P><STRONG><a name="[e8]"></a>noop_upsample</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, jdsample.o(i.noop_upsample))
<BR>[Address Reference Count : 1]<UL><LI> jdsample.o(i.jinit_upsampler)
</UL>
<P><STRONG><a name="[e6]"></a>sep_upsample</STRONG> (Thumb, 176 bytes, Stack size 40 bytes, jdsample.o(i.sep_upsample))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = sep_upsample
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdsample.o(i.jinit_upsampler)
</UL>
<P><STRONG><a name="[e5]"></a>start_pass_upsample</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, jdsample.o(i.start_pass_upsample))
<BR>[Address Reference Count : 1]<UL><LI> jdsample.o(i.jinit_upsampler)
</UL>
<P><STRONG><a name="[f2]"></a>emit_message</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, jerror.o(i.emit_message))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = emit_message
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jerror.o(i.jpeg_std_error)
</UL>
<P><STRONG><a name="[f1]"></a>error_exit</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, jerror.o(i.error_exit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = error_exit &rArr; jpeg_destroy
</UL>
<BR>[Calls]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_destroy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jerror.o(i.jpeg_std_error)
</UL>
<P><STRONG><a name="[f4]"></a>format_message</STRONG> (Thumb, 136 bytes, Stack size 40 bytes, jerror.o(i.format_message))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = format_message &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jerror.o(i.jpeg_std_error)
</UL>
<P><STRONG><a name="[f3]"></a>output_message</STRONG> (Thumb, 16 bytes, Stack size 208 bytes, jerror.o(i.output_message))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = output_message
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jerror.o(i.jpeg_std_error)
</UL>
<P><STRONG><a name="[f5]"></a>reset_error_mgr</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, jerror.o(i.reset_error_mgr))
<BR>[Address Reference Count : 1]<UL><LI> jerror.o(i.jpeg_std_error)
</UL>
<P><STRONG><a name="[dd]"></a>access_virt_barray</STRONG> (Thumb, 258 bytes, Stack size 32 bytes, jmemmgr.o(i.access_virt_barray))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = access_virt_barray &rArr; do_barray_io
</UL>
<BR>[Calls]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_barray_io
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jmemmgr.o(i.jinit_memory_mgr)
</UL>
<P><STRONG><a name="[dc]"></a>access_virt_sarray</STRONG> (Thumb, 256 bytes, Stack size 32 bytes, jmemmgr.o(i.access_virt_sarray))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = access_virt_sarray &rArr; do_sarray_io
</UL>
<BR>[Calls]<UL><LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_sarray_io
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jmemmgr.o(i.jinit_memory_mgr)
</UL>
<P><STRONG><a name="[d8]"></a>alloc_barray</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, jmemmgr.o(i.alloc_barray))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = alloc_barray &rArr; alloc_small &rArr; jpeg_get_small &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_small
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_large
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realize_virt_arrays
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jmemmgr.o(i.jinit_memory_mgr)
</UL>
<P><STRONG><a name="[d6]"></a>alloc_large</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, jmemmgr.o(i.alloc_large))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = alloc_large &rArr; jpeg_get_large &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_get_large
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;out_of_memory
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_sarray
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_barray
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jmemmgr.o(i.jinit_memory_mgr)
</UL>
<P><STRONG><a name="[d7]"></a>alloc_sarray</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, jmemmgr.o(i.alloc_sarray))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = alloc_sarray &rArr; alloc_small &rArr; jpeg_get_small &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_small
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_large
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realize_virt_arrays
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jmemmgr.o(i.jinit_memory_mgr)
</UL>
<P><STRONG><a name="[d5]"></a>alloc_small</STRONG> (Thumb, 210 bytes, Stack size 32 bytes, jmemmgr.o(i.alloc_small))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = alloc_small &rArr; jpeg_get_small &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_get_small
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;out_of_memory
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;request_virt_sarray
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;request_virt_barray
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_sarray
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_barray
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jmemmgr.o(i.jinit_memory_mgr)
</UL>
<P><STRONG><a name="[4aa]"></a>do_barray_io</STRONG> (Thumb, 118 bytes, Stack size 40 bytes, jmemmgr.o(i.do_barray_io))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = do_barray_io
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;access_virt_barray
</UL>

<P><STRONG><a name="[4ac]"></a>do_sarray_io</STRONG> (Thumb, 116 bytes, Stack size 40 bytes, jmemmgr.o(i.do_sarray_io))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = do_sarray_io
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;access_virt_sarray
</UL>

<P><STRONG><a name="[de]"></a>free_pool</STRONG> (Thumb, 198 bytes, Stack size 32 bytes, jmemmgr.o(i.free_pool))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = free_pool &rArr; jpeg_free_small &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_free_small
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_free_large
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;self_destruct
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jmemmgr.o(i.jinit_memory_mgr)
</UL>
<P><STRONG><a name="[4ad]"></a>out_of_memory</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, jmemmgr.o(i.out_of_memory))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_small
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_large
</UL>

<P><STRONG><a name="[db]"></a>realize_virt_arrays</STRONG> (Thumb, 278 bytes, Stack size 32 bytes, jmemmgr.o(i.realize_virt_arrays))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = realize_virt_arrays &rArr; alloc_sarray &rArr; alloc_small &rArr; jpeg_get_small &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_open_backing_store
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_mem_available
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_sarray
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_barray
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jmemmgr.o(i.jinit_memory_mgr)
</UL>
<P><STRONG><a name="[da]"></a>request_virt_barray</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, jmemmgr.o(i.request_virt_barray))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = request_virt_barray &rArr; alloc_small &rArr; jpeg_get_small &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_small
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jmemmgr.o(i.jinit_memory_mgr)
</UL>
<P><STRONG><a name="[d9]"></a>request_virt_sarray</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, jmemmgr.o(i.request_virt_sarray))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = request_virt_sarray &rArr; alloc_small &rArr; jpeg_get_small &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_small
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jmemmgr.o(i.jinit_memory_mgr)
</UL>
<P><STRONG><a name="[df]"></a>self_destruct</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, jmemmgr.o(i.self_destruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = self_destruct &rArr; free_pool &rArr; jpeg_free_small &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_mem_term
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_free_small
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_pool
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jmemmgr.o(i.jinit_memory_mgr)
</UL>
<P><STRONG><a name="[4cd]"></a>alloc_fs_workspace</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, jquant1.o(i.alloc_fs_workspace))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = alloc_fs_workspace
</UL>
<BR>[Called By]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_1pass_quantizer
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_pass_1_quant
</UL>

<P><STRONG><a name="[100]"></a>color_quantize</STRONG> (Thumb, 86 bytes, Stack size 36 bytes, jquant1.o(i.color_quantize))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = color_quantize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jquant1.o(i.start_pass_1_quant)
</UL>
<P><STRONG><a name="[101]"></a>color_quantize3</STRONG> (Thumb, 92 bytes, Stack size 36 bytes, jquant1.o(i.color_quantize3))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = color_quantize3
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jquant1.o(i.start_pass_1_quant)
</UL>
<P><STRONG><a name="[4b3]"></a>create_colorindex</STRONG> (Thumb, 208 bytes, Stack size 40 bytes, jquant1.o(i.create_colorindex))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = create_colorindex
</UL>
<BR>[Calls]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;largest_input_value
</UL>
<BR>[Called By]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_1pass_quantizer
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_pass_1_quant
</UL>

<P><STRONG><a name="[4b5]"></a>create_colormap</STRONG> (Thumb, 198 bytes, Stack size 40 bytes, jquant1.o(i.create_colormap))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = create_colormap &rArr; select_ncolors
</UL>
<BR>[Calls]<UL><LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;select_ncolors
</UL>
<BR>[Called By]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_1pass_quantizer
</UL>

<P><STRONG><a name="[512]"></a>create_odither_tables</STRONG> (Thumb, 156 bytes, Stack size 40 bytes, jquant1.o(i.create_odither_tables))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = create_odither_tables
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_pass_1_quant
</UL>

<P><STRONG><a name="[b6]"></a>finish_pass_1_quant</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, jquant1.o(i.finish_pass_1_quant))
<BR>[Address Reference Count : 1]<UL><LI> jquant1.o(i.jinit_1pass_quantizer)
</UL>
<P><STRONG><a name="[4b4]"></a>largest_input_value</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, jquant1.o(i.largest_input_value))
<BR><BR>[Called By]<UL><LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_colorindex
</UL>

<P><STRONG><a name="[b7]"></a>new_color_map_1_quant</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, jquant1.o(i.new_color_map_1_quant))
<BR>[Address Reference Count : 1]<UL><LI> jquant1.o(i.jinit_1pass_quantizer)
</UL>
<P><STRONG><a name="[103]"></a>quantize3_ord_dither</STRONG> (Thumb, 176 bytes, Stack size 72 bytes, jquant1.o(i.quantize3_ord_dither))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = quantize3_ord_dither
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jquant1.o(i.start_pass_1_quant)
</UL>
<P><STRONG><a name="[104]"></a>quantize_fs_dither</STRONG> (Thumb, 282 bytes, Stack size 80 bytes, jquant1.o(i.quantize_fs_dither))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = quantize_fs_dither
</UL>
<BR>[Calls]<UL><LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jquant1.o(i.start_pass_1_quant)
</UL>
<P><STRONG><a name="[102]"></a>quantize_ord_dither</STRONG> (Thumb, 148 bytes, Stack size 56 bytes, jquant1.o(i.quantize_ord_dither))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = quantize_ord_dither
</UL>
<BR>[Calls]<UL><LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jquant1.o(i.start_pass_1_quant)
</UL>
<P><STRONG><a name="[4b6]"></a>select_ncolors</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, jquant1.o(i.select_ncolors))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = select_ncolors
</UL>
<BR>[Called By]<UL><LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_colormap
</UL>

<P><STRONG><a name="[b5]"></a>start_pass_1_quant</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, jquant1.o(i.start_pass_1_quant))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = start_pass_1_quant &rArr; create_odither_tables
</UL>
<BR>[Calls]<UL><LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_odither_tables
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_colorindex
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_fs_workspace
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jquant1.o(i.jinit_1pass_quantizer)
</UL>
<P><STRONG><a name="[50e]"></a>compute_color</STRONG> (Thumb, 198 bytes, Stack size 72 bytes, jquant2.o(i.compute_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = compute_color
</UL>
<BR>[Called By]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;select_colors
</UL>

<P><STRONG><a name="[4bd]"></a>fill_inverse_cmap</STRONG> (Thumb, 148 bytes, Stack size 432 bytes, jquant2.o(i.fill_inverse_cmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 1520<LI>Call Chain = fill_inverse_cmap &rArr; find_nearby_colors
</UL>
<BR>[Calls]<UL><LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_nearby_colors
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_best_colors
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pass2_no_dither
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pass2_fs_dither
</UL>

<P><STRONG><a name="[4bf]"></a>find_best_colors</STRONG> (Thumb, 210 bytes, Stack size 572 bytes, jquant2.o(i.find_best_colors))
<BR><BR>[Stack]<UL><LI>Max Depth = 572<LI>Call Chain = find_best_colors
</UL>
<BR>[Called By]<UL><LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_inverse_cmap
</UL>

<P><STRONG><a name="[4be]"></a>find_nearby_colors</STRONG> (Thumb, 334 bytes, Stack size 1088 bytes, jquant2.o(i.find_nearby_colors))
<BR><BR>[Stack]<UL><LI>Max Depth = 1088<LI>Call Chain = find_nearby_colors
</UL>
<BR>[Called By]<UL><LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_inverse_cmap
</UL>

<P><STRONG><a name="[106]"></a>finish_pass1</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, jquant2.o(i.finish_pass1))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = finish_pass1 &rArr; select_colors &rArr; median_cut &rArr; update_box
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;select_colors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jquant2.o(i.start_pass_2_quant)
</UL>
<P><STRONG><a name="[108]"></a>finish_pass2</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, jquant2.o(i.finish_pass2))
<BR>[Address Reference Count : 1]<UL><LI> jquant2.o(i.start_pass_2_quant)
</UL>
<P><STRONG><a name="[4cf]"></a>init_error_limit</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, jquant2.o(i.init_error_limit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = init_error_limit
</UL>
<BR>[Called By]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_2pass_quantizer
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_pass_2_quant
</UL>

<P><STRONG><a name="[4f1]"></a>median_cut</STRONG> (Thumb, 300 bytes, Stack size 64 bytes, jquant2.o(i.median_cut))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = median_cut &rArr; update_box
</UL>
<BR>[Calls]<UL><LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_box
</UL>
<BR>[Called By]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;select_colors
</UL>

<P><STRONG><a name="[b9]"></a>new_color_map_2_quant</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, jquant2.o(i.new_color_map_2_quant))
<BR>[Address Reference Count : 1]<UL><LI> jquant2.o(i.jinit_2pass_quantizer)
</UL>
<P><STRONG><a name="[109]"></a>pass2_fs_dither</STRONG> (Thumb, 486 bytes, Stack size 168 bytes, jquant2.o(i.pass2_fs_dither))
<BR><BR>[Stack]<UL><LI>Max Depth = 1688<LI>Call Chain = pass2_fs_dither &rArr; fill_inverse_cmap &rArr; find_nearby_colors
</UL>
<BR>[Calls]<UL><LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_inverse_cmap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jquant2.o(i.start_pass_2_quant)
</UL>
<P><STRONG><a name="[107]"></a>pass2_no_dither</STRONG> (Thumb, 104 bytes, Stack size 56 bytes, jquant2.o(i.pass2_no_dither))
<BR><BR>[Stack]<UL><LI>Max Depth = 1576<LI>Call Chain = pass2_no_dither &rArr; fill_inverse_cmap &rArr; find_nearby_colors
</UL>
<BR>[Calls]<UL><LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_inverse_cmap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jquant2.o(i.start_pass_2_quant)
</UL>
<P><STRONG><a name="[105]"></a>prescan_quantize</STRONG> (Thumb, 104 bytes, Stack size 28 bytes, jquant2.o(i.prescan_quantize))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = prescan_quantize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jquant2.o(i.start_pass_2_quant)
</UL>
<P><STRONG><a name="[4c0]"></a>select_colors</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, jquant2.o(i.select_colors))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = select_colors &rArr; median_cut &rArr; update_box
</UL>
<BR>[Calls]<UL><LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_box
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;median_cut
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compute_color
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;finish_pass1
</UL>

<P><STRONG><a name="[b8]"></a>start_pass_2_quant</STRONG> (Thumb, 220 bytes, Stack size 24 bytes, jquant2.o(i.start_pass_2_quant))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = start_pass_2_quant &rArr; init_error_limit
</UL>
<BR>[Calls]<UL><LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_error_limit
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jquant2.o(i.jinit_2pass_quantizer)
</UL>
<P><STRONG><a name="[4f2]"></a>update_box</STRONG> (Thumb, 584 bytes, Stack size 40 bytes, jquant2.o(i.update_box))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = update_box
</UL>
<BR>[Called By]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;select_colors
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;median_cut
</UL>

<P><STRONG><a name="[258]"></a>__sti___15_Application_cpp_63cd8d44</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, application.o(i.__sti___15_Application_cpp_63cd8d44))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __sti___15_Application_cpp_63cd8d44 &rArr; touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.init_array)
</UL>
<P><STRONG><a name="[259]"></a>__sti___7_LCD_cpp_86507772</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(i.__sti___7_LCD_cpp_86507772))
<BR>[Address Reference Count : 1]<UL><LI> lcd.o(.init_array)
</UL>
<P><STRONG><a name="[8a]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
